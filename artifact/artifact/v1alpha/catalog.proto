syntax = "proto3";

package artifact.artifact.v1alpha;

// Google API
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
// Protocol Buffers Well-Known Types
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

// Catalog represents a catalog.
message Catalog {
  option (google.api.resource) = {pattern: "namespaces/{namespace}/catalogs/{catalog}"};

  // EmbeddingConfig defines the embedding configuration for a catalog
  message EmbeddingConfig {
    // The AI model family used for embeddings (e.g., "gemini", "openai")
    string model_family = 1;
    // The dimensionality of the embedding vectors
    uint32 dimensionality = 2;
  }

  // The catalog uid (internal UUID).
  string uid = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The catalog id (user-provided or system-generated).
  string id = 2 [(google.api.field_behavior) = IMMUTABLE];
  // The resource name of the catalog.
  // Format: `namespaces/{namespace}/catalogs/{catalog}`.
  string name = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The catalog description.
  string description = 4 [(google.api.field_behavior) = OPTIONAL];
  // The creation time of the catalog.
  google.protobuf.Timestamp create_time = 5 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The last update time of the catalog.
  google.protobuf.Timestamp update_time = 6 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The owner/namespace of the catalog.
  string owner_name = 7 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The catalog tags.
  repeated string tags = 8 [(google.api.field_behavior) = OPTIONAL];
  // The catalog converting pipelines.
  // Deprecated: Conversion is now handled by AI providers.
  repeated string converting_pipelines = 9 [
    deprecated = true,
    (google.api.field_behavior) = OPTIONAL
  ];
  // The catalog splitting pipelines.
  // Deprecated: Chunking is now handled internally.
  repeated string splitting_pipelines = 10 [
    deprecated = true,
    (google.api.field_behavior) = OPTIONAL
  ];
  // The catalog embedding pipelines.
  // Deprecated: Use embedding_config instead.
  repeated string embedding_pipelines = 11 [
    deprecated = true,
    (google.api.field_behavior) = OPTIONAL
  ];
  // The downstream apps
  repeated string downstream_apps = 12 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The total files in catalog.
  uint32 total_files = 13 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The total tokens in catalog.
  uint32 total_tokens = 14 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The current used storage in catalog.
  uint64 used_storage = 15 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The catalog summarizing pipelines.
  // Deprecated: Summarization is now handled by AI providers.
  repeated string summarizing_pipelines = 16 [
    deprecated = true,
    (google.api.field_behavior) = OPTIONAL
  ];
  // The embedding configuration for the catalog.
  EmbeddingConfig embedding_config = 17 [(google.api.field_behavior) = OPTIONAL];
  // The UID of the active Milvus collection for this catalog.
  // This supports collection versioning for embedding dimension changes.
  string active_collection_uid = 18 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// Catalog Type. e.g. "persistent" or "ephemeral"
enum CatalogType {
  // UNSPECIFIED
  CATALOG_TYPE_UNSPECIFIED = 0;
  // PERSISTENT
  CATALOG_TYPE_PERSISTENT = 1;
  // EPHEMERAL
  CATALOG_TYPE_EPHEMERAL = 2;
}

// CreateCatalogRequest represents a request to create a catalog.
message CreateCatalogRequest {
  // The catalog's owner(namespaces).
  string namespace_id = 1 [(google.api.field_behavior) = REQUIRED];
  // The catalog id (user-provided or auto-generated).
  string id = 2 [(google.api.field_behavior) = OPTIONAL];
  // The catalog description.
  string description = 3 [(google.api.field_behavior) = OPTIONAL];
  // The catalog tags.
  repeated string tags = 4 [(google.api.field_behavior) = OPTIONAL];
  // The catalog type. default is PERSISTENT
  CatalogType type = 5 [(google.api.field_behavior) = OPTIONAL];
  // Pipelines used for converting page-based documents (i.e., files with pdf,
  // doc[x] or ppt[x] extension) to Markdown. The strings in the list identify
  // the pipelines and MUST have the format
  // `{namespaceID}/{pipelineID}@{version}`. The pipeline recipes MUST have the
  // following variable and output fields:
  // ```yaml variable
  // variable:
  //   document_input:
  //     title: document-input
  //     description: Upload a document (PDF/DOCX/DOC/PPTX/PPT)
  //     type: file
  // ```
  // The `convert_result` output should be a list of strings, one per page.
  // ```yaml output
  // output:
  //  convert_result:
  //    title: convert-result
  //    value: ${merge-markdown-refinement.output.results[0]}
  // ```
  // Other variable and output fields will be ignored.
  //
  // The pipelines will be executed in order until one produces a successful,
  // non-empty result.
  //
  // If no pipelines are provided, a default pipeline will be used. For
  // non-document catalog files, the conversion pipeline is deterministic (such
  // files are typically trivial to convert and don't require a dedicated
  // pipeline to improve the conversion performance).
  repeated string converting_pipelines = 6 [(google.api.field_behavior) = OPTIONAL];

  // System ID to use for this catalog.
  // References a system configuration in the system table that defines how the knowledge base
  // will be created based on the system's RAG configurations including:
  // - AI model family (e.g., "openai", "gemini")
  // - Embedding vector dimensionality (e.g., 1536 for OpenAI, 3072 for Gemini)
  // - Chunking method
  // - Other RAG-related settings
  //
  // Available systems: "openai", "gemini", or custom systems defined in the system table.
  // If not specified, defaults to "openai" system.
  optional string system_id = 7 [(google.api.field_behavior) = OPTIONAL];
}

// CreateCatalogResponse represents a response for creating a catalog.
message CreateCatalogResponse {
  // The created catalog.
  Catalog catalog = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// GetCatalogRequest represents a request to get a catalog.
message GetCatalogRequest {
  // Namespace ID.
  string namespace_id = 1 [(google.api.field_behavior) = REQUIRED];
  // Catalog ID.
  string catalog_id = 2 [(google.api.field_behavior) = REQUIRED];
}

// GetCatalogResponse represents a response for getting a catalog.
message GetCatalogResponse {
  // The catalog resource.
  Catalog catalog = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// Request message for ListCatalogs(not include the ephemeral catalogs)
message ListCatalogsRequest {
  // User ID for which to list the catalogs
  string namespace_id = 1 [(google.api.field_behavior) = REQUIRED];
  // The maximum number of catalogs to return. If this parameter is unspecified,
  // at most 10 catalogs will be returned. The cap value for this parameter
  // is 100 (i.e. any value above that will be coerced to 100).
  optional int32 page_size = 2 [(google.api.field_behavior) = OPTIONAL];
  // Page token.
  optional string page_token = 3 [(google.api.field_behavior) = OPTIONAL];
  // Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter expression.
  // - `id="<catalog_id>"` or `uid="<uuid>"` - Filter by specific catalog ID/UID
  // - `q="<text>"` - Fuzzy search on catalog ID and description
  //
  // **Examples**:
  // - Filter by ID: `id="my-catalog"`
  // - Search catalogs: `q="my-catalog"`
  optional string filter = 4 [(google.api.field_behavior) = OPTIONAL];
}

// GetCatalogsResponse represents a response for getting all catalogs from users.
message ListCatalogsResponse {
  // The catalogs container.
  repeated Catalog catalogs = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Next page token.
  string next_page_token = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Total number of catalogs.
  int32 total_size = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// UpdateCatalogRequest represents a request to update a catalog.
message UpdateCatalogRequest {
  // Namespace ID.
  string namespace_id = 1 [(google.api.field_behavior) = REQUIRED];
  // Catalog ID.
  string catalog_id = 2 [(google.api.field_behavior) = REQUIRED];
  // The catalog fields that will replace the existing ones.
  Catalog catalog = 3 [(google.api.field_behavior) = REQUIRED];
  // The update mask specifies the subset of fields that should be modified.
  //
  // For more information about this field, see
  // https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#field-mask.
  google.protobuf.FieldMask update_mask = 4 [(google.api.field_behavior) = REQUIRED];
}

// UpdateCatalogResponse represents a response for updating a catalog.
message UpdateCatalogResponse {
  // The updated catalog.
  Catalog catalog = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// DeleteCatalogRequest represents a request to delete a catalog.
message DeleteCatalogRequest {
  // The owner's id. i.e. namespace.
  string namespace_id = 1 [(google.api.field_behavior) = REQUIRED];
  // The catalog id.
  string catalog_id = 2 [(google.api.field_behavior) = REQUIRED];
}

// DeleteCatalogResponse represents a response for deleting a catalog.
message DeleteCatalogResponse {
  // The catalog identifier.
  Catalog catalog = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}
