syntax = "proto3";

package base.mgmt.v1alpha;

import "common/healthcheck/v1alpha/healthcheck.proto";
import "google/api/field_behavior.proto";
// Google API
import "google/api/resource.proto";
// Protobuf standard
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// LivenessRequest represents a request to check a service liveness status
message LivenessRequest {
  // HealthCheckRequest message
  optional common.healthcheck.v1alpha.HealthCheckRequest health_check_request = 1 [(google.api.field_behavior) = OPTIONAL];
}

// LivenessResponse represents a response for a service liveness status
message LivenessResponse {
  // HealthCheckResponse message
  common.healthcheck.v1alpha.HealthCheckResponse health_check_response = 1;
}

// ReadinessRequest represents a request to check a service readiness status
message ReadinessRequest {
  // HealthCheckRequest message
  optional common.healthcheck.v1alpha.HealthCheckRequest health_check_request = 1 [(google.api.field_behavior) = OPTIONAL];
}

// ReadinessResponse represents a response for a service readiness status
message ReadinessResponse {
  // HealthCheckResponse message
  common.healthcheck.v1alpha.HealthCheckResponse health_check_response = 1;
}

// View represents a view of any resource. The resource view is implemented by
// adding a parameter to the method request which allows the client to specify
// which view of the resource it wants to receive in the response.
enum View {
  // View: UNSPECIFIED, equivalent to BASIC.
  VIEW_UNSPECIFIED = 0;
  // View: BASIC
  VIEW_BASIC = 1;
  // View: FULL
  VIEW_FULL = 2;
}

// OwnerType enumerates the owner type of any resource
enum OwnerType {
  // OwnerType: UNSPECIFIED
  OWNER_TYPE_UNSPECIFIED = 0;
  // OwnerType: USER
  OWNER_TYPE_USER = 1;
  // OwnerType: ORGANIZATION
  OWNER_TYPE_ORGANIZATION = 2;
}

// User represents the content of a user
message User {
  option (google.api.resource) = {
    type: "api.instill.tech/User"
    pattern: "users/{user}"
  };

  // Resource name. It must have the format of "users/*".
  // For example: "users/local-user".
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
  // User ID in UUIDv4. This field is optionally set by users
  // (optional on resource creation, server-generated if unset).
  optional string uid = 2 [(google.api.field_behavior) = IMMUTABLE];
  // Resource ID (the last segment of the resource name), also the user
  // username. This conforms to RFC-1034, which restricts to letters, numbers,
  // and hyphen, with the first character a letter, the last a letter or a
  // number, and a 63 character maximum.
  // Note that the ID can be updated.
  string id = 3 [(google.api.field_behavior) = REQUIRED];
  // Owner type: fixed to `OWNER_TYPE_USER`
  OwnerType type = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
  // User creation time
  google.protobuf.Timestamp create_time = 5 [(google.api.field_behavior) = OUTPUT_ONLY];
  // User update time
  google.protobuf.Timestamp update_time = 6 [(google.api.field_behavior) = OUTPUT_ONLY];

  // User email
  string email = 7 [(google.api.field_behavior) = REQUIRED];
  // Stripe customer ID. This field is used in Instill Cloud.
  string customer_id = 8 [(google.api.field_behavior) = OUTPUT_ONLY];
  // User first name
  optional string first_name = 9 [(google.api.field_behavior) = OPTIONAL];
  // User last name
  optional string last_name = 10 [(google.api.field_behavior) = OPTIONAL];
  // User company or institution name
  optional string org_name = 11 [(google.api.field_behavior) = OPTIONAL];
  // User role. Allowed roles:
  //  - "manager"
  //  - "ai-researcher"
  //  - "ai-engineer"
  //  - "data-engineer",
  //  - "data-scientist",
  //  - "analytics-engineer"
  //  - "hobbyist"
  optional string role = 12 [(google.api.field_behavior) = OPTIONAL];
  // User newsletter subscription
  bool newsletter_subscription = 13 [(google.api.field_behavior) = REQUIRED];
  // User console cookie token
  optional string cookie_token = 14 [(google.api.field_behavior) = OPTIONAL];
}

// ListUsersAdminRequest represents a request to list all users by admin
message ListUsersAdminRequest {
  // Page size: the maximum number of resources to return. The service may
  // return fewer than this value. If unspecified, at most 10 users will be
  // returned. The maximum value is 100; values above 100 will be coereced to
  // 100.
  optional int64 page_size = 1 [(google.api.field_behavior) = OPTIONAL];
  // Page token
  optional string page_token = 2 [(google.api.field_behavior) = OPTIONAL];
  // View view (default is VIEW_BASIC)
  optional View view = 3 [(google.api.field_behavior) = OPTIONAL];
  // Filter expression to list users
  optional string filter = 4 [(google.api.field_behavior) = OPTIONAL];
}

// ListUsersAdminResponse represents a response for a list of users
message ListUsersAdminResponse {
  // A list of users
  repeated User users = 1;
  // Next page token
  string next_page_token = 2;
  // Total count of users
  int64 total_size = 3;
}

// CreateUserAdminRequest represents a request to create a user by admin
message CreateUserAdminRequest {
  // The user to be created
  //
  // The user's `name` field is used to identify the user to create.
  // Format: users/{user}
  User user = 1 [(google.api.field_behavior) = REQUIRED];
}

// CreateUserAdminResponse represents a response for a user response
message CreateUserAdminResponse {
  // A user resource
  User user = 1;
}

// GetUserAdminRequest represents a request to query a user by admin
message GetUserAdminRequest {
  // Resource name of a user. For example:
  // "users/local-user"
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.instill.tech/User",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      field_configuration: {path_param_name: "user.name"}
    }
  ];
  // View view (default is VIEW_BASIC)
  optional View view = 2 [(google.api.field_behavior) = OPTIONAL];
}

// GetUserAdminResponse represents a response for a user resource
message GetUserAdminResponse {
  // A user resource
  User user = 1;
}

// UpdateUserAdminRequest represents a request to update a user by admin
message UpdateUserAdminRequest {
  // The user to update
  //
  // The user's `name` field is used to identify the user to update.
  // Format: users/{user}
  User user = 1 [(google.api.field_behavior) = REQUIRED];
  // Update mask for a user resource
  google.protobuf.FieldMask update_mask = 2 [(google.api.field_behavior) = REQUIRED];
}

// UpdateUserAdminResponse represents a response for a user resource
message UpdateUserAdminResponse {
  // A user resource
  User user = 1;
}

// DeleteUserAdminRequest represents a request to delete a user by admin
message DeleteUserAdminRequest {
  // The resource name of the user to be deleted,
  // for example: "users/local-user"
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.instill.tech/User",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      field_configuration: {path_param_name: "user.name"}
    }
  ];
}

// DeleteUserAdminResponse represents an empty response
message DeleteUserAdminResponse {}

// LookUpUserAdminRequest represents a request to query a user via permalink by
// admin
message LookUpUserAdminRequest {
  // Permalink of a user. For example:
  // "users/{uid}"
  string permalink = 1 [(google.api.field_behavior) = REQUIRED];
  // View view (default is VIEW_BASIC)
  optional View view = 2 [(google.api.field_behavior) = OPTIONAL];
}

// LookUpUserAdminResponse represents a response for a user resource by admin
message LookUpUserAdminResponse {
  // A user resource
  User user = 1;
}

// QueryAuthenticatedUserRequest represents a request to
// query the authenticated user
message QueryAuthenticatedUserRequest {}

// QueryAuthenticatedUserResponse represents a response for
// the authenticated user resource
message QueryAuthenticatedUserResponse {
  // A user resource
  User user = 1;
}

// PatchAuthenticatedUserRequest represents a request to
// update the authenticated user
message PatchAuthenticatedUserRequest {
  // The user to update
  User user = 1 [(google.api.field_behavior) = REQUIRED];
  // Update mask for a user resource
  google.protobuf.FieldMask update_mask = 2 [(google.api.field_behavior) = REQUIRED];
}

// PatchAuthenticatedUserResponse represents a response for
// the authenticated user resource
message PatchAuthenticatedUserResponse {
  // A user resource
  User user = 1;
}

// ExistUsernameRequest represents a request to verify if
// a username has been occupied
message ExistUsernameRequest {
  // The resource name of the user to check,
  // for example: "users/local-user"
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.instill.tech/User",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      field_configuration: {path_param_name: "user.name"}
    }
  ];
}

// ExistUsernameResponse represents a response about whether
// the queried username has been occupied
message ExistUsernameResponse {
  // A boolean value indicating whether the username has been occupied
  bool exists = 1;
}

// ApiToken represents the content of a API token
message ApiToken {
  option (google.api.resource) = {
    type: "api.instill.tech/ApiToken"
    pattern: "tokens/{token}"
  };

  // google.protobuf.Timestamp last_use_time = 6;
  reserved 6;

  // State enumerates the state of an API token
  enum State {
    // State: UNSPECIFIED
    STATE_UNSPECIFIED = 0;
    // State: INACTIVE
    STATE_INACTIVE = 1;
    // State: ACTIVE
    STATE_ACTIVE = 2;
    // State: EXPIRED
    STATE_EXPIRED = 3;
  }

  // API token resource name. It must have the format of "tokens/*"
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
  // API token UUID
  string uid = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
  // API token resource ID (the last segment of the resource name) used to
  // construct the resource name. This conforms to RFC-1034, which restricts to
  // letters, numbers, and hyphen, with the first character a letter, the last a
  // letter or a number, and a 63 character maximum.
  // Use this field to define where it's being used.
  string id = 3 [(google.api.field_behavior) = IMMUTABLE];
  // API token creation time
  google.protobuf.Timestamp create_time = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
  // API token update time
  google.protobuf.Timestamp update_time = 5 [(google.api.field_behavior) = OUTPUT_ONLY];
  // An opaque access token representing the API token string.
  // To validate the token, the recipient of the token needs to call the server
  // that issued the token.
  string access_token = 7 [(google.api.field_behavior) = OUTPUT_ONLY];
  // API token state
  State state = 8 [(google.api.field_behavior) = OUTPUT_ONLY];
  // API token type, value is fixed to "Bearer"
  string token_type = 9 [(google.api.field_behavior) = OUTPUT_ONLY];
  // API token expiration
  oneof expiration {
    // Input only. The TTL in seconds for this resource.
    int64 ttl = 10 [(google.api.field_behavior) = INPUT_ONLY];

    // API token expire time
    google.protobuf.Timestamp expire_time = 11;
  }
}

// CreateTokenRequest represents a request to create a API token
message CreateTokenRequest {
  // A token resource to create
  ApiToken token = 1 [(google.api.field_behavior) = REQUIRED];
}

// CreateTokenResponse represents a response for a API token resource
message CreateTokenResponse {
  // The created API token resource
  ApiToken token = 1;
}

// ListTokensRequest represents a request to list tokens
message ListTokensRequest {
  // The maximum number of API tokens to return. The service may return fewer
  // than this value. If unspecified, at most 10 API tokens will be returned.
  // The maximum value is 100; values above 100 will be coerced to 100.
  optional int64 page_size = 1 [(google.api.field_behavior) = OPTIONAL];
  // Page token
  optional string page_token = 2 [(google.api.field_behavior) = OPTIONAL];
}

// ListTokensResponse represents a response for a list of API tokens
message ListTokensResponse {
  // A list of API tokens resources
  repeated ApiToken tokens = 1;
  // Next page token
  string next_page_token = 2;
  // Total count of API tokens resources
  int64 total_size = 3;
}

// GetTokenRequest represents a request to query an API token
message GetTokenRequest {
  // API tokens resource name. It must have the format of "tokens/*"
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "api.instill.tech/ApiToken"},
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      field_configuration: {path_param_name: "token.name"}
    }
  ];
}

// GetTokenResponse represents a response for an API token resource
message GetTokenResponse {
  // An API token resource
  ApiToken token = 1;
}

// DeleteTokenRequest represents a request to delete an API token resource
message DeleteTokenRequest {
  // API token resource name. It must have the format of "tokens/*"
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "api.instill.tech/ApiToken"},
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      field_configuration: {path_param_name: "token.name"}
    }
  ];
}

// DeleteTokenResponse represents an empty response
message DeleteTokenResponse {}

// Request for validating the token
message ValidateTokenRequest {}

// Response for validating the token
message ValidateTokenResponse {
  // user_uid
  string user_uid = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}
