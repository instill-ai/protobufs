syntax = "proto3";

package base.mgmt.v1alpha;

// Protobuf standard
import "google/protobuf/timestamp.proto";

// Google API
import "google/api/field_behavior.proto";

import "vdp/pipeline/v1alpha/pipeline.proto";


// PipelineTriggerRecord represents a record for pipeline trigger
message PipelineTriggerRecord {
    // Timestamp for the pipeline trigger time
    google.protobuf.Timestamp trigger_time = 1;
    // Unique uuid for each pipeline trigger
    string pipeline_trigger_id = 2;
    // Resource name for the triggered pipeline
    string pipeline_name = 3;
    // Permalink for the triggered pipeline
    string pipeline_permalink = 4;
    // Pipeline mode
    vdp.pipeline.v1alpha.Pipeline.Mode pipeline_mode = 5;
    // Total compute time duration for this pipeline trigger
    float compute_time_duration = 6 [ (google.api.field_behavior) = OUTPUT_ONLY ];
    // Final status for pipeline trigger
    string status = 7 [ (google.api.field_behavior) = OUTPUT_ONLY ];
}

// ListPipelineTriggerRecordsRequest represents a request to list
// pipeline trigger record
message ListPipelineTriggerRecordsRequest {
    // The maximum number of pipeline trigger record to return. The service may return
    // fewer than this value. If unspecified, at most 100 record will be returned. The
    // maximum value is 1000; values above 1000 will be coerced to 1000.
    optional int64 page_size = 1 [ (google.api.field_behavior) = OPTIONAL ];
    // Page token
    optional string page_token = 2 [ (google.api.field_behavior) = OPTIONAL ];
    // Filter expression to list record
    optional string filter = 3 [ (google.api.field_behavior) = OPTIONAL ];
}

// ListPipelineTriggerRecordsResponse represents a response for a list
// of pipeline trigger record
message ListPipelineTriggerRecordsResponse {
    // A list of pipeline trigger records
    repeated PipelineTriggerRecord pipeline_trigger_record = 1;
    // Next page token
    string next_page_token = 2;
    // Total count of pipeline trigger records
    int64 total_size = 3;
}
