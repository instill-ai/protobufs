name: Release Please

on:
  push:
    branches:
      - main

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_CREATED: ${{ steps.release.outputs.release_created }}
      TAG_NAME: ${{ steps.release.outputs.tag_name }}
      SHA: ${{ steps.release.outputs.sha }}
      MAJOR: ${{ steps.release.outputs.major }}
      MINOR: ${{ steps.release.outputs.minor }}
      PATCH: ${{ steps.release.outputs.patch }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          token: ${{ secrets.botGitHubToken }}
          release-type: go
          command: manifest
          config-file: release-please/config.json
          manifest-file: release-please/manifest.json
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.botGitHubToken }}
      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.botGPGPrivateKey }}
          passphrase: ${{ secrets.botGPGPassphrase }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true
      - name: Tag major and minor versions
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git tag -d v${{ steps.release.outputs.major }} || true
          git tag -d v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git push :v${{ steps.release.outputs.major }} || true
          git push :v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git tag -a v${{ steps.release.outputs.major }} -m "Release v${{ steps.release.outputs.major }} pointing to tag ${{ steps.release.outputs.tag_name }}"
          git tag -a v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} -m "Release v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} pointing to tag ${{ steps.release.outputs.tag_name }}"
          git push v${{ steps.release.outputs.major }}
          git push v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}

  release-protogen-go:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.RELEASE_CREATED }}
    steps:
      - name: Checkout protogen-go repository
        uses: actions/checkout@v2
        with:
          repository: instill-ai/protogen-go
          path: ./protogen-go
          token: ${{ secrets.botGitHubToken }}
      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.botGPGPrivateKey }}
          passphrase: ${{ secrets.botGPGPassphrase }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true
          workdir: ./protogen-go
      - name: Commit release version
        run: |
          cd protogen-go
          git commit --allow-empty -m "chore: release ${{ needs.release-please.outputs.MAJOR }}.${{ needs.release-please.outputs.MINOR }}.${{ needs.release-please.outputs.PATCH }}" -m "Release-As: ${{ needs.release-please.outputs.MAJOR }}.${{ needs.release-please.outputs.MINOR }}.${{ needs.release-please.outputs.PATCH }}"
          git push
