syntax = "proto3";

package vdp.pipeline.v1alpha;

// Google API
import "google/api/annotations.proto";
import "google/api/client.proto";

import "vdp/pipeline/v1alpha/pipeline.proto";

// Pipeline service responds to internal access
service PipelinePrivateService {

  // List all pipelines in VDP (admin only).
  //
  // `ListPipelinesAdmin` is a call with the method(s) `GET` within the `PipelinePrivateService` service.
  //
  // This is a *private* method only available for admins and internal backend services to list *all* pipeline resources. 
  //
  // It takes in `ListPipelinesAdminRequest` and returns a `ListPipelinesAdminResponse`.
  //
  // **NOTE**: if unspecified, this method returns at most 10 pipeline resources. The maximum number of pipeline resources this method can return is set to 100.
  rpc ListPipelinesAdmin(ListPipelinesAdminRequest)
      returns (ListPipelinesAdminResponse) {
    option (google.api.http) = {
      get : "/v1alpha/admin/pipelines"
    };
  }

  // Get a pipeline in VDP with its name (admin only).
  //
  // `GetPipeLineAdmin` is a call with the method(s) `GET` within the `PipelinePrivateService` service.
  //
  // This is a *private* method only available for admins and internal backend services to get a pipeline resource with its name. 
  //
  // It takes in `GetPipelineAdminRequest` and returns a `GetPipelineAdminResponse`.
  //
  // **NOTE**: The parameter `pipelineName` is extracted from the endpoint path. It must have the format of `pipelines/{id}`. For example: `pipelines/pipeline-1`.
  rpc GetPipelineAdmin(GetPipelineAdminRequest)
      returns (GetPipelineAdminResponse) {
    option (google.api.http) = {
      get : "/v1alpha/admin/{name=pipelines/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // Get a pipeline in VDP with its unique ID (admin only).
  //
  // `LookUpPipelineAdmin` is a call with the method(s) `GET` within the `PipelinePrivateService` service. This is a *private* method that is only available for admins to get a pipeline resource with a permalink.
  //
  // It takes in `LookUpPipelineAdminRequest` and returns a `LookUpPipelineAdminResponse`.
  //
  // **NOTE**: The parameter `pipelinePermalink` is extracted from the endpoint path. It must have the format of `pipelines/{id}`. For example: `pipelines/pipeline-1`.
  rpc LookUpPipelineAdmin(LookUpPipelineAdminRequest)
      returns (LookUpPipelineAdminResponse) {
    option (google.api.http) = {
      get : "/v1alpha/admin/{permalink=pipelines/*}/lookUp"
    };
    option (google.api.method_signature) = "permalink";
  }
}
