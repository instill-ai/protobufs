syntax = "proto3";

package vdp.pipeline.v1alpha;

// Google API
import "google/api/annotations.proto";
import "google/api/client.proto";
import "vdp/pipeline/v1alpha/operator_definition.proto";
import "vdp/pipeline/v1alpha/pipeline.proto";

// Pipeline service responds to external access
service PipelinePublicService {
  option (google.api.default_host) = "api.instill.tech";

  // Liveness method receives a LivenessRequest message and returns a
  // LivenessResponse message.
  // See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
  rpc Liveness(LivenessRequest) returns (LivenessResponse) {
    option (google.api.http) = {
      get: "/v1alpha/__liveness"
      additional_bindings: [
        {get: "/v1alpha/health/pipeline"}]
    };
  }

  // Readiness method receives a ReadinessRequest message and returns a
  // ReadinessResponse message.
  // See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
  rpc Readiness(ReadinessRequest) returns (v1alpha.ReadinessResponse) {
    option (google.api.http) = {get: "/v1alpha/__readiness"};
  }

  // ListOperatorDefinitions method receives a
  // ListOperatorDefinitionsRequest message and returns a
  // ListOperatorDefinitionsResponse message.
  rpc ListOperatorDefinitions(ListOperatorDefinitionsRequest) returns (ListOperatorDefinitionsResponse) {
    option (google.api.http) = {get: "/v1alpha/operator-definitions"};
  }

  // GetOperatorDefinition method receives a
  // GetOperatorDefinitionRequest message and returns a
  // GetGetOperatorDefinitionResponse message.
  rpc GetOperatorDefinition(GetOperatorDefinitionRequest) returns (GetOperatorDefinitionResponse) {
    option (google.api.http) = {get: "/v1alpha/{name=operator-definitions/*}"};
    option (google.api.method_signature) = "name";
  }

  // CreatePipeline method receives a CreatePipelineRequest message and returns
  // a CreatePipelineResponse message.
  rpc CreatePipeline(CreatePipelineRequest) returns (CreatePipelineResponse) {
    option (google.api.http) = {
      post: "/v1alpha/pipelines"
      body: "pipeline"
    };
    option (google.api.method_signature) = "pipeline";
  }

  // ListPipelines method receives a ListPipelinesRequest message and returns a
  // ListPipelinesResponse message.
  rpc ListPipelines(ListPipelinesRequest) returns (ListPipelinesResponse) {
    option (google.api.http) = {get: "/v1alpha/pipelines"};
  }

  // GetPipeline method receives a GetPipelineRequest message and returns a
  // GetPipelineResponse message.
  rpc GetPipeline(GetPipelineRequest) returns (GetPipelineResponse) {
    option (google.api.http) = {get: "/v1alpha/{name=pipelines/*}"};
    option (google.api.method_signature) = "name";
  }

  // UpdatePipeline method receives a UpdatePipelineRequest message and returns
  // a UpdatePipelineResponse message.
  rpc UpdatePipeline(UpdatePipelineRequest) returns (UpdatePipelineResponse) {
    option (google.api.http) = {
      patch: "/v1alpha/{pipeline.name=pipelines/*}"
      body: "pipeline"
    };
    option (google.api.method_signature) = "pipeline,update_mask";
  }

  // DeletePipeline method receives a DeletePipelineRequest message and returns
  // a DeletePipelineResponse message.
  rpc DeletePipeline(DeletePipelineRequest) returns (DeletePipelineResponse) {
    option (google.api.http) = {delete: "/v1alpha/{name=pipelines/*}"};
    option (google.api.method_signature) = "name";
  }

  // LookUpPipeline method receives a LookUpPipelineRequest message and returns
  // a LookUpPipelineResponse
  rpc LookUpPipeline(LookUpPipelineRequest) returns (LookUpPipelineResponse) {
    option (google.api.http) = {get: "/v1alpha/{permalink=pipelines/*}/lookUp"};
    option (google.api.method_signature) = "permalink";
  }

  // Validate a pipeline.
  rpc ValidatePipeline(ValidatePipelineRequest) returns (ValidatePipelineResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=pipelines/*}/validate"
      body: "*"
    };
    option (google.api.method_signature) = "name";
  }

  // RenamePipeline method receives a RenamePipelineRequest message and returns
  // a RenamePipelineResponse message.
  rpc RenamePipeline(RenamePipelineRequest) returns (RenamePipelineResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=pipelines/*}/rename"
      body: "*"
    };
    option (google.api.method_signature) = "name,new_pipeline_id";
  }

  // TriggerPipeline method receives a TriggerPipelineRequest message
  // and returns a TriggerPipelineResponse.
  rpc TriggerPipeline(TriggerPipelineRequest) returns (TriggerPipelineResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=pipelines/*}/trigger"
      body: "*"
    };
    option (google.api.method_signature) = "name,inputs";
  }

  // TriggerAsyncPipeline method receives a TriggerPipelineRequest message and
  // returns a TriggerAsyncPipelineResponse.
  rpc TriggerAsyncPipeline(TriggerAsyncPipelineRequest) returns (TriggerAsyncPipelineResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=pipelines/*}/triggerAsync"
      body: "*"
    };
    option (google.api.method_signature) = "name,inputs";
  }

  // *Longrunning operation methods

  // GetOperation method receives a
  // GetOperationRequest message and returns a
  // GetOperationResponse message.
  rpc GetOperation(GetOperationRequest) returns (GetOperationResponse) {
    option (google.api.http) = {get: "/v1alpha/{name=operations/*}"};
    option (google.api.method_signature) = "name";
  }

  // CreatePipelineRelease method receives a CreatePipelineReleaseRequest message and returns
  // a CreatePipelineReleaseResponse message.
  rpc CreatePipelineRelease(CreatePipelineReleaseRequest) returns (CreatePipelineReleaseResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{parent=pipelines/*}/releases"
      body: "release"
    };
    option (google.api.method_signature) = "parent,release";
  }

  // ListPipelineReleases method receives a ListPipelineReleasesRequest message and returns a
  // ListPipelineReleasesResponse message.
  rpc ListPipelineReleases(ListPipelineReleasesRequest) returns (ListPipelineReleasesResponse) {
    option (google.api.http) = {get: "/v1alpha/{parent=pipelines/*}/releases"};
    option (google.api.method_signature) = "pipelines";
  }

  // GetPipelineRelease method receives a GetPipelineReleaseRequest message and returns a
  // GetPipelineReleaseResponse message.
  rpc GetPipelineRelease(GetPipelineReleaseRequest) returns (GetPipelineReleaseResponse) {
    option (google.api.http) = {get: "/v1alpha/{name=pipelines/*/releases/*}"};
    option (google.api.method_signature) = "name";
  }

  // UpdatePipelineRelease method receives a UpdatePipelineReleaseRequest message and returns
  // a UpdatePipelineReleaseResponse message.
  rpc UpdatePipelineRelease(UpdatePipelineReleaseRequest) returns (UpdatePipelineReleaseResponse) {
    option (google.api.http) = {
      patch: "/v1alpha/{release.name=pipelines/*/releases/*}"
      body: "release"
    };
    option (google.api.method_signature) = "release,update_mask";
  }

  // DeletePipelineRelease method receives a DeletePipelineReleaseRequest message and returns
  // a DeletePipelineReleaseResponse message.
  rpc DeletePipelineRelease(DeletePipelineReleaseRequest) returns (DeletePipelineReleaseResponse) {
    option (google.api.http) = {delete: "/v1alpha/{name=pipelines/*/releases/*}"};
    option (google.api.method_signature) = "name";
  }

  // RestorePipelineRelease method receives a RestorePipelineReleaseRequest message
  // and returns a RestorePipelineReleaseResponse
  rpc RestorePipelineRelease(RestorePipelineReleaseRequest) returns (RestorePipelineReleaseResponse) {
    option (google.api.http) = {post: "/v1alpha/{name=pipelines/*/releases/*}/restore"};
    option (google.api.method_signature) = "name";
  }

  // SetDefaultPipelineRelease method receives a SetDefaultPipelineReleaseRequest message
  // and returns a SetDefaultPipelineReleaseResponse
  rpc SetDefaultPipelineRelease(SetDefaultPipelineReleaseRequest) returns (SetDefaultPipelineReleaseResponse) {
    option (google.api.http) = {post: "/v1alpha/{name=pipelines/*/releases/*}/set_default"};
    option (google.api.method_signature) = "name";
  }

  // WatchPipelineRelease method receives a WatchPipelineReleaseRequest message
  // and returns a WatchPipelineReleaseResponse
  rpc WatchPipelineRelease(WatchPipelineReleaseRequest) returns (WatchPipelineReleaseResponse) {
    option (google.api.http) = {get: "/v1alpha/{name=pipelines/*/releases/default}/watch"};
    option (google.api.method_signature) = "name";
  }

  // RenamePipelineRelease method receives a RenamePipelineReleaseRequest message and returns
  // a RenamePipelineReleaseResponse message.
  rpc RenamePipelineRelease(RenamePipelineReleaseRequest) returns (RenamePipelineReleaseResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=pipelines/*/releases/*}/rename"
      body: "*"
    };
    option (google.api.method_signature) = "name,new_pipeline_release_id";
  }

  // TriggerPipelineRelease method receives a TriggePipelineReleaseRequest message
  // and returns a TriggerPipelineReleasePipelineResponse.
  rpc TriggerPipelineRelease(TriggerPipelineReleaseRequest) returns (TriggerPipelineReleaseResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=pipelines/*/releases/*}/trigger"
      body: "*"
    };
    option (google.api.method_signature) = "name,inputs";
  }

  // TriggerAsyncPipelineRelease method receives a TriggerAsyncPipelineReleaseRequest message and
  // returns a TriggerAsyncPipelineReleaseResponse.
  rpc TriggerAsyncPipelineRelease(TriggerAsyncPipelineReleaseRequest) returns (TriggerAsyncPipelineReleaseResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=pipelines/*/releases/*}/triggerAsync"
      body: "*"
    };
    option (google.api.method_signature) = "name,inputs";
  }
}
