syntax = "proto3";

package vdp.mgmt.v1alpha;

// Protobuf standard
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// Google API
import "google/api/resource.proto";
import "google/api/field_behavior.proto";

// OwnerType enumerates the owner type of any resource
enum OwnerType {
  // OwnerType: UNSPECIFIED
  OWNER_TYPE_UNSPECIFIED = 0;
  // OwnerType: USER
  OWNER_TYPE_USER = 1;
  // OwnerType: ORGANIZATION
  OWNER_TYPE_ORGANIZATION = 2;
}

// User represents the content of a user
message User {
  option (google.api.resource) = {
    type : "api.instill.tech/User"
    pattern : "users/{user}"
  };

  // Resource name. It must have the format of "users/*".
  // For example: "users/local-user".
  string name = 1 [ (google.api.field_behavior) = OUTPUT_ONLY ];
  // User ID in UUIDv4. This field is optionally set by users 
  // (optional on resource creation, server-generated if unset).
  optional string uid = 2 [ (google.api.field_behavior) = IMMUTABLE ];
  // Resource ID (the last segment of the resource name), also the user username. 
  // This conforms to RFC-1034, which restricts to letters, numbers,
  // and hyphen, with the first character a letter, the last a letter or a
  // number, and a 63 character maximum.
  // Note that the ID can be updated.
  string id = 3 [ (google.api.field_behavior) = REQUIRED ];
  // Owner type: fixed to `OWNER_TYPE_USER`
  OwnerType type = 4 [ (google.api.field_behavior) = OUTPUT_ONLY ];
  // User creation time
  google.protobuf.Timestamp create_time = 5
      [ (google.api.field_behavior) = OUTPUT_ONLY ];
  // User update time
  google.protobuf.Timestamp update_time = 6
      [ (google.api.field_behavior) = OUTPUT_ONLY ];
  
  // User email
  string email = 7 [ (google.api.field_behavior) = REQUIRED ];
  // User plan. This field is not used in open-source VDP.
  optional string plan = 8 [
    (google.api.field_behavior) = OPTIONAL,
    (google.api.resource_reference).type = "api.instill.tech/Plan"
  ];
  // Billing ID. This field is not used in open-source VDP.
  optional string billing_id = 9 [ (google.api.field_behavior) = OPTIONAL ];
  // User first name
  optional string first_name = 10 [ (google.api.field_behavior) = OPTIONAL ];
  // User last name
  optional string last_name = 11 [ (google.api.field_behavior) = OPTIONAL ];
  // User company or institution name
  optional string org_name = 12 [ (google.api.field_behavior) = OPTIONAL ];
  // User role. Allowed roles:
  //  - "manager"
  //  - "ai-researcher"
  //  - "ai-engineer"
  //  - "data-engineer",
  //  - "data-scientist",
  //  - "analytics-engineer"
  //  - "hobbyist"
  optional string role = 13 [ (google.api.field_behavior) = OPTIONAL ];
  // User newsletter subscription
  bool newsletter_subscription = 14 [ (google.api.field_behavior) = REQUIRED ];
  // User console cookie token
  optional string cookie_token = 15 [ (google.api.field_behavior) = OPTIONAL ];
}

// View represents a view of any resource. The resource view is implemented by
// adding a parameter to the method request which allows the client to specify
// which view of the resource it wants to receive in the response.
enum View {
  // View: UNSPECIFIED, equivalent to BASIC.
  VIEW_UNSPECIFIED = 0;
  // View: BASIC
  VIEW_BASIC = 1;
  // View: FULL
  VIEW_FULL = 2;
}

// ListUserRequest represents a request to list all users
message ListUserRequest {
  // Page size: the maximum number of resources to return. The service may
  // return fewer than this value. If unspecified, at most 10 users will be
  // returned. The maximum value is 100; values above 100 will be coereced to
  // 100.
  optional int64 page_size = 1 [ (google.api.field_behavior) = OPTIONAL ];
  // Page token
  optional string page_token = 2 [ (google.api.field_behavior) = OPTIONAL ];
  // View view (default is VIEW_BASIC)
  optional View view = 3 [ (google.api.field_behavior) = OPTIONAL ];
  // Filter expression to list users
  optional string filter = 4 [ (google.api.field_behavior) = OPTIONAL ];
}

// ListUserResponse represents a response for a list of users
message ListUserResponse {
  // A list of users
  repeated User users = 1;
  // Next page token
  string next_page_token = 2;
  // Total count of users
  int64 total_size = 3;
}

// CreateUserRequest represents a request to create a user
message CreateUserRequest {
  // The user to be created
  //
  // The user's `name` field is used to identify the user to create.
  // Format: users/{user}
  User user = 1 [ (google.api.field_behavior) = REQUIRED ];
}

// CreateUserResponse represents a response for a user response
message CreateUserResponse {
  // A user resource
  User user = 1;
}

// GetUserRequest represents a request to query a user
message GetUserRequest {
  // Resource name of a user. For example:
  // "users/local-user"
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.instill.tech/User",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      field_configuration : {path_param_name : "user.name"}
    }
  ];
  // View view (default is VIEW_BASIC)
  optional View view = 2 [ (google.api.field_behavior) = OPTIONAL ];
}

// GetUserResponse represents a response for a user resource
message GetUserResponse {
  // A user resource
  User user = 1;
}

// UpdateUserRequest represents a request to update a user
message UpdateUserRequest {
  // The user to update
  //
  // The user's `name` field is used to identify the user to update.
  // Format: users/{user}
  User user = 1 [ (google.api.field_behavior) = REQUIRED ];
  // Update mask for a user resource
  google.protobuf.FieldMask update_mask = 2
      [ (google.api.field_behavior) = REQUIRED ];
}

// UpdateUserResponse represents a response for a user resource
message UpdateUserResponse {
  // A user resource
  User user = 1;
}

// DeleteUserRequest represents a request to delete a user
message DeleteUserRequest {
  // The resource name of the user to be deleted,
  // for example: "users/local-user"
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.instill.tech/User",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      field_configuration : {path_param_name : "user.name"}
    }
  ];
}

// DeleteUserResponse represents an empty response
message DeleteUserResponse {}

// LookUpUserRequest represents a request to query a user by permalink
message LookUpUserRequest {
  // Permalink of a user. For example:
  // "users/{uid}"
  string permalink = 1 [ (google.api.field_behavior) = REQUIRED ];
  // View view (default is VIEW_BASIC)
  optional View view = 2 [ (google.api.field_behavior) = OPTIONAL ];
}

// LookUpUserResponse represents a response for a user resource
message LookUpUserResponse {
  // A user resource
  User user = 1;
}

// GetAuthenticatedUserRequest represents a request to 
// query the authenticated user
message GetAuthenticatedUserRequest {}

// GetAuthenticatedUserResponse represents a response for
// the authenticated user resource
message GetAuthenticatedUserResponse {
  // A user resource
  User user = 1;
}

// UpdateAuthenticatedUserRequest represents a request to
// update the authenticated user
message UpdateAuthenticatedUserRequest {
  // The user to update
  User user = 1 [ (google.api.field_behavior) = REQUIRED ];
  // Update mask for a user resource
  google.protobuf.FieldMask update_mask = 2
      [ (google.api.field_behavior) = REQUIRED ];
}

// UpdateAuthenticatedUserResponse represents a response for
// the authenticated user resource
message UpdateAuthenticatedUserResponse {
  // A user resource
  User user = 1;
}

// ExistUsernameRequest represents a request to verify if
// a username has been occupied
message ExistUsernameRequest{
  // The resource name of the user to be deleted,
  // for example: "users/local-user"
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.instill.tech/User",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      field_configuration : {path_param_name : "user.name"}
    }
  ];
}

// ExistUsernameResponse represents a response about whether
// the queried username has been occupied
message ExistUsernameResponse{
  // A boolean value indicating whether the username has been occupied
  bool exists = 1;
}
