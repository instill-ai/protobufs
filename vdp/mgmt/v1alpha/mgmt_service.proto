syntax = "proto3";

package vdp.mgmt.v1alpha;

// Google API
import "google/api/annotations.proto";
import "google/api/client.proto";

import "vdp/mgmt/v1alpha/healthcheck.proto";
import "vdp/mgmt/v1alpha/mgmt.proto";

// User service responds to incoming user requests.
service UserService {
  option (google.api.default_host) = "api.instill.tech";

  // Liveness method receives a LivenessRequest message and returns a
  // LivenessResponse message.
  // See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
  rpc Liveness(LivenessRequest) returns (LivenessResponse) {
    option (google.api.http) = {
      get : "/v1alpha/__liveness"
      additional_bindings : [ {get : "/v1alpha/health/mgmt"} ]
    };
  }

  // Readiness method receives a ReadinessRequest message and returns a
  // ReadinessResponse message.
  // See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
  rpc Readiness(ReadinessRequest) returns (ReadinessResponse) {
    option (google.api.http) = {
      get : "/v1alpha/__readiness"
      additional_bindings : [ {get : "/v1alpha/ready/mgmt"} ]
    };
  }

  // ========== Admin API: create, get, update and delete user accounts

  // ListUser method receives a ListUserRequest message and returns a
  // ListUserResponse message.
  rpc ListUser(ListUserRequest) returns (ListUserResponse) {
    option (google.api.http) = {
      get : "/v1alpha/admin/users"
    };
  }

  // CreateUser receives a CreateUserRequest message and returns a
  // aGetUserResponse
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post : "/v1alpha/admin/users"
      body : "user"
    };
    option (google.api.method_signature) = "user";
  }

  // GetUser method receives a GetUserRequest message and returns
  // a GetUserResponse message.
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      get : "/v1alpha/admin/{name=users/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // UpdateUser method receives a UpdateUserRequest message and returns
  // a UpdateUserResponse
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      patch : "/v1alpha/admin/{user.name=users/*}"
      body : "user"
    };
    option (google.api.method_signature) = "user,update_mask";
  }

  // DeleteUser method receives a DeleteUserRequest message and returns a
  // DeleteUserResponse
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {
    option (google.api.http) = {
      delete : "/v1alpha/admin/{name=users/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // LookUpUser method receives a LookUpUserRequest message and returns a
  // LookUpUserResponse
  rpc LookUpUser(LookUpUserRequest) returns (LookUpUserResponse) {
    option (google.api.http) = {
      get : "/v1alpha/admin/{permalink=users/*}/lookUp"
    };
    option (google.api.method_signature) = "permalink";
  }

  // ========== Public API: endpoints exposed to public internet traffic

  // GetAuthenticatedUser method receives a GetAuthenticatedUserRequest message and returns
  // a GetAuthenticatedUserResponse message.
  rpc GetAuthenticatedUser(GetAuthenticatedUserRequest) returns (GetAuthenticatedUserResponse) {
    option (google.api.http) = {
      get : "/v1alpha/user"
    };
  }

  // UpdateAuthenticatedUser method receives a UpdateAuthenticatedUserRequest message and returns 
  // a UpdateAuthenticatedUserResponse message.
  rpc UpdateAuthenticatedUser(UpdateAuthenticatedUserRequest) returns (UpdateAuthenticatedUserResponse) {
    option (google.api.http) = {
      patch : "/v1alpha/user"
      body : "user"
    };
    option (google.api.method_signature) = "user,update_mask";
  }

  // ExistUsername method receives a ExistUsernameRequest message and returns a
  // ExistUsernameResponse
  rpc ExistUsername(ExistUsernameRequest) returns (ExistUsernameResponse) {
    option (google.api.http) = {
      get : "/v1alpha/{name=users/*}/exists"
    };
    option (google.api.method_signature) = "name";
  }
}