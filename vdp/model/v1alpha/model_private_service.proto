syntax = "proto3";

package vdp.model.v1alpha;

// Google API
import "google/api/annotations.proto";
import "google/api/client.proto";

import "vdp/model/v1alpha/model.proto";

// Model service responds to internal access
service ModelPrivateService {

  // List all model resources in VDP (admin only)
  //
  // `ListModelsAdmin` is a call with the method(s) `GET` within the `ModelPrivateService`. This is a *private* method that is only avaible for admins and other backend services get a list of model resources avaiable in VDP. Only admins with permission can call this method. It takes in `ListModelsAdminRequest` and returns `ListModelsAdminResponse`.
  //
  // **NOTE**: if unspecified, this method returns at most 10 model resources. The maxumum number of model resources this method can return is set to 100.
  rpc ListModelsAdmin(ListModelsAdminRequest) returns (ListModelsAdminResponse) {
    option (google.api.http) = {
      get : "/v1alpha/admin/models"
    };
  }

  // Get a model resource in VDP with it's name (admin only)
  //
  // `GetModelAdmin` is a call with the method(s) `GET` within the `ModelPrivateService`. This is a *private* method that is only avaible for admins and other backend services get a model resource in VDP with a model name. Only admins with permission can call this method. It takes in `GetModelAdminRequest` and returns `GetModelAdminResponse`.
  //
  // **NOTE**: The `model.name` field in `GetModelAdminRequest` must has the format of `models/{model_name}`. For example: `models/yolov7`.
  rpc GetModelAdmin(GetModelAdminRequest) returns (GetModelAdminResponse) {
    option (google.api.http) = {
      get : "/v1alpha/admin/{name=models/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // Get a model resource in VDP with a permalink consisting of unique ID (admin only).
  //
  // `LookUpModelAdmin` is a call with the method(s) `GET` within the `ModelPrivateService`. This is a *private* method that is only avaible for admins and other backend services to geta  model resource in VDP with it's permalink (i.e., `model.uid`). Only admins with permission can call this method. It takes in `LookUpModelAdminRequest` and returns `LookUpModelAdminResponse`.
  //
  // **NOTE**: permalink in `LookUpModelAdminRequest` must has the format of `models/{uid}`, where `{uid}` denotes the unique ID of the model.
  rpc LookUpModelAdmin(LookUpModelAdminRequest)
      returns (LookUpModelAdminResponse) {
    option (google.api.http) = {
      get : "/v1alpha/admin/{permalink=models/*}/lookUp"
    };
    option (google.api.method_signature) = "permalink";
  }

  // Check the state of a model instance deloyed on VDP (admin only).
  //
  // `CheckModelInstance` is a call with the method(s) `GET` within the `ModelPrivateService`. This is a *private* method that is only avaible for admins and other backend services to check the states of a model instance deployed on VDP with model instance's name (i.e., `model.name`). Only admins with permission can call this method. It takes in `CheckModelInstanceRequest` and returns `CheckModelInstanceResponse`.
  //
  // **NOTE**: The `name` field in `CheckModelInstanceRequest` is used to identify the model to update. Format: `models/{model}/instances/{instance}`. For example, `models/yolov7/instances/v1.0-cpu`
  //
  // **IMPORTANT**: model instance will be removed after **v0.9.0-alpha**.
  rpc CheckModelInstance(CheckModelInstanceRequest) returns (CheckModelInstanceResponse) {
    option (google.api.http) = {
      get : "/v1alpha/admin/{name=models/*}/check"
    };
    option (google.api.method_signature) = "name";
  };
}
