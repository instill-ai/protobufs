syntax = "proto3";

package vdp.controller.v1alpha;

// Protobuf standard
import "protoc-gen-openapiv2/options/annotations.proto";

// Google api
import "google/api/field_behavior.proto";
import "google/api/resource.proto";

import "vdp/model/v1alpha/model.proto";
import "vdp/pipeline/v1alpha/pipeline.proto";
import "vdp/connector/v1alpha/connector.proto";
import "vdp/healthcheck/v1alpha/healthcheck.proto";

// Resource represents the current information of a resource
message Resource {
    option (google.api.resource) = {
      type : "api.instill.tech/Resource"
      pattern : "resources/{resource}/types/{type}"
    };

    // Resource name is a string follows a specifit pattern: `resources/{resource}/types/{type}`, where `{resource}` represents an arbitrary name user defined when creating, and `{type}` falls inside the scope of:
    // ```
    // const (
	  //   RESOURCE_TYPE_MODEL     = "model"
	  //   RESOURCE_TYPE_SOURCE_CONNECTOR = "source-connectors"
	  //   RESOURCE_TYPE_DESTINATION_CONNECTOR = "destination-connectors"
	  //   RESOURCE_TYPE_PIPELINE  = "pipeline"
	  //   RESOURCE_TYPE_SERVICE   = "service"
    // )
    // ```
    // 
    // For example, when query for the state of a pipeline named `pipeline-1`, the resource name is `resources/pipeline-1/types/RESOURCE_TYPE_PIPELINE`
    string name = 1 [ (google.api.field_behavior) = REQUIRED ];

    // Resource state. For Model, Pipeline and Conector, the states are defied as:
    // ```
    // enum State {
    //   // State: UNSPECIFIED
    //   STATE_UNSPECIFIED = 0;
    //   // State INACTIVE indicates the pipeline is inactive
    //   STATE_INACTIVE = 1;
    //   // State ACTIVE indicates the pipeline is active
    //   STATE_ACTIVE = 2;
    //   // State ERROR indicates the pipeline has error
    //   STATE_ERROR = 3;
    // }
    // ```
    //
    // See our documentation for further information: 
    // - [Core Concepts/Pipeline](https://www.instill.tech/docs/core-concepts/pipeline)
    // - [Core Concepts/Connector](https://www.instill.tech/docs/core-concepts/connector)
    // - [Core Concepts/Model](https://www.instill.tech/docs/core-concepts/model)
    //
    // For Backend service, the states are defeined as:
    // ```
    // enum ServingStatus {
    //   // Serving status: UNSPECIFIED
    //   SERVING_STATUS_UNSPECIFIED = 0;
    //   // Serving status: SERVING
    //   SERVING_STATUS_SERVING = 1;
    //   // Serving status: NOT SERVING
    //   SERVING_STATUS_NOT_SERVING = 2;
    // }
    // ```
    //
    oneof state {
        // Model state
        vdp.model.v1alpha.Model.State model_state = 2;
        // Pipeline state
        vdp.pipeline.v1alpha.Pipeline.State pipeline_state = 3;
        // Connector state
        vdp.connector.v1alpha.Connector.State connector_state = 4;
        // Backend service state
        vdp.healthcheck.v1alpha.HealthCheckResponse.ServingStatus backend_state = 5;
    };
    // Resource longrunning progress
    optional int32 progress = 6 [ (google.api.field_behavior) = OPTIONAL ];
  }

// GetResourceRequest represents a request to query a resource's state.
message GetResourceRequest {
    // Resource name is a string follows a specifit format: `resources/{resource}/types/{type}`, where `{resource}` represents an arbitrary name user defined when creating, and `{type}` falls inside the scope of:
    //```
    // const (
	  //   RESOURCE_TYPE_MODEL     = "model"
	  //   RESOURCE_TYPE_SOURCE_CONNECTOR = "source-connectors"
	  //   RESOURCE_TYPE_DESTINATION_CONNECTOR = "destination-connectors"
	  //   RESOURCE_TYPE_PIPELINE  = "pipeline"
	  //   RESOURCE_TYPE_SERVICE   = "service"
    // )
    // ```
    // 
    // For example, when query for the state of a pipeline named `pipeline-1`, the resource name is `resources/pipeline-1/types/RESOURCE_TYPE_PIPELINE`
    string name = 1 [
      (google.api.field_behavior) = REQUIRED,
      (google.api.resource_reference) = {type : "api.instill.tech/Resource"},
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        field_configuration : {path_param_name : "resource.name"}
      }
    ];
}

// GetResourceResponse represents a response to fetch a resource's state
message GetResourceResponse {
    // Retrieved resource state
    Resource resource = 1;
}

// UpdateResourceRequest represents a request to update a resource's state
message UpdateResourceRequest {

    // The resource to update. It uses `resource.name` to identify the resource to update. It follows a specifit format: `resources/{resource}/types/{type}`.
    // For **Model*, **Pipeline** and **Connector** services, the `resource.state` is one of the below:
    // ```
    // enum State {
    //   // State: UNSPECIFIED
    //   STATE_UNSPECIFIED = 0;
    //   // State INACTIVE indicates the pipeline is inactive
    //   STATE_INACTIVE = 1;
    //   // State ACTIVE indicates the pipeline is active
    //   STATE_ACTIVE = 2;
    //   // State ERROR indicates the pipeline has error
    //   STATE_ERROR = 3;
    // }
    // ```
    //
    // See our documentation for further information: 
    // - [Core Concepts - Pipeline](https://www.instill.tech/docs/core-concepts/pipeline)
    // - [Core Concepts - Connector](https://www.instill.tech/docs/core-concepts/connector)
    // - [Core Concepts - Model](https://www.instill.tech/docs/core-concepts/model)
    //
    // For **Backend** service, the `resource.state` is one of the below as:
    // ```
    // enum ServingStatus {
    //   // Serving status: UNSPECIFIED
    //   SERVING_STATUS_UNSPECIFIED = 0;
    //   // Serving status: SERVING
    //   SERVING_STATUS_SERVING = 1;
    //   // Serving status: NOT SERVING
    //   SERVING_STATUS_NOT_SERVING = 2;
    // }
    // ```
    //
    Resource resource = 1 [ (google.api.field_behavior) = REQUIRED ];
    // Resource longrunnning workflow id
    optional string workflow_id = 2 [ (google.api.field_behavior) = OPTIONAL ];
}

// UpdateResourceResponse represents a response to update a resource's state
message UpdateResourceResponse {
    // Resource updated
    Resource resource = 1;
}

// DeleteResourceRequest represents a request to delete a resource's state
message DeleteResourceRequest {
    // Resource name. It must has the format of `resources/{resource}/types/{type}`. For example: `resources/yolov7/types/model`.
    string name = 1 [
      (google.api.field_behavior) = REQUIRED,
      (google.api.resource_reference) = {type : "api.instill.tech/Resource"},
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        field_configuration : {path_param_name : "resource.name"}
      }
    ];
}

// DeleteResourceResponse represents an empty response
message DeleteResourceResponse {}
