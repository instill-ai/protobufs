syntax = "proto3";

package openapi.v2;

import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "ðŸ”® Instill AI API"
    description: "Interact with Instill AI through its public API"
    version: "v0.43.0-beta"
    contact: {
      name: "Instill AI"
      url: "https://github.com/instill-ai"
      email: "hello@instill.tech"
    }
    license: {
      name: "Elastic License 2.0 (ELv2)"
      url: "https://github.com/instill-ai/protobufs/blob/main/LICENSE"
    }
  }
  tags: [
    // TODO flatten namespaces?
    {
      name: "User"
      description: "User namespaces"
    },
    {
      name: "Organization"
      description: "Organization namespaces"
    },
    {
      name: "Memberships"
      description: "Organization memberships"
    },
    {
      name: "Token"
      description: "API tokens"
    },
    {
      name: "Subscription"
      description: "Subscriptions to pricing plans"
    },
    {
      name: "Credit"
      description: "Instill Credit"
    },
    {
      name: "Metric"
      description: "Usage metrics"
    },
    {
      name: "Region"
      description: "Model regions"
    },
    {
      name: "Util"
      description: "Utils"
    },
    // TODO flatten VDP?
    {
      name: "Component"
      description: "Components"
    },
    {
      name: "Pipeline"
      description: "Pipelines"
    },
    {
      name: "Pipeline Release"
      description: "Pipeline Releases"
    },
    {
      name: "Pipeline Trigger"
      description: "Pipeline Triggers"
    },
    {
      name: "Secret"
      description: "Namespace Secrets"
    },
    {
      name: "Integration"
      description: "Namespace Integrations"
    },
    // TODO flatten Model?
    {
      name: "Model Definition"
      description: "Model definitions"
    },
    {
      name: "Model"
      description: "Models"
    },
    {
      name: "Model Version"
      description: "Model versions"
    },
    {
      name: "Model Trigger"
      description: "Model triggers"
    },
    {
      name: "Catalog"
      description: "Catalogs"
    },
    {
      name: "App"
      description: "Apps"
    },
    {
      name: "Conversation"
      description: "Conversations"
    },
    {
      name: "Message"
      description: "Messages"
    },
    {
      name: "Playground"
      description: "Playgrounds"
    }
  ]
  host: "api.instill.tech"
  external_docs: {
    url: "https://www.instill.tech/docs"
    description: "More about Instill AI"
  }
  schemes: HTTPS
  schemes: HTTP
  consumes: "application/json"
  produces: "application/json"
  security_definitions: {
    security: {
      key: "Bearer"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
        description: "Enter the token with the `Bearer ` prefix, e.g. `Bearer abcde12345`"
        extensions: {
          key: "x-default"
          value: {string_value: "Bearer instill_sk_***"}
        }
      }
    }
  }
  security: {
    security_requirement: {
      key: "Bearer"
      value: {}
    }
  }
  responses: {
    key: "401"
    value: {description: "Returned when the client credentials are not valid."}
  }
};
