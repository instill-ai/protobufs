swagger: "2.0"
info:
  title: "\U0001F4BE Artifact "
  description: Artifact endpoints to manage Instill Catalog and RAG applications
  version: v0.44.1-beta
  contact:
    name: Instill AI
    url: https://github.com/instill-ai
    email: hello@instill.tech
  license:
    name: Elastic License 2.0 (ELv2)
    url: https://github.com/instill-ai/protobufs/blob/main/LICENSE
tags:
  - name: Catalog
    description: Catalog endpoints
  - name: Object
    description: Object endpoints
host: api.instill.tech
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1alpha/namespaces/{namespaceId}/catalogs:
    get:
      summary: Get all catalogs info
      description: Returns a paginated list of catalogs.
      operationId: ArtifactPublicService_ListCatalogs
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ListCatalogsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: namespaceId
          description: User ID for which to list the catalogs
          in: path
          required: true
          type: string
      tags:
        - Catalog
    post:
      summary: Create a catalog
      description: Creates a catalog.
      operationId: ArtifactPublicService_CreateCatalog
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/CreateCatalogResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: namespaceId
          description: The catalog's owner(namespaces).
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateCatalogBody'
      tags:
        - Catalog
  /v1alpha/namespaces/{namespaceId}/catalogs/{catalogId}:
    get:
      summary: Get file catalog
      description: Get the catalog file.
      operationId: ArtifactPublicService_GetFileCatalog
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/GetFileCatalogResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: namespaceId
          description: id of the namespace
          in: path
          required: true
          type: string
        - name: catalogId
          description: id of the catalog
          in: path
          required: true
          type: string
        - name: fileId
          description: id of the file(i.e. file name)
          in: query
          required: false
          type: string
        - name: fileUid
          description: Uid of the file
          in: query
          required: false
          type: string
      tags:
        - Catalog
    delete:
      summary: Delete a catalog
      description: Deletes a catalog.
      operationId: ArtifactPublicService_DeleteCatalog
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/DeleteCatalogResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: namespaceId
          description: The owner's id. i.e. namespace.
          in: path
          required: true
          type: string
        - name: catalogId
          description: The catalog id.
          in: path
          required: true
          type: string
      tags:
        - Catalog
    put:
      summary: Update a catalog info
      description: Updates the information of a catalog.
      operationId: ArtifactPublicService_UpdateCatalog
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/UpdateCatalogResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: namespaceId
          description: The catalog owner(namespace).
          in: path
          required: true
          type: string
        - name: catalogId
          description: The catalog id.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateCatalogBody'
      tags:
        - Catalog
  /v1alpha/namespaces/{namespaceId}/catalogs/{catalogId}/files:
    get:
      summary: List catalog files
      description: Returns a paginated list of catalog files.
      operationId: ArtifactPublicService_ListCatalogFiles
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ListCatalogFilesResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: namespaceId
          description: The owner/namespace uid id.
          in: path
          required: true
          type: string
        - name: catalogId
          description: The catalog id.
          in: path
          required: true
          type: string
        - name: pageSize
          description: The page size (default:10; max 100).
          in: query
          required: false
          type: integer
          format: int32
        - name: pageToken
          description: The next page token(default from first file's token).
          in: query
          required: false
          type: string
        - name: filter.fileUids
          description: The file uids.
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      tags:
        - Catalog
    post:
      summary: Create a file
      description: Creates a file.
      operationId: ArtifactPublicService_UploadCatalogFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/UploadCatalogFileResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: namespaceId
          description: owner/namespace uid
          in: path
          required: true
          type: string
        - name: catalogId
          description: catalog id
          in: path
          required: true
          type: string
        - name: file
          description: file
          in: body
          required: true
          schema:
            $ref: '#/definitions/File'
      tags:
        - Catalog
  /v1alpha/catalogs/files:
    delete:
      summary: Delete a file
      description: Deletes a file.
      operationId: ArtifactPublicService_DeleteCatalogFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/DeleteCatalogFileResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: fileUid
          description: The file uid.
          in: query
          required: true
          type: string
      tags:
        - Catalog
  /v1alpha/catalogs/files/processAsync:
    post:
      summary: Process catalog files
      description: Processes catalog files.
      operationId: ArtifactPublicService_ProcessCatalogFiles
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ProcessCatalogFilesResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProcessCatalogFilesRequest'
        - name: Instill-Requester-Uid
          description: Indicates the authenticated namespace is making the request on behalf of another entity, typically an organization they belong to
          in: header
          required: false
          type: string
      tags:
        - Catalog
  /v1alpha/namespaces/{namespaceId}/catalogs/{catalogId}/chunks:
    get:
      summary: List catalog chunks
      description: Returns a paginated list of catalog chunks.
      operationId: ArtifactPublicService_ListChunks
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ListChunksResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: namespaceId
          description: owner/namespace id (not uid)
          in: path
          required: true
          type: string
        - name: catalogId
          description: catalog id (not uid)
          in: path
          required: true
          type: string
        - name: fileUid
          description: unique identifier of the file
          in: query
          required: false
          type: string
        - name: chunkUids
          description: repeated chunk uid(not implemented yet)
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      tags:
        - Catalog
  /v1alpha/namespaces/{namespaceId}/catalogs/{catalogId}/files/{fileUid}/source:
    get:
      summary: Get catalog single-source-of-truth file
      description: Gets the single-source-of-truth file of a catalog.
      operationId: ArtifactPublicService_GetSourceFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/GetSourceFileResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: namespaceId
          description: owner/namespace id
          in: path
          required: true
          type: string
        - name: catalogId
          description: catalog id
          in: path
          required: true
          type: string
        - name: fileUid
          description: unique identifier of the original uploaded file
          in: path
          required: true
          type: string
      tags:
        - Catalog
  /v1alpha/chunks/{chunkUid}:
    post:
      summary: Update catalog chunk
      description: Updates a catalog chunk.
      operationId: ArtifactPublicService_UpdateChunk
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/UpdateChunkResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: chunkUid
          description: chunk uid
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateChunkBody'
      tags:
        - Catalog
  /v1alpha/namespaces/{namespaceId}/catalogs/{catalogId}/chunks/retrieve:
    post:
      summary: Retrieve similar chunks
      description: Returns the similar chunks.
      operationId: ArtifactPublicService_SimilarityChunksSearch
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/SimilarityChunksSearchResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: namespaceId
          description: owner/namespace id
          in: path
          required: true
          type: string
        - name: catalogId
          description: catalog id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SimilarityChunksSearchBody'
        - name: Instill-Requester-Uid
          description: Indicates the authenticated namespace is making the request on behalf of another entity, typically an organization they belong to
          in: header
          required: false
          type: string
      tags:
        - Catalog
  /v1alpha/namespaces/{namespaceId}/catalogs/{catalogId}/ask:
    post:
      summary: Ask a question
      description: Asks a question.
      operationId: ArtifactPublicService_QuestionAnswering
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/QuestionAnsweringResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: namespaceId
          description: id of the namespace
          in: path
          required: true
          type: string
        - name: catalogId
          description: id of the catalog
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/QuestionAnsweringBody'
        - name: Instill-Requester-Uid
          description: Indicates the authenticated namespace is making the request on behalf of another entity, typically an organization they belong to
          in: header
          required: false
          type: string
      tags:
        - Catalog
  /v1beta/namespaces/{namespaceId}/catalogs/{catalogId}/runs:
    get:
      summary: List Catalog Runs
      description: Returns a paginated list of catalog runs.
      operationId: ArtifactPublicService_ListCatalogRuns
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/ListCatalogRunsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: namespaceId
          description: The ID of the owner of the catalog.
          in: path
          required: true
          type: string
        - name: catalogId
          description: The ID of the catalog for which the runs will be listed.
          in: path
          required: true
          type: string
        - name: page
          description: The page number to retrieve.
          in: query
          required: false
          type: integer
          format: int32
        - name: pageSize
          description: |-
            The maximum number of items per page to return. The default and cap values
            are 10 and 100, respectively.
          in: query
          required: false
          type: integer
          format: int32
        - name: filter
          description: |-
            Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
            expression.
            - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
          in: query
          required: false
          type: string
        - name: orderBy
          description: |-
            Order by field, with options for ordering by `id`, `create_time` or `update_time`.
            Format: `order_by=id` or `order_by=create_time desc`, default is `asc`.
          in: query
          required: false
          type: string
      tags:
        - Catalog
  /v1alpha/namespaces/{namespaceId}/object-upload-url:
    get:
      summary: Get Object Upload URL
      description: Returns the upload URL of an object.
      operationId: ArtifactPublicService_GetObjectUploadURL
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/GetObjectUploadURLResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: namespaceId
          description: id of the namespace
          in: path
          required: true
          type: string
        - name: objectName
          description: |-
            name of the object with length limit to 1024 characters.
            this is the unique identifier of the object in the namespace
          in: query
          required: true
          type: string
        - name: urlExpireDays
          description: |-
            Expiration time in days for the URL.
            Minimum is 1 day and maximum is 7 days. If not set or set to 0, defaults to 1 day.
          in: query
          required: false
          type: integer
          format: int32
        - name: lastModifiedTime
          description: |-
            last modified time this value is provided by the client when the object url is created
            it must be in RFC3339 formatted date-time string
          in: query
          required: false
          type: string
          format: date-time
        - name: objectExpireDays
          description: |-
            object live time in days
            minimum is 1 day. if set to 0, the object will not be deleted automatically
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Object
  /v1alpha/namespaces/{namespaceId}/object-download-url:
    get:
      summary: Get Object Download URL
      description: Returns the download URL of an object.
      operationId: ArtifactPublicService_GetObjectDownloadURL
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/GetObjectDownloadURLResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/Status'
      parameters:
        - name: namespaceId
          description: id of the namespace
          in: path
          required: true
          type: string
        - name: objectUid
          description: uid of the object
          in: query
          required: true
          type: string
        - name: urlExpireDays
          description: |-
            expiration time in days for the URL.
            minimum is 1 day. if not set or set to 0, defaults to 1 day.
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Object
definitions:
  Any:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  Catalog:
    type: object
    properties:
      catalogUid:
        type: string
        description: The catalog uid.
      catalogId:
        type: string
        description: The catalog id.
      name:
        type: string
        description: The catalog name.
      description:
        type: string
        description: The catalog description.
      createTime:
        type: string
        description: The creation time of the catalog.
      updateTime:
        type: string
        description: The last update time of the catalog.
      ownerName:
        type: string
        description: The owner/namespace of the catalog.
      tags:
        type: array
        items:
          type: string
        description: The catalog tags.
      convertingPipelines:
        type: array
        items:
          type: string
        description: The catalog converting pipelines.
      splittingPipelines:
        type: array
        items:
          type: string
        description: The catalog splitting pipelines.
      embeddingPipelines:
        type: array
        items:
          type: string
        description: The catalog embedding pipelines.
      downstreamApps:
        type: array
        items:
          type: string
        title: The downstream apps
      totalFiles:
        type: integer
        format: int64
        description: The total files in catalog.
      totalTokens:
        type: integer
        format: int64
        description: The total tokens in catalog.
      usedStorage:
        type: string
        format: uint64
        description: The current used storage in catalog.
    description: Catalog represents a catalog.
  CatalogRun:
    type: object
    properties:
      uid:
        type: string
        description: Unique identifier for each run.
        readOnly: true
      catalogUid:
        type: string
        title: catalog uid
        readOnly: true
      fileUids:
        type: array
        items:
          type: string
        description: The file uids.
        readOnly: true
      action:
        description: Action of the catalog run.
        readOnly: true
        allOf:
          - $ref: '#/definitions/CatalogRunAction'
      status:
        description: Current status of the run.
        readOnly: true
        allOf:
          - $ref: '#/definitions/RunStatus'
      source:
        description: Origin of the run.
        readOnly: true
        allOf:
          - $ref: '#/definitions/RunSource'
      totalDuration:
        type: integer
        format: int32
        description: Time taken to complete the run in milliseconds.
        readOnly: true
      runnerId:
        type: string
        title: Runner ID. (User UID)
        readOnly: true
      namespaceId:
        type: string
        description: Namespace ID.
        readOnly: true
      payload:
        type: object
        description: Run request payload.
        readOnly: true
      startTime:
        type: string
        format: date-time
        description: Time when the run started execution.
        readOnly: true
      completeTime:
        type: string
        format: date-time
        description: Time when the run completed.
        readOnly: true
      error:
        type: string
        description: Error message if the run failed.
        readOnly: true
      creditAmount:
        type: number
        format: float
        description: Credits used of internal accounting metric.
        readOnly: true
    description: CatalogRun represents a single execution of a catalog action.
  CatalogRunAction:
    type: string
    enum:
      - CATALOG_RUN_ACTION_CREATE
      - CATALOG_RUN_ACTION_UPDATE
      - CATALOG_RUN_ACTION_DELETE
      - CATALOG_RUN_ACTION_CREATE_FILE
      - CATALOG_RUN_ACTION_PROCESS_FILE
      - CATALOG_RUN_ACTION_DELETE_FILE
    description: |-
      CatalogRunAction describes the actions a user has over a catalog.

       - CATALOG_RUN_ACTION_CREATE: Create catalog.
       - CATALOG_RUN_ACTION_UPDATE: Update catalog.
       - CATALOG_RUN_ACTION_DELETE: Delete catalog.
       - CATALOG_RUN_ACTION_CREATE_FILE: Upload catalog file.
       - CATALOG_RUN_ACTION_PROCESS_FILE: Process catalog file.
       - CATALOG_RUN_ACTION_DELETE_FILE: Delete catalog file.
  ChunkType:
    type: string
    enum:
      - CHUNK_TYPE_TEXT
      - CHUNK_TYPE_IMAGE
      - CHUNK_TYPE_AUDIO
      - CHUNK_TYPE_VIDEO
    description: |-
      - CHUNK_TYPE_TEXT: text
       - CHUNK_TYPE_IMAGE: image
       - CHUNK_TYPE_AUDIO: audio
       - CHUNK_TYPE_VIDEO: video
    title: chunk type
  CreateCatalogBody:
    type: object
    properties:
      name:
        type: string
        description: The catalog name.
      description:
        type: string
        description: The catalog description.
      tags:
        type: array
        items:
          type: string
        description: The catalog tags.
    description: CreateCatalogRequest represents a request to create a catalog.
  CreateCatalogResponse:
    type: object
    properties:
      catalog:
        description: The created catalog.
        allOf:
          - $ref: '#/definitions/Catalog'
    description: CreateCatalogResponse represents a response for creating a catalog.
  CreateRepositoryTagResponse:
    type: object
    properties:
      tag:
        description: The created tag.
        allOf:
          - $ref: '#/definitions/RepositoryTag'
    description: CreateRepositoryTagResponse contains the created tag.
  DeleteCatalogFileResponse:
    type: object
    properties:
      fileUid:
        type: string
        description: The file uid.
    title: delete file response
  DeleteCatalogResponse:
    type: object
    properties:
      catalog:
        description: The catalog identifier.
        allOf:
          - $ref: '#/definitions/Catalog'
    description: DeleteCatalogResponse represents a response for deleting a catalog.
  DeleteRepositoryTagResponse:
    type: object
    description: DeleteRepositoryTagResponse represent an empty response.
  File:
    type: object
    properties:
      fileUid:
        type: string
        title: file uid
        readOnly: true
      name:
        type: string
        title: file name
      type:
        title: file type
        allOf:
          - $ref: '#/definitions/FileType'
      processStatus:
        title: file process status
        readOnly: true
        allOf:
          - $ref: '#/definitions/FileProcessStatus'
      processOutcome:
        type: string
        title: file process message
        readOnly: true
      retrievable:
        type: boolean
        title: retrievable(this is reserved for future use)
        readOnly: true
      content:
        type: string
        title: content(this is reserved for future use)
      ownerUid:
        type: string
        title: owner/namespace uid
        readOnly: true
      creatorUid:
        type: string
        title: creator uid from authn token
        readOnly: true
      catalogUid:
        type: string
        title: catalog uid
        readOnly: true
      createTime:
        type: string
        format: date-time
        title: create time
        readOnly: true
      updateTime:
        type: string
        format: date-time
        title: update time
        readOnly: true
      deleteTime:
        type: string
        format: date-time
        title: delete time
        readOnly: true
      size:
        type: string
        format: int64
        title: file size in bytes
        readOnly: true
      totalChunks:
        type: integer
        format: int32
        title: total chunks
        readOnly: true
      totalTokens:
        type: integer
        format: int32
        title: total tokens
        readOnly: true
    title: file
    required:
      - name
      - type
  FileProcessStatus:
    type: string
    enum:
      - FILE_PROCESS_STATUS_NOTSTARTED
      - FILE_PROCESS_STATUS_WAITING
      - FILE_PROCESS_STATUS_CONVERTING
      - FILE_PROCESS_STATUS_CHUNKING
      - FILE_PROCESS_STATUS_EMBEDDING
      - FILE_PROCESS_STATUS_COMPLETED
      - FILE_PROCESS_STATUS_FAILED
    description: |-
      - FILE_PROCESS_STATUS_NOTSTARTED: NOTSTARTED
       - FILE_PROCESS_STATUS_WAITING: file is waiting for embedding process
       - FILE_PROCESS_STATUS_CONVERTING: file is converting
       - FILE_PROCESS_STATUS_CHUNKING: file is chunking
       - FILE_PROCESS_STATUS_EMBEDDING: file is embedding
       - FILE_PROCESS_STATUS_COMPLETED: completed
       - FILE_PROCESS_STATUS_FAILED: failed
    title: file embedding process status
  FileType:
    type: string
    enum:
      - FILE_TYPE_TEXT
      - FILE_TYPE_PDF
      - FILE_TYPE_MARKDOWN
      - FILE_TYPE_PNG
      - FILE_TYPE_JPEG
      - FILE_TYPE_JPG
      - FILE_TYPE_HTML
      - FILE_TYPE_DOCX
      - FILE_TYPE_DOC
      - FILE_TYPE_PPT
      - FILE_TYPE_PPTX
      - FILE_TYPE_XLS
      - FILE_TYPE_XLSX
      - FILE_TYPE_CSV
    description: |-
      - FILE_TYPE_TEXT: text
       - FILE_TYPE_PDF: PDF
       - FILE_TYPE_MARKDOWN: MARKDOWN
       - FILE_TYPE_PNG: PNG(not supported yet)
       - FILE_TYPE_JPEG: JPEG(not supported yet)
       - FILE_TYPE_JPG: JPG(not supported yet)
       - FILE_TYPE_HTML: HTML
       - FILE_TYPE_DOCX: DOCX
       - FILE_TYPE_DOC: DOC
       - FILE_TYPE_PPT: PPT
       - FILE_TYPE_PPTX: PPTX
       - FILE_TYPE_XLS: XLS
       - FILE_TYPE_XLSX: XLSX
       - FILE_TYPE_CSV: CSV
    title: file type
  GetFileCatalogResponse:
    type: object
    properties:
      originalData:
        type: string
        title: original data is encoded in base64
      metadata:
        title: file catalog
        allOf:
          - $ref: '#/definitions/Metadata'
      text:
        title: text
        allOf:
          - $ref: '#/definitions/Text'
      chunks:
        type: array
        items:
          type: object
          $ref: '#/definitions/GetFileCatalogResponse.Chunk'
        title: chunks
    title: GetFileCatalogResponse
  GetFileCatalogResponse.Chunk:
    type: object
    properties:
      uid:
        type: string
        title: chunk uid
      type:
        title: chunk type. i.e. text, image, audio, and video
        allOf:
          - $ref: '#/definitions/ChunkType'
      startPos:
        type: integer
        format: int32
        title: chunk start position
      endPos:
        type: integer
        format: int32
        title: chunk end position
      content:
        type: string
        title: chunk content
      tokensNum:
        type: integer
        format: int32
        title: chunk tokens num
      embedding:
        type: array
        items:
          type: number
          format: float
        title: embedding. float32 array
      createTime:
        type: string
        format: date-time
        title: chunk create time
      retrievable:
        type: boolean
        title: chunk retrievable
    title: chunk message
  GetObjectDownloadURLResponse:
    type: object
    properties:
      downloadUrl:
        type: string
        title: download url
      urlExpireAt:
        type: string
        format: date-time
        title: expire at in UTC (UTC+0)
      object:
        title: object
        allOf:
          - $ref: '#/definitions/Object'
    title: GetObjectDownloadURLResponse
  GetObjectResponse:
    type: object
    properties:
      object:
        title: object
        allOf:
          - $ref: '#/definitions/Object'
    title: GetObjectResponse
  GetObjectURLResponse:
    type: object
    properties:
      objectUrl:
        title: object url
        allOf:
          - $ref: '#/definitions/ObjectURL'
    title: GetObjectURLResponse
  GetObjectUploadURLResponse:
    type: object
    properties:
      uploadUrl:
        type: string
        title: upload url
      urlExpireAt:
        type: string
        format: date-time
        title: expire at in UTC (UTC+0)
      object:
        title: object
        allOf:
          - $ref: '#/definitions/Object'
    title: GetObjectUploadURLResponse
  GetRepositoryTagResponse:
    type: object
    properties:
      tag:
        description: The created tag.
        allOf:
          - $ref: '#/definitions/RepositoryTag'
    description: GetRepositoryTagResponse contains the created tag.
  GetSourceFileResponse:
    type: object
    properties:
      sourceFile:
        title: source file(either original file or converted file)
        allOf:
          - $ref: '#/definitions/SourceFile'
    title: get source file response
  ListCatalogFilesFilter:
    type: object
    properties:
      fileUids:
        type: array
        items:
          type: string
        description: The file uids.
    title: |-
      list file filter
      todo: support more parameters
  ListCatalogFilesResponse:
    type: object
    properties:
      files:
        type: array
        items:
          type: object
          $ref: '#/definitions/File'
        description: The list of files.
      totalSize:
        type: integer
        format: int32
        description: The total number of files.
      pageSize:
        type: integer
        format: int32
        description: The requested page size.
      nextPageToken:
        type: string
        title: next page token
      filter:
        description: The filter.
        allOf:
          - $ref: '#/definitions/ListCatalogFilesFilter'
    title: list files response
  ListCatalogRunsResponse:
    type: object
    properties:
      catalogRuns:
        type: array
        items:
          type: object
          $ref: '#/definitions/CatalogRun'
        description: The list of runs.
        readOnly: true
      totalSize:
        type: string
        format: int64
        description: The total number of runs matching the request.
        readOnly: true
      page:
        type: integer
        format: int32
        description: The current page number.
        readOnly: true
      pageSize:
        type: integer
        format: int32
        description: The number of items per page.
        readOnly: true
    description: ListCatalogRunsResponse is the response message for ListCatalogRuns.
  ListCatalogsResponse:
    type: object
    properties:
      catalogs:
        type: array
        items:
          type: object
          $ref: '#/definitions/Catalog'
        description: The catalogs container.
    description: GetCatalogsResponse represents a response for getting all catalogs from users.
  ListChunksResponse:
    type: object
    properties:
      chunks:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alpha.Chunk'
        title: repeated chunks
    description: The ListChunksResponse message represents a response containing a list of chunks in the artifact system.
  ListRepositoryTagsResponse:
    type: object
    properties:
      tags:
        type: array
        items:
          type: object
          $ref: '#/definitions/RepositoryTag'
        description: A list of repository tags.
      totalSize:
        type: integer
        format: int32
        description: Total number of tags.
      pageSize:
        type: integer
        format: int32
        description: The requested page size.
      page:
        type: integer
        format: int32
        description: The requested page offset.
    description: ListRepositoryTagsResponse contains a list of container image tags.
  Metadata:
    type: object
    properties:
      fileUid:
        type: string
        title: file uid
      fileId:
        type: string
        title: file id
      fileType:
        title: file type
        allOf:
          - $ref: '#/definitions/FileType'
      fileSize:
        type: string
        format: int64
        title: file size in bytes
      fileUploadTime:
        type: string
        format: date-time
        title: upload time
      fileProcessStatus:
        title: file process status
        allOf:
          - $ref: '#/definitions/FileProcessStatus'
    title: metadata
  NullValue:
    type: string
    description: |-
      `NullValue` is a singleton enumeration to represent the null value for the
      `Value` type union.

      The JSON representation for `NullValue` is JSON `null`.
  Object:
    type: object
    properties:
      uid:
        type: string
        title: uid
      name:
        type: string
        title: name of the object
      size:
        type: string
        format: int64
        title: size in bytes
      contentType:
        type: string
        title: |-
          content type
          this is mime type from content-type header of http request or from file extension
      namespaceUid:
        type: string
        title: namespace uid
      creator:
        type: string
        title: creator
      isUploaded:
        type: boolean
        title: if file is uploaded
      path:
        type: string
        title: object path(optional)
      objectExpireDays:
        type: integer
        format: int32
        title: |-
          object live time in days
          if set to 0, the object will not be deleted automatically
      lastModifiedTime:
        type: string
        format: date-time
        title: last modified time
      createdTime:
        type: string
        format: date-time
        title: created time
      updatedTime:
        type: string
        format: date-time
        title: updated time
    title: Object
  ObjectURL:
    type: object
    properties:
      uid:
        type: string
        title: The unique identifier of the ObjectURL
      namespaceUid:
        type: string
        title: The namespace UID associated with this ObjectURL
      objectUid:
        type: string
        title: The object UID associated with this ObjectURL
      urlExpireAt:
        type: string
        format: date-time
        title: The expiration time of the URL
      minioUrlPath:
        type: string
        title: The MinIO URL path
      encodedUrlPath:
        type: string
        title: The encoded URL path
      type:
        type: string
        title: The type of URL (download or upload)
      createTime:
        type: string
        format: date-time
        title: The creation time of the ObjectURL
      updateTime:
        type: string
        format: date-time
        title: The last update time of the ObjectURL
      deleteTime:
        type: string
        format: date-time
        title: The deletion time of the ObjectURL, if applicable
    title: ObjectUploadURL
  ProcessCatalogFilesRequest:
    type: object
    properties:
      fileUids:
        type: array
        items:
          type: string
        description: The file uid.
    title: Process Catalog File Request
    required:
      - fileUids
  ProcessCatalogFilesResponse:
    type: object
    properties:
      files:
        type: array
        items:
          type: object
          $ref: '#/definitions/File'
        description: The file uid.
    title: Process Catalog File Response
  QuestionAnsweringBody:
    type: object
    properties:
      question:
        type: string
        title: question to be answered
      topK:
        type: integer
        format: int32
        title: top k default to 5
    title: QuestionAnsweringRequest
  QuestionAnsweringResponse:
    type: object
    properties:
      answer:
        type: string
        title: answer to the question
      similarChunks:
        type: array
        items:
          type: object
          $ref: '#/definitions/SimilarityChunk'
        title: chunks
    title: QuestionAnsweringResponse
  RepositoryTag:
    type: object
    properties:
      name:
        type: string
        description: |-
          The name of the tag, defined by its parent repository and ID.
          - Format: `repositories/{repository.id}/tags/{tag.id}`.
      id:
        type: string
        description: The tag identifier.
      digest:
        type: string
        description: Unique identifier, computed from the manifest the tag refers to.
      updateTime:
        type: string
        format: date-time
        description: Tag update time, i.e. timestamp of the last push.
        readOnly: true
    description: |-
      RepositoryTag contains information about the version of some content in a
      repository.
  RunSource:
    type: string
    enum:
      - RUN_SOURCE_CONSOLE
      - RUN_SOURCE_API
    description: |-
      RunSource defines the source of a pipeline or model run.

       - RUN_SOURCE_CONSOLE: Run from frontend UI.
       - RUN_SOURCE_API: Run from API or SDK.
  RunStatus:
    type: string
    enum:
      - RUN_STATUS_PROCESSING
      - RUN_STATUS_COMPLETED
      - RUN_STATUS_FAILED
      - RUN_STATUS_QUEUED
    description: |-
      RunStatus defines the status of a pipeline or model run.

       - RUN_STATUS_PROCESSING: Run in progress.
       - RUN_STATUS_COMPLETED: Run succeeded.
       - RUN_STATUS_FAILED: Run failed.
       - RUN_STATUS_QUEUED: Run is waiting to be executed.
  SimilarityChunk:
    type: object
    properties:
      chunkUid:
        type: string
        title: chunk uid
      similarityScore:
        type: number
        format: float
        title: similarity score
      textContent:
        type: string
        title: content
      sourceFile:
        type: string
        title: source file's name
      chunkMetadata:
        title: chunk
        allOf:
          - $ref: '#/definitions/v1alpha.Chunk'
    title: similarity chunks
  SimilarityChunksSearchBody:
    type: object
    properties:
      textPrompt:
        type: string
        title: text prompt
      topK:
        type: integer
        format: int64
        title: top k
    title: Similar chunk search request
  SimilarityChunksSearchResponse:
    type: object
    properties:
      similarChunks:
        type: array
        items:
          type: object
          $ref: '#/definitions/SimilarityChunk'
        title: chunks
    title: Similar chunk search response
  SourceFile:
    type: object
    properties:
      originalFileUid:
        type: string
        title: original file unique identifier
      content:
        type: string
        title: content
      createTime:
        type: string
        format: date-time
        title: creation time of the source file
      updateTime:
        type: string
        format: date-time
        title: update time of the source file
    description: The SourceFile message represents a source file in the artifact system.
  Status:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/Any'
  Text:
    type: object
    properties:
      pipelineIds:
        type: array
        items:
          type: string
        title: pipelines
      transformedContent:
        type: string
        title: transformed content
      transformedContentChunkNum:
        type: integer
        format: int32
        title: transformed content chunk number
      transformedContentTokenNum:
        type: integer
        format: int32
        title: transformed content token number
      transformedContentUpdateTime:
        type: string
        format: date-time
        title: transformed content update time
    title: text message
  UpdateCatalogBody:
    type: object
    properties:
      description:
        type: string
        description: The catalog description.
      tags:
        type: array
        items:
          type: string
        description: The catalog tags.
    description: UpdateCatalogRequest represents a request to update a catalog.
  UpdateCatalogResponse:
    type: object
    properties:
      catalog:
        description: The updated catalog.
        allOf:
          - $ref: '#/definitions/Catalog'
    description: UpdateCatalogResponse represents a response for updating a catalog.
  UpdateChunkBody:
    type: object
    properties:
      retrievable:
        type: boolean
        title: whether the chunk is retrievable
    title: Create chunk response
  UpdateChunkResponse:
    type: object
    properties:
      chunk:
        title: chunk
        allOf:
          - $ref: '#/definitions/v1alpha.Chunk'
    title: update chunk response
  UploadCatalogFileResponse:
    type: object
    properties:
      file:
        title: file
        allOf:
          - $ref: '#/definitions/File'
    title: upload file response
  v1alpha.Chunk:
    type: object
    properties:
      chunkUid:
        type: string
        title: unique identifier of the chunk
      retrievable:
        type: boolean
        title: whether the chunk is retrievable
      startPos:
        type: integer
        format: int64
        title: start position of the chunk in the source file
      endPos:
        type: integer
        format: int64
        title: end position of the chunk in the source file
      tokens:
        type: integer
        format: int64
        title: tokens of the chunk
      createTime:
        type: string
        format: date-time
        title: creation time of the chunk
      originalFileUid:
        type: string
        title: original file unique identifier
    description: The Chunk message represents a chunk of data in the artifact system.
securityDefinitions:
  Bearer:
    type: apiKey
    description: Enter the token with the `Bearer ` prefix, e.g. `Bearer abcde12345`
    name: Authorization
    in: header
    x-default: Bearer instill_sk_***
security:
  - Bearer: []
externalDocs:
  description: More about Instill AI
  url: https://www.instill.tech/docs
