syntax = "proto3";

package app.app.v1alpha;
import "app/app/v1alpha/app.proto";


// AppPrivateService exposes the private endpoints that allow clients to
// manage apps.
service AppPrivateService {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {description: "Private App endpoints"};

    // Check if the app server is alive
    //
    // See https://github.com/grpc/grpc/blob/master/doc/health-checking.md.
    rpc Liveness(LivenessRequest) returns (LivenessResponse) {
      option (google.api.http) = {
        get: "/v1alpha/__liveness"
        additional_bindings: [
          {get: "/v1alpha/health/app"}]
      };
      option (google.api.method_visibility).restriction = "INTERNAL";
    }
  
    // Check if the app server is ready
    //
    // See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
    rpc Readiness(ReadinessRequest) returns (ReadinessResponse) {
      option (google.api.http) = {
        get: "/v1alpha/__readiness"
        additional_bindings: [
          {get: "/v1alpha/ready/app"}]
      };
      option (google.api.method_visibility).restriction = "INTERNAL";
    }
}
