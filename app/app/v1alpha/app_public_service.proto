syntax = "proto3";

package app.app.v1alpha;

import "app/app/v1alpha/agent.proto";
// App definitions
import "app/app/v1alpha/app.proto";
import "app/app/v1alpha/conversation.proto";
import "app/app/v1alpha/table.proto";
// Google API
import "google/api/annotations.proto";
import "google/api/visibility.proto";
// OpenAPI definition
import "protoc-gen-openapiv2/options/annotations.proto";

// AppPublicService exposes the public endpoints that allow clients to
// manage apps.
service AppPublicService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {description: "Public App endpoints"};

  // Check if the app server is alive
  //
  // See https://github.com/grpc/grpc/blob/master/doc/health-checking.md.
  rpc Liveness(LivenessRequest) returns (LivenessResponse) {
    option (google.api.http) = {
      get: "/v1alpha/__liveness"
      additional_bindings: [
        {get: "/v1alpha/health/app"}]
    };
    option (google.api.method_visibility).restriction = "INTERNAL";
  }

  // Check if the app server is ready
  //
  // See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
  rpc Readiness(ReadinessRequest) returns (ReadinessResponse) {
    option (google.api.http) = {
      get: "/v1alpha/__readiness"
      additional_bindings: [
        {get: "/v1alpha/ready/app"}]
    };
    option (google.api.method_visibility).restriction = "INTERNAL";
  }

  // Create an app
  //
  // Creates an app.
  rpc CreateApp(CreateAppRequest) returns (CreateAppResponse) {
    option (google.api.http) = {
      post: "/v1alpha/namespaces/{namespace_id}/apps"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "üçé App"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // List all apps info
  //
  // Returns a paginated list of apps.
  rpc ListApps(ListAppsRequest) returns (ListAppsResponse) {
    option (google.api.http) = {get: "/v1alpha/namespaces/{namespace_id}/apps"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "üçé App"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Update an app's information
  //
  // Updates the information of an app.
  rpc UpdateApp(UpdateAppRequest) returns (UpdateAppResponse) {
    option (google.api.http) = {
      put: "/v1alpha/namespaces/{namespace_id}/apps/{app_id}"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "üçé App"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Delete an app
  //
  // Deletes an app.
  rpc DeleteApp(DeleteAppRequest) returns (DeleteAppResponse) {
    option (google.api.http) = {delete: "/v1alpha/namespaces/{namespace_id}/apps/{app_id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "üçé App"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Create a conversation
  //
  // Creates a conversation.
  rpc CreateConversation(CreateConversationRequest) returns (CreateConversationResponse) {
    option (google.api.http) = {
      post: "/v1alpha/namespaces/{namespace_id}/apps/{app_id}/conversations"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "üçé App"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // List conversations
  //
  // Returns a paginated list of conversations.
  rpc ListConversations(ListConversationsRequest) returns (ListConversationsResponse) {
    option (google.api.http) = {get: "/v1alpha/namespaces/{namespace_id}/apps/{app_id}/conversations"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "üçé App"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Update a conversation
  //
  // Updates a conversation.
  rpc UpdateConversation(UpdateConversationRequest) returns (UpdateConversationResponse) {
    option (google.api.http) = {
      put: "/v1alpha/namespaces/{namespace_id}/apps/{app_id}/conversations/{conversation_id}"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "üçé App"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Delete a conversation
  //
  // Deletes a conversation.
  rpc DeleteConversation(DeleteConversationRequest) returns (DeleteConversationResponse) {
    option (google.api.http) = {delete: "/v1alpha/namespaces/{namespace_id}/apps/{app_id}/conversations/{conversation_id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "üçé App"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Create an agent
  //
  // Creates an agent.
  rpc CreateAgent(CreateAgentRequest) returns (CreateAgentResponse) {
    option (google.api.http) = {
      post: "/v1alpha/namespaces/{namespace_id}/agents"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "üçé App"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // List all agents info
  //
  // Returns a paginated list of agents.
  rpc ListAgents(ListAgentsRequest) returns (ListAgentsResponse) {
    option (google.api.http) = {get: "/v1alpha/namespaces/{namespace_id}/agents"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "üçé App"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Update an agent
  //
  // Updates the information of an agent.
  rpc UpdateAgent(UpdateAgentRequest) returns (UpdateAgentResponse) {
    option (google.api.http) = {
      put: "/v1alpha/namespaces/{namespace_id}/agents/{agent_uid}"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "üçé App"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Delete an agent
  //
  // Deletes an agent.
  rpc DeleteAgent(DeleteAgentRequest) returns (DeleteAgentResponse) {
    option (google.api.http) = {delete: "/v1alpha/namespaces/{namespace_id}/agents/{agent_uid}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "üçé App"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Create a chat
  //
  // Creates a chat.
  rpc CreateChat(CreateChatRequest) returns (CreateChatResponse) {
    option (google.api.http) = {
      post: "/v1alpha/namespaces/{namespace_id}/chats"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "üçé App"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // List chats
  //
  // Returns a list of chats.
  rpc ListChats(ListChatsRequest) returns (ListChatsResponse) {
    option (google.api.http) = {get: "/v1alpha/namespaces/{namespace_id}/chats"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "üçé App"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Update a chat
  //
  // Updates a chat.
  rpc UpdateChat(UpdateChatRequest) returns (UpdateChatResponse) {
    option (google.api.http) = {
      put: "/v1alpha/namespaces/{namespace_id}/chats/{chat_uid}"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "üçé App"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Delete a chat
  //
  // Deletes a chat.
  rpc DeleteChat(DeleteChatRequest) returns (DeleteChatResponse) {
    option (google.api.http) = {delete: "/v1alpha/namespaces/{namespace_id}/chats/{chat_uid}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "üçé App"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Create a message
  //
  // Creates a message.
  rpc CreateMessage(CreateMessageRequest) returns (CreateMessageResponse) {
    option (google.api.http) = {
      post: "/v1alpha/namespaces/{namespace_id}/apps/{app_id}/conversations/{conversation_id}/messages"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "üçé App"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // List messages
  //
  // Returns a paginated list of messages.
  rpc ListMessages(ListMessagesRequest) returns (ListMessagesResponse) {
    option (google.api.http) = {get: "/v1alpha/namespaces/{namespace_id}/apps/{app_id}/conversations/{conversation_id}/messages"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "üçé App"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Update a message
  //
  // Updates a message.
  rpc UpdateMessage(UpdateMessageRequest) returns (UpdateMessageResponse) {
    option (google.api.http) = {
      put: "/v1alpha/namespaces/{namespace_id}/apps/{app_id}/conversations/{conversation_id}/messages/{message_uid}"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "üçé App"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Delete a message
  //
  // Deletes a message.
  rpc DeleteMessage(DeleteMessageRequest) returns (DeleteMessageResponse) {
    option (google.api.http) = {delete: "/v1alpha/namespaces/{namespace_id}/apps/{app_id}/conversations/{conversation_id}/messages/{message_uid}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "üçé App"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Get Playground Conversation
  //
  // Returns the latest conversation for the authenticated user (e.g., logged-in user or API key user).
  rpc GetPlaygroundConversation(GetPlaygroundConversationRequest) returns (GetPlaygroundConversationResponse) {
    option (google.api.http) = {get: "/v1alpha/namespaces/{namespace_id}/apps/{app_id}/ai_assistant_playground/conversation"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "üçé App"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // List all tools
  //
  // Returns a list of tools.
  rpc ListTools(ListToolsRequest) returns (ListToolsResponse) {
    option (google.api.http) = {get: "/v1alpha/namespaces/{namespace_id}/tools"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "üçé App"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // List chat messages
  //
  // Returns a paginated list of messages.
  rpc ListChatMessages(ListChatMessagesRequest) returns (ListChatMessagesResponse) {
    option (google.api.http) = {get: "/v1alpha/namespaces/{namespace_id}/chats/{chat_uid}/messages"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "üçé App"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Restart Playground Conversation
  //
  // Creates a new conversation using the authenticated user's UID as creator and
  // auto-generates a new conversation ID on behalf of the authenticated user.
  rpc RestartPlaygroundConversation(RestartPlaygroundConversationRequest) returns (RestartPlaygroundConversationResponse) {
    option (google.api.http) = {post: "/v1alpha/namespaces/{namespace_id}/apps/{app_id}/ai_assistant_playground/restart"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "üçé App"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Chat
  //
  // Chat sends a message asynchronously and streams back the response.
  // This method is intended for real-time conversation with a chatbot
  // and the response needs to be processed incrementally.
  rpc Chat(ChatRequest) returns (ChatResponse) {
    option (google.api.http) = {
      post: "/v1alpha/namespaces/{namespace_id}/apps/{app_id}/chat"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "üçé App"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // List tables
  //
  // Returns a paginated list of tables.
  rpc ListTables(ListTablesRequest) returns (ListTablesResponse) {
    option (google.api.http) = {get: "/v1alpha/namespaces/{namespace_id}/tables"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Table"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Create a table
  //
  // Creates a table.
  rpc CreateTable(CreateTableRequest) returns (CreateTableResponse) {
    option (google.api.http) = {
      post: "/v1alpha/namespaces/{namespace_id}/tables"
      body: "table"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Table"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Get table
  //
  // Gets a table.
  rpc GetTable(GetTableRequest) returns (GetTableResponse) {
    option (google.api.http) = {get: "/v1alpha/namespaces/{namespace_id}/tables/{table_uid}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Table"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Update table
  //
  // Updates a table.
  rpc UpdateTable(UpdateTableRequest) returns (UpdateTableResponse) {
    option (google.api.http) = {
      patch: "/v1alpha/namespaces/{namespace_id}/tables/{table_uid}"
      body: "table"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Table"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Delete table
  //
  // Deletes a table.
  rpc DeleteTable(DeleteTableRequest) returns (DeleteTableResponse) {
    option (google.api.http) = {delete: "/v1alpha/namespaces/{namespace_id}/tables/{table_uid}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Table"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Get column definitions
  //
  // Gets column definitions for a table.
  rpc GetColumnDefinitions(GetColumnDefinitionsRequest) returns (GetColumnDefinitionsResponse) {
    option (google.api.http) = {get: "/v1alpha/namespaces/{namespace_id}/tables/{table_uid}/column-definitions"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Table"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Update column definitions
  //
  // Updates column definitions for a table.
  rpc UpdateColumnDefinitions(UpdateColumnDefinitionsRequest) returns (UpdateColumnDefinitionsResponse) {
    option (google.api.http) = {
      put: "/v1alpha/namespaces/{namespace_id}/tables/{table_uid}/column-definitions"
      body: "column_definitions"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Table"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // List rows
  //
  // Returns list of rows.
  rpc ListRows(ListRowsRequest) returns (ListRowsResponse) {
    option (google.api.http) = {get: "/v1alpha/namespaces/{namespace_id}/tables/{table_uid}/rows"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Table"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Insert row
  //
  // Inserts a row into a table.
  rpc InsertRow(InsertRowRequest) returns (InsertRowResponse) {
    option (google.api.http) = {
      post: "/v1alpha/namespaces/{namespace_id}/tables/{table_uid}/rows"
      body: "row"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Table"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Update row
  //
  // Updates a row in a table.
  rpc UpdateRow(UpdateRowRequest) returns (UpdateRowResponse) {
    option (google.api.http) = {
      patch: "/v1alpha/namespaces/{namespace_id}/tables/{table_uid}/rows/{row_uid}"
      body: "row"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Table"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Update rows
  //
  // Updates multiple rows in a table.
  rpc UpdateRows(UpdateRowsRequest) returns (UpdateRowsResponse) {
    option (google.api.http) = {
      patch: "/v1alpha/namespaces/{namespace_id}/tables/{table_uid}/rows"
      body: "rows"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Table"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Delete row
  //
  // Deletes a row from a table.
  rpc DeleteRow(DeleteRowRequest) returns (DeleteRowResponse) {
    option (google.api.http) = {delete: "/v1alpha/namespaces/{namespace_id}/tables/{table_uid}/rows/{row_uid}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Table"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Delete rows
  //
  // Deletes multiple rows from a table.
  rpc DeleteRows(DeleteRowsRequest) returns (DeleteRowsResponse) {
    option (google.api.http) = {delete: "/v1alpha/namespaces/{namespace_id}/tables/{table_uid}/rows"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Table"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }

  // Export table
  //
  // Exports table data.
  rpc Export(ExportRequest) returns (ExportResponse) {
    option (google.api.http) = {get: "/v1alpha/namespaces/{namespace_id}/tables/{table_uid}/export"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Table"
      extensions: {
        key: "x-stage"
        value: {string_value: "alpha"}
      }
    };
  }
}
