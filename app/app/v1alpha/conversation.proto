syntax = "proto3";

package app.app.v1alpha;

import "google/api/field_behavior.proto";
// Protocol Buffers Well-Known Types
import "google/protobuf/timestamp.proto";

// Conversation represents a chat conversation
message Conversation {
  // unique identifier of the conversation created by the system
  string uid = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
  // namespace id
  string namespace_id = 2 [(google.api.field_behavior) = REQUIRED];
  // catalog id
  string app_id = 3 [(google.api.field_behavior) = REQUIRED];
  // conversation id/name
  string id = 4 [(google.api.field_behavior) = REQUIRED];
  // creation time of the conversation
  google.protobuf.Timestamp create_time = 5 [(google.api.field_behavior) = OUTPUT_ONLY];
  // update time of the conversation
  google.protobuf.Timestamp update_time = 6 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// Message represents a single message in a conversation
message Message {
  // message type
  enum MessageType {
    // unspecified
    MESSAGE_TYPE_UNSPECIFIED = 0;
    // text
    MESSAGE_TYPE_TEXT = 1;
  }
  // message uid
  string uid = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
  // catalog uid
  string catalog_uid = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
  // conversation uid
  string conversation_uid = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
  // message content
  string content = 4 [(google.api.field_behavior) = REQUIRED];
  // message role e.g., "user" or "assistant"
  string role = 5 [(google.api.field_behavior) = REQUIRED];
  // message type
  MessageType type = 6 [(google.api.field_behavior) = REQUIRED];
  // creation time of the message
  google.protobuf.Timestamp create_time = 7 [(google.api.field_behavior) = OUTPUT_ONLY];
  // update time of the message
  google.protobuf.Timestamp update_time = 8 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// CreateConversationRequest is used to create a new conversation
message CreateConversationRequest {
  // namespace id
  string namespace_id = 1 [(google.api.field_behavior) = REQUIRED];
  // catalog id
  string app_id = 2 [(google.api.field_behavior) = REQUIRED];
  // conversation id. only allow kebab case
  string conversation_id = 3 [(google.api.field_behavior) = REQUIRED];
}

// CreateConversationResponse returns the created conversation
message CreateConversationResponse {
  // conversation
  Conversation conversation = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// ListConversationsRequest is used to list conversations
message ListConversationsRequest {
  // namespace id
  string namespace_id = 1 [(google.api.field_behavior) = REQUIRED];
  // catalog id
  string app_id = 2 [(google.api.field_behavior) = REQUIRED];
  // page size
  int32 page_size = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
  // page token
  string page_token = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// ListConversationsResponse returns a list of conversations
message ListConversationsResponse {
  // conversations
  repeated Conversation conversations = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
  // next page token
  string next_page_token = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
  // total size
  int32 total_size = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// UpdateConversationRequest is used to update a conversation
message UpdateConversationRequest {
  // namespace id
  string namespace_id = 1;
  // catalog id
  string app_id = 2 [(google.api.field_behavior) = REQUIRED];
  // conversation id
  string conversation_id = 3 [(google.api.field_behavior) = REQUIRED];
  // new conversation id
  string new_conversation_id = 4 [(google.api.field_behavior) = REQUIRED];
}

// UpdateConversationResponse returns the updated conversation
message UpdateConversationResponse {
  // conversation
  Conversation conversation = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// DeleteConversationRequest is used to delete a conversation
message DeleteConversationRequest {
  // namespace id
  string namespace_id = 1 [(google.api.field_behavior) = REQUIRED];
  // catalog id
  string app_id = 2 [(google.api.field_behavior) = REQUIRED];
  // conversation id
  string conversation_id = 3 [(google.api.field_behavior) = REQUIRED];
}

// DeleteConversationResponse is empty as no content needs to be returned
message DeleteConversationResponse {}

// CreateMessageRequest is used to create a new message
message CreateMessageRequest {
  // namespace id
  string namespace_id = 1 [(google.api.field_behavior) = REQUIRED];
  // catalog id
  string app_id = 2 [(google.api.field_behavior) = REQUIRED];
  // conversation id
  string conversation_id = 3 [(google.api.field_behavior) = REQUIRED];
  // message content
  string content = 4 [(google.api.field_behavior) = REQUIRED];
  // message role
  string role = 5 [(google.api.field_behavior) = REQUIRED];
  // message type
  Message.MessageType type = 6 [(google.api.field_behavior) = REQUIRED];
}

// CreateMessageResponse returns the created message
message CreateMessageResponse {
  // message
  Message message = 1;
}

// ListMessagesRequest is used to list messages in a conversation
message ListMessagesRequest {
  // namespace id
  string namespace_id = 1 [(google.api.field_behavior) = REQUIRED];
  // catalog id
  string app_id = 2 [(google.api.field_behavior) = REQUIRED];
  // conversation id
  string conversation_id = 3 [(google.api.field_behavior) = REQUIRED];
  // latest k messages
  int32 latest_k = 4 [(google.api.field_behavior) = OPTIONAL];
  // page size
  int32 page_size = 5 [(google.api.field_behavior) = OUTPUT_ONLY];
  // page token
  string page_token = 6 [(google.api.field_behavior) = OUTPUT_ONLY];
  // include system messages
  bool include_system_messages = 7 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// ListMessagesResponse returns a list of messages
message ListMessagesResponse {
  // messages
  repeated Message messages = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
  // next page token
  string next_page_token = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
  // total size
  int32 total_size = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// UpdateMessageRequest is used to update a message
message UpdateMessageRequest {
  // namespace id
  string namespace_id = 1 [(google.api.field_behavior) = REQUIRED];
  // catalog id
  string app_id = 2 [(google.api.field_behavior) = REQUIRED];
  // conversation id
  string conversation_id = 3 [(google.api.field_behavior) = REQUIRED];
  // message uid
  string message_uid = 4 [(google.api.field_behavior) = REQUIRED];
  // new message content
  string content = 5 [(google.api.field_behavior) = REQUIRED];
}

// UpdateMessageResponse returns the updated message
message UpdateMessageResponse {
  // message
  Message message = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// DeleteMessageRequest is used to delete a message
message DeleteMessageRequest {
  // namespace id
  string namespace_id = 1 [(google.api.field_behavior) = REQUIRED];
  // catalog id
  string app_id = 2 [(google.api.field_behavior) = REQUIRED];
  // conversation id
  string conversation_id = 3 [(google.api.field_behavior) = REQUIRED];
  // message uid
  string message_uid = 4 [(google.api.field_behavior) = REQUIRED];
}

// DeleteMessageResponse is empty as no content needs to be returned
message DeleteMessageResponse {}
