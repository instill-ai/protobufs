{
  "swagger": "2.0",
  "info": {
    "title": "model/model.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Model"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/__liveness": {
      "get": {
        "operationId": "Model_Liveness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/instillmodelHealthCheckResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Model"
        ]
      }
    },
    "/__readiness": {
      "get": {
        "operationId": "Model_Readiness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/instillmodelHealthCheckResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Model"
        ]
      }
    },
    "/health/model": {
      "get": {
        "operationId": "Model_Liveness2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/instillmodelHealthCheckResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Model"
        ]
      }
    },
    "/models": {
      "get": {
        "operationId": "Model_ListModels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modelListModelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Model"
        ]
      },
      "post": {
        "operationId": "Model_CreateModel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modelModelInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modelCreateModelRequest"
            }
          }
        ],
        "tags": [
          "Model"
        ]
      }
    },
    "/models/{model.name}/versions/{model.version}": {
      "patch": {
        "operationId": "Model_UpdateModel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modelModelInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "model.name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model.version",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modelUpdateModelRequest"
            }
          }
        ],
        "tags": [
          "Model"
        ]
      }
    },
    "/models/{name}": {
      "get": {
        "operationId": "Model_GetModel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modelModelInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Model"
        ]
      },
      "delete": {
        "operationId": "Model_DeleteModel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Model"
        ]
      }
    },
    "/models/{name}/outputs": {
      "post": {
        "summary": "This method handle request with file in body such as url/base64 encode",
        "operationId": "Model_PredictModel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "model name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "integer",
                  "format": "int32",
                  "title": "model version",
                  "required": [
                    "version"
                  ]
                },
                "content": {
                  "type": "string",
                  "format": "byte",
                  "title": "byte array of image content",
                  "required": [
                    "content"
                  ]
                }
              },
              "required": [
                "version",
                "content"
              ]
            }
          }
        ],
        "tags": [
          "Model"
        ]
      }
    },
    "/models/{name}/versions/{version}": {
      "delete": {
        "operationId": "Model_DeleteModelVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Model"
        ]
      }
    }
  },
  "definitions": {
    "instillmodelHealthCheckResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "modelCVTask": {
      "type": "string",
      "enum": [
        "UNDEFINED",
        "CLASSIFICATION",
        "DETECTION"
      ],
      "default": "UNDEFINED"
    },
    "modelCreateModelRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "required": [
            "name"
          ]
        },
        "content": {
          "type": "string",
          "format": "byte",
          "required": [
            "content"
          ]
        },
        "description": {
          "type": "string"
        },
        "cvTask": {
          "$ref": "#/definitions/modelCVTask",
          "title": "CV task type such as object detection, classification"
        }
      },
      "required": [
        "name",
        "content"
      ]
    },
    "modelListModelResponse": {
      "type": "object",
      "properties": {
        "models": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelModelInfo"
          }
        }
      }
    },
    "modelModelInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "fullName": {
          "type": "string",
          "readOnly": true
        },
        "cvTask": {
          "$ref": "#/definitions/modelCVTask"
        },
        "versions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelModelVersion"
          }
        }
      }
    },
    "modelModelStatus": {
      "type": "string",
      "enum": [
        "OFFLINE",
        "ONLINE",
        "ERROR"
      ],
      "default": "OFFLINE"
    },
    "modelModelVersion": {
      "type": "object",
      "properties": {
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "modelId": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/modelModelStatus"
        }
      }
    },
    "modelUpdateModelInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "required": [
            "name"
          ]
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "required": [
            "version"
          ]
        },
        "status": {
          "$ref": "#/definitions/modelModelStatus"
        },
        "description": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "version"
      ]
    },
    "modelUpdateModelRequest": {
      "type": "object",
      "properties": {
        "model": {
          "$ref": "#/definitions/modelUpdateModelInfo"
        },
        "updateMask": {
          "type": "string",
          "required": [
            "update_mask"
          ]
        }
      },
      "required": [
        "updateMask"
      ]
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
