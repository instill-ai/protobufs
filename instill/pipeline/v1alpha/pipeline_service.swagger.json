{
  "swagger": "2.0",
  "info": {
    "title": "instill/pipeline/v1alpha/pipeline_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "PipelineService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1alpha/__liveness": {
      "get": {
        "summary": "Liveness method receives a LivenessRequest message and returns a\nLivenessResponse message.\nSee https://github.com/grpc/grpc/blob/master/doc/health-checking.md",
        "operationId": "PipelineService_Liveness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/instillpipelinev1alphaLivenessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "health_check_request.service",
            "description": "Service name to check for its readiness status.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PipelineService"
        ]
      }
    },
    "/v1alpha/__readiness": {
      "get": {
        "summary": "Readiness method receives a ReadinessRequest message and returns a\nReadinessResponse message.\nSee https://github.com/grpc/grpc/blob/master/doc/health-checking.md",
        "operationId": "PipelineService_Readiness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/instillpipelinev1alphaReadinessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "health_check_request.service",
            "description": "Service name to check for its readiness status.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PipelineService"
        ]
      }
    },
    "/v1alpha/health/pipeline": {
      "get": {
        "summary": "Liveness method receives a LivenessRequest message and returns a\nLivenessResponse message.\nSee https://github.com/grpc/grpc/blob/master/doc/health-checking.md",
        "operationId": "PipelineService_Liveness2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/instillpipelinev1alphaLivenessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "health_check_request.service",
            "description": "Service name to check for its readiness status.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PipelineService"
        ]
      }
    },
    "/v1alpha/pipelines": {
      "get": {
        "summary": "ListPipeline method receives a ListPipelineRequest message and returns a\nListPipelineResponse message.",
        "operationId": "PipelineService_ListPipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaListPipelineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page_size",
            "description": "The maximum number of pipelines to return. The service may return fewer\nthan this value. If unspecified, at most 10 pipelines will be returned. The\nmaximum value is 100; values above 100 will be coerced to 100.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "page_token",
            "description": "Page token.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "view",
            "description": "View view (default is VIEW_BASIC).\n\n - VIEW_UNSPECIFIED: View: UNSPECIFIED\n - VIEW_BASIC: View: BASIC\n - VIEW_FULL: View: FULL",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "VIEW_UNSPECIFIED",
              "VIEW_BASIC",
              "VIEW_FULL"
            ],
            "default": "VIEW_UNSPECIFIED"
          }
        ],
        "tags": [
          "PipelineService"
        ]
      },
      "post": {
        "summary": "CreatePipeline method receives a CreatePipelineRequest message and returns\na CreatePipelineResponse message.",
        "operationId": "PipelineService_CreatePipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaCreatePipelineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "A pipeline resource to create",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alphaPipeline"
            }
          }
        ],
        "tags": [
          "PipelineService"
        ]
      }
    },
    "/v1alpha/{name}": {
      "get": {
        "summary": "GetPipeline method receives a GetPipelineRequest message and returns a\nGetPipelineResponse message.",
        "operationId": "PipelineService_GetPipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaGetPipelineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Pipeline resource name. It must have the format of \"pipelines/*\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "pipelines/[^/]+"
          },
          {
            "name": "view",
            "description": "Pipeline resource view (default is VIEW_BASIC).\n\n - VIEW_UNSPECIFIED: View: UNSPECIFIED\n - VIEW_BASIC: View: BASIC\n - VIEW_FULL: View: FULL",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "VIEW_UNSPECIFIED",
              "VIEW_BASIC",
              "VIEW_FULL"
            ],
            "default": "VIEW_UNSPECIFIED"
          }
        ],
        "tags": [
          "PipelineService"
        ]
      },
      "delete": {
        "summary": "DeletePipeline method receives a DeletePipelineRequest message and returns\na DeletePipelineResponse message.",
        "operationId": "PipelineService_DeletePipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaDeletePipelineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Pipeline resource name. It must have the format of \"pipelines/*\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "pipelines/[^/]+"
          }
        ],
        "tags": [
          "PipelineService"
        ]
      }
    },
    "/v1alpha/{name}:activate": {
      "post": {
        "summary": "Activate a pipeline.\nThe `state` of the pipeline after activating is `ACTIVE`.\nActivatePipeline` can be called on Pipelines in the state `INACTIVE`;\nPipelines in a different state (including `ACTIVE`) returns an error.",
        "operationId": "PipelineService_ActivatePipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaActivatePipelineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Pipeline resource name. It must have the format of \"pipelines/*\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "pipelines/[^/]+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "ActivatePipelineRequest represents a request to activate a pipeline"
            }
          }
        ],
        "tags": [
          "PipelineService"
        ]
      }
    },
    "/v1alpha/{name}:deactivate": {
      "post": {
        "summary": "Deactivate a pipeline.\nThe `state` of the pipeline after inactivating is `INACTIVE`.\nDeactivatePipeline` can be called on Pipelines in the state `ACTIVE`;\nPipelines in a different state (including `INACTIVE`) returns an error.",
        "operationId": "PipelineService_DeactivatePipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaDeactivatePipelineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Pipeline resource name. It must have the format of \"pipelines/*\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "pipelines/[^/]+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "DeactivatePipelineRequest represents a request to deactivate a pipeline"
            }
          }
        ],
        "tags": [
          "PipelineService"
        ]
      }
    },
    "/v1alpha/{name}:rename": {
      "post": {
        "summary": "RenamePipeline method receives a RenamePipelineRequest message and returns\na RenamePipelineResponse message.",
        "operationId": "PipelineService_RenamePipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaRenamePipelineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Pipeline resource name. It must have the format of \"pipelines/*\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "pipelines/[^/]+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "new_pipeline_id": {
                  "type": "string",
                  "title": "Pipeline new resource id to replace with the pipeline resource name to be\n\"pipelines/{new_pipeline_id}\"",
                  "required": [
                    "new_pipeline_id"
                  ]
                }
              },
              "title": "RenamePipelineRequest represents a request to rename the pipeline resource\nname",
              "required": [
                "new_pipeline_id"
              ]
            }
          }
        ],
        "tags": [
          "PipelineService"
        ]
      }
    },
    "/v1alpha/{name}:trigger": {
      "post": {
        "summary": "TriggerPipeline method receives a TriggerPipelineRequest message and\nreturns a TriggerPipelineResponse.",
        "operationId": "PipelineService_TriggerPipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaTriggerPipelineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Pipeline resource name. It must have the format of \"pipelines/*\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "pipelines/[^/]+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/instillpipelinev1alphaInput"
                  },
                  "title": "Input to the pipeline",
                  "required": [
                    "inputs"
                  ]
                }
              },
              "title": "TriggerPipelineRequest represents a request to trigger a pipeline",
              "required": [
                "inputs"
              ]
            }
          }
        ],
        "tags": [
          "PipelineService"
        ]
      }
    },
    "/v1alpha/{permalink}:lookUp": {
      "get": {
        "summary": "LookUpPipeline method receives a LookUpPipelineRequest message and returns\na LookUpPipelineResponse",
        "operationId": "PipelineService_LookUpPipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaLookUpPipelineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "permalink",
            "description": "Permalink of a pipeline. For example:\n\"pipelines/{uid}\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "pipelines/[^/]+"
          }
        ],
        "tags": [
          "PipelineService"
        ]
      }
    },
    "/v1alpha/{pipeline.name}": {
      "patch": {
        "summary": "UpdatePipeline method receives a UpdatePipelineRequest message and returns\na UpdatePipelineResponse message.",
        "operationId": "PipelineService_UpdatePipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaUpdatePipelineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pipeline.name",
            "description": "Pipeline resource name. It must have the format of \"pipelines/*\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "pipelines/[^/]+"
          },
          {
            "name": "body",
            "description": "A pipeline resource to update",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alphaPipeline"
            }
          },
          {
            "name": "update_mask",
            "description": "Update mask for a pipeline resource.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PipelineService"
        ]
      }
    }
  },
  "definitions": {
    "PipelineMode": {
      "type": "string",
      "enum": [
        "MODE_UNSPECIFIED",
        "MODE_SYNC",
        "MODE_ASYNC"
      ],
      "default": "MODE_UNSPECIFIED",
      "description": "- MODE_UNSPECIFIED: Mode: UNSPECIFIED\n - MODE_SYNC: Mode: SYNC\n - MODE_ASYNC: Mode: ASYNC",
      "title": "Mode enumerates the pipeline modes"
    },
    "instillpipelinev1alphaHealthCheckRequest": {
      "type": "object",
      "properties": {
        "service": {
          "type": "string",
          "title": "Service name to check for its readiness status"
        }
      },
      "title": "HealthCheckRequest represents a request to health check a service"
    },
    "instillpipelinev1alphaHealthCheckResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/instillpipelinev1alphaHealthCheckResponseServingStatus",
          "title": "Status is the instance of the enum type ServingStatus"
        }
      },
      "title": "HealthCheckResponse represents a response for a service heath status"
    },
    "instillpipelinev1alphaHealthCheckResponseServingStatus": {
      "type": "string",
      "enum": [
        "SERVING_STATUS_UNSPECIFIED",
        "SERVING_STATUS_SERVING",
        "SERVING_STATUS_NOT_SERVING"
      ],
      "default": "SERVING_STATUS_UNSPECIFIED",
      "description": "- SERVING_STATUS_UNSPECIFIED: Serving status: UNSPECIFIED\n - SERVING_STATUS_SERVING: Serving status: SERVING\n - SERVING_STATUS_NOT_SERVING: Serving status: NOT SERVING",
      "title": "ServingStatus enumerates the status of a queried service"
    },
    "instillpipelinev1alphaInput": {
      "type": "object",
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image type URL"
        },
        "image_base64": {
          "type": "string",
          "title": "Image type base64"
        }
      },
      "title": "Input represents the input to a pipeline"
    },
    "instillpipelinev1alphaLivenessResponse": {
      "type": "object",
      "properties": {
        "health_check_response": {
          "$ref": "#/definitions/instillpipelinev1alphaHealthCheckResponse",
          "title": "HealthCheckResponse message"
        }
      },
      "title": "LivenessResponse represents a response for a service liveness status"
    },
    "instillpipelinev1alphaReadinessResponse": {
      "type": "object",
      "properties": {
        "health_check_response": {
          "$ref": "#/definitions/instillpipelinev1alphaHealthCheckResponse",
          "title": "HealthCheckResponse message"
        }
      },
      "title": "ReadinessResponse represents a response for a service readiness status"
    },
    "instillpipelinev1alphaView": {
      "type": "string",
      "enum": [
        "VIEW_UNSPECIFIED",
        "VIEW_BASIC",
        "VIEW_FULL"
      ],
      "default": "VIEW_UNSPECIFIED",
      "description": "View represents a view of any resource. The resource view is implemented by\nadding a parameter to the method request which allows the client to specify\nwhich view of the resource it wants to receive in the response.\n\n - VIEW_UNSPECIFIED: View: UNSPECIFIED\n - VIEW_BASIC: View: BASIC\n - VIEW_FULL: View: FULL"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1alphaActivatePipelineResponse": {
      "type": "object",
      "properties": {
        "pipeline": {
          "$ref": "#/definitions/v1alphaPipeline",
          "title": "A pipeline resource"
        }
      },
      "title": "ActivatePipelineResponse represents an activated pipeline"
    },
    "v1alphaCreatePipelineResponse": {
      "type": "object",
      "properties": {
        "pipeline": {
          "$ref": "#/definitions/v1alphaPipeline",
          "title": "The created pipeline resource"
        }
      },
      "title": "CreatePipelineResponse represents a response for a pipeline resource"
    },
    "v1alphaDeactivatePipelineResponse": {
      "type": "object",
      "properties": {
        "pipeline": {
          "$ref": "#/definitions/v1alphaPipeline",
          "title": "A pipeline resource"
        }
      },
      "title": "DeactivatePipelineResponse represents an inactivated pipeline"
    },
    "v1alphaDeletePipelineResponse": {
      "type": "object",
      "title": "DeletePipelineResponse represents an empty response"
    },
    "v1alphaGetPipelineResponse": {
      "type": "object",
      "properties": {
        "pipeline": {
          "$ref": "#/definitions/v1alphaPipeline",
          "title": "A pipeline resource"
        }
      },
      "title": "GetPipelineResponse represents a response for a pipeline resource"
    },
    "v1alphaListPipelineResponse": {
      "type": "object",
      "properties": {
        "pipelines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alphaPipeline"
          },
          "title": "A list of pipeline resources"
        },
        "next_page_token": {
          "type": "string",
          "title": "Next page token"
        },
        "total_size": {
          "type": "string",
          "format": "int64",
          "title": "Total count of pipeline resources"
        }
      },
      "title": "ListPipelineResponse represents a response for a list of pipelines"
    },
    "v1alphaLookUpPipelineResponse": {
      "type": "object",
      "properties": {
        "pipeline": {
          "$ref": "#/definitions/v1alphaPipeline",
          "title": "A pipeline resource"
        }
      },
      "title": "LookUpPipelineResponse represents a response for a pipeline resource"
    },
    "v1alphaPipeline": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Pipeline resource name. It must have the format of \"pipelines/*\"",
          "readOnly": true
        },
        "uid": {
          "type": "string",
          "title": "Pipeline UUID",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "Pipeline resource ID (the last segment of the resource name) used to\nconstruct the resource name. This conforms to RFC-1034, which restricts to\nletters, numbers, and hyphen, with the first character a letter, the last a\nletter or a number, and a 63 character maximum."
        },
        "description": {
          "type": "string",
          "title": "Pipeline description"
        },
        "recipe": {
          "$ref": "#/definitions/v1alphaRecipe",
          "title": "Pipeline recipe"
        },
        "mode": {
          "$ref": "#/definitions/PipelineMode",
          "title": "Pipeline mode"
        },
        "state": {
          "$ref": "#/definitions/v1alphaPipelineState",
          "title": "Pipeline state"
        },
        "user": {
          "type": "string",
          "description": "The resource name of a user, e.g., \"users/local-user\".",
          "readOnly": true
        },
        "org": {
          "type": "string",
          "title": "The resource name of an organization",
          "readOnly": true
        },
        "create_time": {
          "type": "string",
          "format": "date-time",
          "title": "Pipeline creation time",
          "readOnly": true
        },
        "update_time": {
          "type": "string",
          "format": "date-time",
          "title": "Pipeline update time",
          "readOnly": true
        }
      },
      "title": "Pipeline represents the content of a pipeline"
    },
    "v1alphaPipelineState": {
      "type": "string",
      "enum": [
        "STATE_UNSPECIFIED",
        "STATE_INACTIVE",
        "STATE_ACTIVE",
        "STATE_ERROR"
      ],
      "default": "STATE_UNSPECIFIED",
      "description": "- STATE_UNSPECIFIED: State: UNSPECIFIED\n - STATE_INACTIVE: State INACTIVE indicates the pipeline is inactive\n - STATE_ACTIVE: State ACTIVE indicates the pipeline is active\n - STATE_ERROR: State ERROR indicates the pipeline has error",
      "title": "State enumerates the state of a pipeline"
    },
    "v1alphaRecipe": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "title": "A source connector resource",
          "required": [
            "source"
          ]
        },
        "destination": {
          "type": "string",
          "title": "A destination connector resource",
          "required": [
            "destination"
          ]
        },
        "model_instances": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "A list of model instance resources",
          "required": [
            "model_instances"
          ]
        }
      },
      "title": "Pipeline represents a pipeline recipe",
      "required": [
        "source",
        "destination",
        "model_instances"
      ]
    },
    "v1alphaRenamePipelineResponse": {
      "type": "object",
      "properties": {
        "pipeline": {
          "$ref": "#/definitions/v1alphaPipeline",
          "title": "A pipeline resource"
        }
      },
      "title": "RenamePipelineResponse represents a renamed pipeline resource"
    },
    "v1alphaTriggerPipelineBinaryFileUploadResponse": {
      "type": "object",
      "properties": {
        "output": {
          "type": "object",
          "title": "Output from a pipeline"
        }
      },
      "title": "TriggerPipelineBinaryFileUploadResponse represents a response for the output\nof a pipeline"
    },
    "v1alphaTriggerPipelineResponse": {
      "type": "object",
      "properties": {
        "output": {
          "type": "object",
          "title": "Output from a pipeline"
        }
      },
      "title": "TriggerPipelineResponse represents a response for the output of a pipeline"
    },
    "v1alphaUpdatePipelineResponse": {
      "type": "object",
      "properties": {
        "pipeline": {
          "$ref": "#/definitions/v1alphaPipeline",
          "title": "An updated pipeline resource"
        }
      },
      "title": "UpdatePipelineResponse represents a response for a pipeline resource"
    }
  }
}
