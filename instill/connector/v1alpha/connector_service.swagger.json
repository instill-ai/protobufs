{
  "swagger": "2.0",
  "info": {
    "title": "instill/connector/v1alpha/connector_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ConnectorService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1alpha/__liveness": {
      "get": {
        "summary": "Liveness method receives a LivenessRequest message and returns a\nLivenessResponse message.\nSee https://github.com/grpc/grpc/blob/master/doc/health-checking.md",
        "operationId": "ConnectorService_Liveness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/instillconnectorv1alphaLivenessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "health_check_request.service",
            "description": "Service name to check for its readiness status.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    },
    "/v1alpha/__readiness": {
      "get": {
        "summary": "Readiness method receives a ReadinessRequest message and returns a\nReadinessResponse message.\nSee https://github.com/grpc/grpc/blob/master/doc/health-checking.md",
        "operationId": "ConnectorService_Readiness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/instillconnectorv1alphaReadinessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "health_check_request.service",
            "description": "Service name to check for its readiness status.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    },
    "/v1alpha/destination-connector-definitions": {
      "get": {
        "summary": "ListDestinationConnectorDefinition method receives a\nListDestinationConnectorDefinitionRequest message and returns a\nListDestinationConnectorDefinitionResponse message.",
        "operationId": "ConnectorService_ListDestinationConnectorDefinition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaListDestinationConnectorDefinitionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page_size",
            "description": "The maximum number of DestinationConnectorDefinitions to return. The\nservice may return fewer than this value. If unspecified, at most 10\nDestinationConnectorDefinitions will be returned. The maximum value is 100;\nvalues above 100 will be coerced to 100.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "page_token",
            "description": "Page token.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "view",
            "description": "Definition view (default is DEFINITION_VIEW_BASIC).\n\n - VIEW_UNSPECIFIED: View: UNSPECIFIED\n - VIEW_BASIC: View: BASIC\n - VIEW_FULL: View: FULL",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "VIEW_UNSPECIFIED",
              "VIEW_BASIC",
              "VIEW_FULL"
            ],
            "default": "VIEW_UNSPECIFIED"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    },
    "/v1alpha/destination-connectors": {
      "get": {
        "summary": "ListDestinationConnector method receives a ListDestinationConnectorRequest\nmessage and returns a ListDestinationConnectorResponse message.",
        "operationId": "ConnectorService_ListDestinationConnector",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaListDestinationConnectorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page_size",
            "description": "The maximum number of connectors to return. The service may return fewer\nthan this value. If unspecified, at most 10 connectors will be returned.\nThe maximum value is 100; values above 100 will be coerced to 100.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "page_token",
            "description": "Page token.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "view",
            "description": "DestinationConnector view (default is VIEW_BASIC).\n\n - VIEW_UNSPECIFIED: View: UNSPECIFIED\n - VIEW_BASIC: View: BASIC\n - VIEW_FULL: View: FULL",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "VIEW_UNSPECIFIED",
              "VIEW_BASIC",
              "VIEW_FULL"
            ],
            "default": "VIEW_UNSPECIFIED"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      },
      "post": {
        "summary": "CreateDestinationConnector method receives a\nCreateDestinationConnectorRequest message and returns a\nCreateDestinationConnectorResponse message.",
        "operationId": "ConnectorService_CreateDestinationConnector",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaCreateDestinationConnectorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "DestinationConnector resource",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alphaDestinationConnector"
            }
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    },
    "/v1alpha/health/connector": {
      "get": {
        "summary": "Liveness method receives a LivenessRequest message and returns a\nLivenessResponse message.\nSee https://github.com/grpc/grpc/blob/master/doc/health-checking.md",
        "operationId": "ConnectorService_Liveness2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/instillconnectorv1alphaLivenessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "health_check_request.service",
            "description": "Service name to check for its readiness status.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    },
    "/v1alpha/source-connector-definitions": {
      "get": {
        "summary": "ListSourceConnectorDefinition method receives a\nListSourceConnectorDefinitionRequest message and returns a\nListSourceConnectorDefinitionResponse message.",
        "operationId": "ConnectorService_ListSourceConnectorDefinition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaListSourceConnectorDefinitionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page_size",
            "description": "The maximum number of SourceConnectorDefinitions to return. The service may\nreturn fewer than this value. If unspecified, at most 10\nSourceConnectorDefinitions will be returned. The maximum value is 100;\nvalues above 100 will be coerced to 100.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "page_token",
            "description": "Page token.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "view",
            "description": "Definition view (default is DEFINITION_VIEW_BASIC).\n\n - VIEW_UNSPECIFIED: View: UNSPECIFIED\n - VIEW_BASIC: View: BASIC\n - VIEW_FULL: View: FULL",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "VIEW_UNSPECIFIED",
              "VIEW_BASIC",
              "VIEW_FULL"
            ],
            "default": "VIEW_UNSPECIFIED"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    },
    "/v1alpha/source-connectors": {
      "get": {
        "summary": "ListSourceConnector method receives a ListSourceConnectorRequest message\nand returns a ListSourceConnectorResponse message.",
        "operationId": "ConnectorService_ListSourceConnector",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaListSourceConnectorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page_size",
            "description": "The maximum number of connectors to return. The service may return fewer\nthan this value. If unspecified, at most 10 connectors will be returned.\nThe maximum value is 100; values above 100 will be coerced to 100.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "page_token",
            "description": "Page token.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "view",
            "description": "SourceConnector view (default is VIEW_BASIC).\n\n - VIEW_UNSPECIFIED: View: UNSPECIFIED\n - VIEW_BASIC: View: BASIC\n - VIEW_FULL: View: FULL",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "VIEW_UNSPECIFIED",
              "VIEW_BASIC",
              "VIEW_FULL"
            ],
            "default": "VIEW_UNSPECIFIED"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      },
      "post": {
        "summary": "CreateSourceConnector method receives a CreateSourceConnectorRequest\nmessage and returns a CreateSourceConnectorResponse message.",
        "operationId": "ConnectorService_CreateSourceConnector",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaCreateSourceConnectorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "SourceConnector resource",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alphaSourceConnector"
            }
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    },
    "/v1alpha/{destination_connector.name}": {
      "patch": {
        "summary": "UpdateDestinationConnector method receives a\nUpdateDestinationConnectorRequest message and returns a\nUpdateDestinationConnectorResponse message.",
        "operationId": "ConnectorService_UpdateDestinationConnector",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaUpdateDestinationConnectorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "destination_connector.name",
            "description": "DestinationConnector resource name. It must have the format of\n\"source-connectors/*\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "connectors/[^/]+"
          },
          {
            "name": "body",
            "description": "DestinationConnector resource",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alphaDestinationConnector"
            }
          },
          {
            "name": "update_mask",
            "description": "Update mask for a DestinationConnector resource.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    },
    "/v1alpha/{name_1}": {
      "get": {
        "summary": "GetSourceConnectorDefinition method receives a\nGetSourceConnectorDefinitionRequest message and returns a\nGetGetSourceConnectorDefinitionResponse message.",
        "operationId": "ConnectorService_GetSourceConnectorDefinition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaGetSourceConnectorDefinitionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "SourceConnectorDefinition resource name. It must have the format of\n\"source-connector-definitions/*\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "source-connector-definitions/[^/]+"
          },
          {
            "name": "view",
            "description": "SourceConnectorDefinition resource view (default is DEFINITION_VIEW_BASIC).\n\n - VIEW_UNSPECIFIED: View: UNSPECIFIED\n - VIEW_BASIC: View: BASIC\n - VIEW_FULL: View: FULL",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "VIEW_UNSPECIFIED",
              "VIEW_BASIC",
              "VIEW_FULL"
            ],
            "default": "VIEW_UNSPECIFIED"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      },
      "delete": {
        "summary": "DeleteDestinationConnector method receives a\nDeleteDestinationConnectorRequest message and returns a\nDeleteDestinationConnectorResponse message.",
        "operationId": "ConnectorService_DeleteDestinationConnector",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaDeleteDestinationConnectorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_1",
            "description": "DestinationConnector resource name. It must have the format of\n\"destination-connectors/*\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "destination-connectors/[^/]+"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    },
    "/v1alpha/{name_2}": {
      "get": {
        "summary": "GetSourceConnector method receives a GetSourceConnectorRequest message and\nreturns a GetSourceConnectorResponse message.",
        "operationId": "ConnectorService_GetSourceConnector",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaGetSourceConnectorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_2",
            "description": "SourceConnectorConnector resource name. It must have the format of\n\"destination-connectors/*\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "source-connectors/[^/]+"
          },
          {
            "name": "view",
            "description": "SourceConnector view (default is VIEW_BASIC).\n\n - VIEW_UNSPECIFIED: View: UNSPECIFIED\n - VIEW_BASIC: View: BASIC\n - VIEW_FULL: View: FULL",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "VIEW_UNSPECIFIED",
              "VIEW_BASIC",
              "VIEW_FULL"
            ],
            "default": "VIEW_UNSPECIFIED"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    },
    "/v1alpha/{name_3}": {
      "get": {
        "summary": "GetDestinationConnector method receives a GetDestinationConnectorRequest\nmessage and returns a GetDestinationConnectorResponse message.",
        "operationId": "ConnectorService_GetDestinationConnector",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaGetDestinationConnectorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_3",
            "description": "DestinationConnectorConnector resource name. It must have the format of\n\"destination-connectors/*\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "destination-connectors/[^/]+"
          },
          {
            "name": "view",
            "description": "DestinationConnector view (default is VIEW_BASIC).\n\n - VIEW_UNSPECIFIED: View: UNSPECIFIED\n - VIEW_BASIC: View: BASIC\n - VIEW_FULL: View: FULL",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "VIEW_UNSPECIFIED",
              "VIEW_BASIC",
              "VIEW_FULL"
            ],
            "default": "VIEW_UNSPECIFIED"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      },
      "delete": {
        "summary": "DeleteSourceConnector method receives a DeleteSourceConnectorRequest\nmessage and returns a DeleteSourceConnectorResponse message.",
        "operationId": "ConnectorService_DeleteSourceConnector",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaDeleteSourceConnectorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "SourceConnector resource name. It must have the format of\n\"destination-connectors/*\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "source-connectors/[^/]+"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    },
    "/v1alpha/{name}": {
      "get": {
        "summary": "GetSourceConnectorDefinition method receives a\nGetSourceConnectorDefinitionRequest message and returns a\nGetGetSourceConnectorDefinitionResponse message.",
        "operationId": "ConnectorService_GetSourceConnectorDefinition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaGetSourceConnectorDefinitionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "SourceConnectorDefinition resource name. It must have the format of\n\"source-connector-definitions/*\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "source-connector-definitions/[^/]+"
          },
          {
            "name": "view",
            "description": "SourceConnectorDefinition resource view (default is DEFINITION_VIEW_BASIC).\n\n - VIEW_UNSPECIFIED: View: UNSPECIFIED\n - VIEW_BASIC: View: BASIC\n - VIEW_FULL: View: FULL",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "VIEW_UNSPECIFIED",
              "VIEW_BASIC",
              "VIEW_FULL"
            ],
            "default": "VIEW_UNSPECIFIED"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      },
      "delete": {
        "summary": "DeleteSourceConnector method receives a DeleteSourceConnectorRequest\nmessage and returns a DeleteSourceConnectorResponse message.",
        "operationId": "ConnectorService_DeleteSourceConnector",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaDeleteSourceConnectorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "SourceConnector resource name. It must have the format of\n\"destination-connectors/*\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "source-connectors/[^/]+"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    },
    "/v1alpha/{permalink_1}:lookUp": {
      "get": {
        "summary": "LookUpDestinationConnector method receives a\nLookUpDestinationConnectorRequest message and returns a\nLookUpDestinationConnectorResponse",
        "operationId": "ConnectorService_LookUpDestinationConnector",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaLookUpDestinationConnectorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "permalink_1",
            "description": "Permalink of a source connector. For example:\n\"destination-connectors/{uid}\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "destination-connectors/[^/]+"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    },
    "/v1alpha/{permalink}:lookUp": {
      "get": {
        "summary": "LookUpSourceConnector method receives a LookUpSourceConnectorRequest\nmessage and returns a LookUpSourceConnectorResponse",
        "operationId": "ConnectorService_LookUpSourceConnector",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaLookUpSourceConnectorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "permalink",
            "description": "Permalink of a source connector. For example:\n\"source-connectors/{uid}\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "source-connectors/[^/]+"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    },
    "/v1alpha/{source_connector.name}": {
      "patch": {
        "summary": "UpdateSourceConnector method receives a UpdateSourceConnectorRequest\nmessage and returns a UpdateSourceConnectorResponse message.",
        "operationId": "ConnectorService_UpdateSourceConnector",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaUpdateSourceConnectorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "source_connector.name",
            "description": "SourceConnector resource name. It must have the format of\n\"source-connectors/*\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "connectors/[^/]+"
          },
          {
            "name": "body",
            "description": "SourceConnector resource",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alphaSourceConnector"
            }
          },
          {
            "name": "update_mask",
            "description": "Update mask for a SourceConnector resource.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    }
  },
  "definitions": {
    "AdvancedAuthAuthFlowType": {
      "type": "string",
      "enum": [
        "AUTH_FLOW_TYPE_UNSPECIFIED",
        "AUTH_FLOW_TYPE_OAUTH2_0",
        "AUTH_FLOW_TYPE_OAUTH1_0"
      ],
      "default": "AUTH_FLOW_TYPE_UNSPECIFIED",
      "description": "- AUTH_FLOW_TYPE_UNSPECIFIED: AuthFlowType: AUTH_TYPE_UNSPECIFIED\n - AUTH_FLOW_TYPE_OAUTH2_0: AuthFlowType: AUTH_TYPE_OAUTH2_0\n - AUTH_FLOW_TYPE_OAUTH1_0: AuthFlowType: AUTH_TYPE_OAUTH1_0",
      "title": "AuthFlowType enumerates the type of auth"
    },
    "SpecSupportedDestinationSyncModes": {
      "type": "string",
      "enum": [
        "SUPPORTED_DESTINATION_SYNC_MODES_UNSPECIFIED",
        "SUPPORTED_DESTINATION_SYNC_MODES_APPEND",
        "SUPPORTED_DESTINATION_SYNC_MODES_OVERWRITE",
        "SUPPORTED_DESTINATION_SYNC_MODES_APPEND_DEDUP"
      ],
      "default": "SUPPORTED_DESTINATION_SYNC_MODES_UNSPECIFIED",
      "description": "- SUPPORTED_DESTINATION_SYNC_MODES_UNSPECIFIED: SupportedDestinationSyncModes: DESTINATION_SYNC_MODE_UNSPECIFIED\n - SUPPORTED_DESTINATION_SYNC_MODES_APPEND: SupportedDestinationSyncModes: DESTINATION_SYNC_MODE_APPEND\n - SUPPORTED_DESTINATION_SYNC_MODES_OVERWRITE: SupportedDestinationSyncModes: DESTINATION_SYNC_MODE_OVERWRITE\n - SUPPORTED_DESTINATION_SYNC_MODES_APPEND_DEDUP: SupportedDestinationSyncModes: DESTINATION_SYNC_MODE_APPEND_DEDUP",
      "title": "SupportedDestinationSyncMode enumerates destination sync mode"
    },
    "instillconnectorv1alphaHealthCheckRequest": {
      "type": "object",
      "properties": {
        "service": {
          "type": "string",
          "title": "Service name to check for its readiness status"
        }
      },
      "title": "HealthCheckRequest represents a request to health check a service"
    },
    "instillconnectorv1alphaHealthCheckResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/instillconnectorv1alphaHealthCheckResponseServingStatus",
          "title": "Status is the instance of the enum type ServingStatus"
        }
      },
      "title": "HealthCheckResponse represents a response for a service heath status"
    },
    "instillconnectorv1alphaHealthCheckResponseServingStatus": {
      "type": "string",
      "enum": [
        "SERVING_STATUS_UNSPECIFIED",
        "SERVING_STATUS_SERVING",
        "SERVING_STATUS_NOT_SERVING"
      ],
      "default": "SERVING_STATUS_UNSPECIFIED",
      "description": "- SERVING_STATUS_UNSPECIFIED: Serving status: UNSPECIFIED\n - SERVING_STATUS_SERVING: Serving status: SERVING\n - SERVING_STATUS_NOT_SERVING: Serving status: NOT SERVING",
      "title": "ServingStatus enumerates the status of a queried service"
    },
    "instillconnectorv1alphaLivenessResponse": {
      "type": "object",
      "properties": {
        "health_check_response": {
          "$ref": "#/definitions/instillconnectorv1alphaHealthCheckResponse",
          "title": "HealthCheckResponse message"
        }
      },
      "title": "LivenessResponse represents a response for a service liveness status"
    },
    "instillconnectorv1alphaReadinessResponse": {
      "type": "object",
      "properties": {
        "health_check_response": {
          "$ref": "#/definitions/instillconnectorv1alphaHealthCheckResponse",
          "title": "HealthCheckResponse message"
        }
      },
      "title": "ReadinessResponse represents a response for a service readiness status"
    },
    "instillconnectorv1alphaSpec": {
      "type": "object",
      "properties": {
        "documentation_url": {
          "type": "string",
          "title": "Spec documentation URL",
          "readOnly": true
        },
        "changelog_url": {
          "type": "string",
          "title": "Spec changelog URL",
          "readOnly": true
        },
        "connection_specification": {
          "type": "object",
          "title": "Spec connection specification",
          "required": [
            "connection_specification"
          ]
        },
        "supports_incremental": {
          "type": "boolean",
          "title": "Spec supports incremental flag, i.e., if the connector supports incremental\nmode or not",
          "readOnly": true
        },
        "supports_normalization": {
          "type": "boolean",
          "title": "Spec supports normalization flag, i.e., if the connector supports\nnormalization or not",
          "readOnly": true
        },
        "supports_dbt": {
          "type": "boolean",
          "title": "Spec supports dbt flag, i.e., if the connector supports DBT or not",
          "readOnly": true
        },
        "supported_destination_sync_modes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SpecSupportedDestinationSyncModes"
          },
          "title": "Spec destination sync mode, i.e., a list of destination sync modes\nsupported by the connector",
          "readOnly": true
        },
        "advanced_auth": {
          "$ref": "#/definitions/v1alphaAdvancedAuth",
          "title": "Spec advanced auth, i.e., additional and optional specification object to\ndescribe what an 'advanced' Auth flow would need to function"
        }
      },
      "title": "//////////////////////////////////\nSpec represents a spec data model",
      "required": [
        "connection_specification"
      ]
    },
    "instillconnectorv1alphaView": {
      "type": "string",
      "enum": [
        "VIEW_UNSPECIFIED",
        "VIEW_BASIC",
        "VIEW_FULL"
      ],
      "default": "VIEW_UNSPECIFIED",
      "description": "- VIEW_UNSPECIFIED: View: UNSPECIFIED\n - VIEW_BASIC: View: BASIC\n - VIEW_FULL: View: FULL",
      "title": "View enumerates the definition views"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "typeDate": {
      "type": "object",
      "properties": {
        "year": {
          "type": "integer",
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without\na year."
        },
        "month": {
          "type": "integer",
          "format": "int32",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a\nmonth and day."
        },
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0\nto specify a year by itself or a year and month where the day isn't\nsignificant."
        }
      },
      "description": "* A full date, with non-zero year, month, and day values\n* A month and day value, with a zero year, such as an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, such as a credit card expiration\ndate\n\nRelated types are [google.type.TimeOfDay][google.type.TimeOfDay] and\n`google.protobuf.Timestamp`.",
      "title": "Represents a whole or partial calendar date, such as a birthday. The time of\nday and time zone are either specified elsewhere or are insignificant. The\ndate is relative to the Gregorian Calendar. This can represent one of the\nfollowing:"
    },
    "v1alphaAdvancedAuth": {
      "type": "object",
      "properties": {
        "auth_flow_type": {
          "$ref": "#/definitions/AdvancedAuthAuthFlowType",
          "title": "AdvancedAuth auth flow type"
        },
        "predicate_key": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "AdvancedAuth predicate key, i.e., the JSON Path to a field in the\nconnectorSpecification that should exist for the advanced auth to be\napplicable"
        },
        "predicate_value": {
          "type": "string",
          "title": "AdvancedAuth predicate value, i.e., the value of the predicate key fields\nfor the advanced auth to be applicable"
        },
        "oauth_config_specification": {
          "$ref": "#/definitions/v1alphaOauthConfigSpecification",
          "title": "OauthConfigSpecification represents OAuth config specification"
        }
      },
      "description": "Additional and optional specification object to describe what an 'advanced'\nAuth flow would need to function.\n- A connector should be able to fully function with the configuration as\ndescribed by the ConnectorSpecification in a 'basic' mode.\n- The 'advanced' mode provides easier UX for the user with UI improvements\nand automations. However, this requires further setup on the server side by\ninstance or workspace admins beforehand. The trade-off is that the user does\nnot have to provide as many technical inputs anymore and the auth process is\nfaster and easier to complete."
    },
    "v1alphaConnectionType": {
      "type": "string",
      "enum": [
        "CONNECTION_TYPE_UNSPECIFIED",
        "CONNECTION_TYPE_DIRECTNESS",
        "CONNECTION_TYPE_API",
        "CONNECTION_TYPE_FILE",
        "CONNECTION_TYPE_DATABASE",
        "CONNECTION_TYPE_CUSTOM"
      ],
      "default": "CONNECTION_TYPE_UNSPECIFIED",
      "description": "- CONNECTION_TYPE_UNSPECIFIED: ConnectionType: UNSPECIFIED\n - CONNECTION_TYPE_DIRECTNESS: ConnectionType: DIRECTNESS\n - CONNECTION_TYPE_API: ConnectionType: API\n - CONNECTION_TYPE_FILE: ConnectionType: FILE\n - CONNECTION_TYPE_DATABASE: ConnectionType: DATABASE\n - CONNECTION_TYPE_CUSTOM: ConnectionType: CUSTOM",
      "title": "ConnectionType enumerates a connection type"
    },
    "v1alphaConnector": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "title": "Connector description"
        },
        "configuration": {
          "type": "object",
          "title": "Connector configuration",
          "required": [
            "configuration"
          ]
        },
        "tombstone": {
          "type": "boolean",
          "title": "Connector tombstone",
          "readOnly": true
        },
        "user": {
          "type": "string",
          "description": "The resource name of a user, e.g., \"users/local-user\".",
          "readOnly": true
        },
        "org": {
          "type": "string",
          "title": "The resource name of an organization",
          "readOnly": true
        },
        "create_time": {
          "type": "string",
          "format": "date-time",
          "title": "Connector creation time",
          "readOnly": true
        },
        "update_time": {
          "type": "string",
          "format": "date-time",
          "title": "Connector update time",
          "readOnly": true
        }
      },
      "title": "Connector represents a connector data model",
      "required": [
        "configuration"
      ]
    },
    "v1alphaConnectorDefinition": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "title": "ConnectorDefinition title",
          "readOnly": true
        },
        "docker_repository": {
          "type": "string",
          "title": "ConnectorDefinition Docker repository",
          "readOnly": true
        },
        "docker_image_tag": {
          "type": "string",
          "title": "ConnectorDefinition Docker image tag",
          "readOnly": true
        },
        "documentation_url": {
          "type": "string",
          "title": "ConnectorDefinition documentation URL",
          "readOnly": true
        },
        "icon": {
          "type": "string",
          "title": "ConnectorDefinition icon",
          "readOnly": true
        },
        "connection_type": {
          "$ref": "#/definitions/v1alphaConnectionType",
          "title": "ConnectorDefinition connection type"
        },
        "spec": {
          "$ref": "#/definitions/instillconnectorv1alphaSpec",
          "title": "ConnectorDefinition spec"
        },
        "tombstone": {
          "type": "boolean",
          "title": "ConnectorDefinition tombstone, i.e., if not set or false, the\nconfiguration is active, or otherwise, if true, this configuration is\npermanently off",
          "readOnly": true
        },
        "public": {
          "type": "boolean",
          "title": "ConnectorDefinition public flag, i.e., true if this connector\ndefinition is available to all workspaces",
          "readOnly": true
        },
        "custom": {
          "type": "boolean",
          "title": "ConnectorDefinition custom flag, i.e., whether this is a custom\nconnector definition",
          "readOnly": true
        },
        "release_stage": {
          "$ref": "#/definitions/v1alphaReleaseStage",
          "title": "ConnectorDefinition release stage"
        },
        "release_date": {
          "$ref": "#/definitions/typeDate",
          "description": "ConnectorDefinition release date, i.e., the date when this connector\nwas first released, in yyyy-mm-dd format."
        },
        "resource_requirements": {
          "type": "object",
          "title": "ConnectorDefinition resource requirements",
          "readOnly": true
        },
        "create_time": {
          "type": "string",
          "format": "date-time",
          "title": "ConnectorDefinition creation time",
          "readOnly": true
        },
        "update_time": {
          "type": "string",
          "format": "date-time",
          "title": "ConnectorDefinition update time",
          "readOnly": true
        }
      },
      "title": "ConnectorDefinition represents the connector definition data model"
    },
    "v1alphaCreateDestinationConnectorResponse": {
      "type": "object",
      "properties": {
        "destination_connector": {
          "$ref": "#/definitions/v1alphaDestinationConnector",
          "title": "DestinationConnector resource"
        }
      },
      "title": "CreateDestinationConnectorResponse represents a response for a\nDestinationConnector resource"
    },
    "v1alphaCreateSourceConnectorResponse": {
      "type": "object",
      "properties": {
        "source_connector": {
          "$ref": "#/definitions/v1alphaSourceConnector",
          "title": "SourceConnector resource"
        }
      },
      "title": "CreateSourceConnectorResponse represents a response for a\nSourceConnector resource"
    },
    "v1alphaDeleteDestinationConnectorResponse": {
      "type": "object",
      "title": "DeleteDestinationConnectorResponse represents an empty response"
    },
    "v1alphaDeleteSourceConnectorResponse": {
      "type": "object",
      "title": "DeleteSourceConnectorResponse represents an empty response"
    },
    "v1alphaDestinationConnector": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "DestinationConnector resource name. It must have the format of\n\"source-connectors/*\"",
          "readOnly": true
        },
        "uid": {
          "type": "string",
          "title": "DestinationConnector UUID",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "DestinationConnector resource ID (the last segment of the resource name)\nused to construct the resource name. This conforms to RFC-1034, which\nrestricts to letters, numbers, and hyphen, with the first character a\nletter, the last a letter or a number, and a 63 character maximum."
        },
        "destination_connector_definition": {
          "type": "string",
          "title": "Connector Definition resource (e.g. SourceDefinition or Destination\nDestination)",
          "required": [
            "destination_connector_definition"
          ]
        },
        "connector": {
          "$ref": "#/definitions/v1alphaConnector",
          "title": "DestinationConnector's connector data structure"
        }
      },
      "title": "DestinationConnector represents a destination connector resource",
      "required": [
        "destination_connector_definition"
      ]
    },
    "v1alphaDestinationConnectorDefinition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "DestinationConnectorDefinition resource name. It must have the format of\n\"connector-definitions/*\"",
          "readOnly": true
        },
        "uid": {
          "type": "string",
          "title": "DestinationConnectorDefinition UUID",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "DestinationConnectorDefinition resource ID (the last segment of the\nresource name) used to construct the resource name. This conforms to\nRFC-1034, which restricts to letters, numbers, and hyphen, with the first\ncharacter a letter, the last a letter or a number, and a 63 character\nmaximum."
        },
        "connector_definition": {
          "$ref": "#/definitions/v1alphaConnectorDefinition",
          "title": "DestinationConnectorDefinition connector definition"
        }
      },
      "title": "DestinationConnectorDefinition represents the destination connector\ndefinition resource"
    },
    "v1alphaGetDestinationConnectorDefinitionResponse": {
      "type": "object",
      "properties": {
        "destination_connector_definition": {
          "$ref": "#/definitions/v1alphaDestinationConnectorDefinition",
          "title": "A DestinationConnectorDefinition resource"
        }
      },
      "title": "GetDestinationConnectorDefinitionResponse represents a\nDestinationConnectorDefinition response"
    },
    "v1alphaGetDestinationConnectorResponse": {
      "type": "object",
      "properties": {
        "destination_connector": {
          "$ref": "#/definitions/v1alphaDestinationConnector",
          "title": "DestinationConnector resource"
        }
      },
      "title": "GetDestinationConnectorResponse represents a response for a\nDestinationConnector resource"
    },
    "v1alphaGetSourceConnectorDefinitionResponse": {
      "type": "object",
      "properties": {
        "source_connector_definition": {
          "$ref": "#/definitions/v1alphaSourceConnectorDefinition",
          "title": "A SourceConnectorDefinition resource"
        }
      },
      "title": "GetSourceConnectorDefinitionResponse represents a SourceConnectorDefinition\nresponse"
    },
    "v1alphaGetSourceConnectorResponse": {
      "type": "object",
      "properties": {
        "source_connector": {
          "$ref": "#/definitions/v1alphaSourceConnector",
          "title": "SourceConnector resource"
        }
      },
      "title": "GetSourceConnectorResponse represents a response for a\nSourceConnector resource"
    },
    "v1alphaListDestinationConnectorDefinitionResponse": {
      "type": "object",
      "properties": {
        "destination_connector_definitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alphaDestinationConnectorDefinition"
          },
          "title": "A list of DestinationConnectorDefinition resources"
        },
        "next_page_token": {
          "type": "string",
          "title": "Next page token"
        },
        "total_size": {
          "type": "string",
          "format": "int64",
          "title": "Total count of DestinationConnectorDefinition resources"
        }
      },
      "title": "ListDestinationConnectorDefinitionResponse represents a response for a list\nof DestinationConnectorDefinitions"
    },
    "v1alphaListDestinationConnectorResponse": {
      "type": "object",
      "properties": {
        "destination_connectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alphaDestinationConnector"
          },
          "title": "A list of DestinationConnector resources"
        },
        "next_page_token": {
          "type": "string",
          "title": "Next page token"
        },
        "total_size": {
          "type": "string",
          "format": "int64",
          "title": "Total count of connector resources"
        }
      },
      "title": "ListDestinationConnectorResponse represents a response for a list of\nDestinationConnector resources"
    },
    "v1alphaListSourceConnectorDefinitionResponse": {
      "type": "object",
      "properties": {
        "source_connector_definitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alphaSourceConnectorDefinition"
          },
          "title": "A list of SourceConnectorDefinition resources"
        },
        "next_page_token": {
          "type": "string",
          "title": "Next page token"
        },
        "total_size": {
          "type": "string",
          "format": "int64",
          "title": "Total count of SourceConnectorDefinition resources"
        }
      },
      "title": "ListSourceConnectorDefinitionResponse represents a response for a list of\nSourceConnectorDefinitions"
    },
    "v1alphaListSourceConnectorResponse": {
      "type": "object",
      "properties": {
        "source_connectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alphaSourceConnector"
          },
          "title": "A list of SourceConnector resources"
        },
        "next_page_token": {
          "type": "string",
          "title": "Next page token"
        },
        "total_size": {
          "type": "string",
          "format": "int64",
          "title": "Total count of connector resources"
        }
      },
      "title": "ListSourceConnectorResponse represents a response for a list of\nSourceConnector resources"
    },
    "v1alphaLookUpDestinationConnectorResponse": {
      "type": "object",
      "properties": {
        "destination_connector": {
          "$ref": "#/definitions/v1alphaDestinationConnector",
          "title": "DestinationConnector resource"
        }
      },
      "title": "LookUpDestinationConnectorResponse represents a response for a destination\nconnector"
    },
    "v1alphaLookUpSourceConnectorResponse": {
      "type": "object",
      "properties": {
        "source_connector": {
          "$ref": "#/definitions/v1alphaSourceConnector",
          "title": "SourceConnector resource"
        }
      },
      "title": "LookUpSourceConnectorResponse represents a response for a source connector"
    },
    "v1alphaOauthConfigSpecification": {
      "type": "object",
      "properties": {
        "oauth_user_input_from_connector_config_specification": {
          "type": "object",
          "description": "OAuth specific blob. This is a Json Schema used to validate Json\nconfigurations used as input to OAuth. Must be a valid non-nested JSON that\nrefers to properties from ConnectorSpecification.connectionSpecification\nusing special annotation 'path_in_connector_config'.\nThese are input values the user is entering through the UI to authenticate\nto the connector, that might also shared as inputs for syncing data via the\nconnector.\n\nExamples:\n\nif no connector values is shared during oauth flow,\noauth_user_input_from_connector_config_specification=[] if connector values\nsuch as 'app_id' inside the top level are used to generate the API url for\nthe oauth flow,\n  oauth_user_input_from_connector_config_specification={\n    app_id: {\n      type: string\n      path_in_connector_config: ['app_id']\n    }\n  }\nif connector values such as 'info.app_id' nested inside another object are\nused to generate the API url for the oauth flow,\n oauth_user_input_from_connector_config_specification={\n   app_id: {\n     type: string\n     path_in_connector_config: ['info', 'app_id']\n   }\n }",
          "readOnly": true
        },
        "complete_oauth_output_specification": {
          "type": "object",
          "description": "Examples:\n\n    complete_oauth_output_specification={\n      refresh_token: {\n        type: string,\n        path_in_connector_config: ['credentials', 'refresh_token']\n      }\n    }",
          "title": "OAuth specific blob. This is a Json Schema used to validate Json\nconfigurations produced by the OAuth flows as they are returned by the\ndistant OAuth APIs. Must be a valid JSON describing the fields to merge\nback to `ConnectorSpecification.connectionSpecification`. For each field, a\nspecial annotation `path_in_connector_config` can be specified to determine\nwhere to merge it,",
          "readOnly": true
        },
        "complete_oauth_server_input_specification": {
          "type": "object",
          "description": "OAuth specific blob. This is a Json Schema used to validate Json\nconfigurations persisted as Airbyte Server configurations. Must be a valid\nnon-nested JSON describing additional fields configured by the Airbyte\nInstance or Workspace Admins to be used by the server when completing an\nOAuth flow (typically exchanging an auth code for refresh token).\n\nExamples:\n\n    complete_oauth_server_input_specification={\n      client_id: {\n        type: string\n      },\n      client_secret: {\n        type: string\n      }\n    }",
          "readOnly": true
        },
        "complete_oauth_server_output_specification": {
          "type": "object",
          "description": "Examples:\n\n      complete_oauth_server_output_specification={\n        client_id: {\n          type: string,\n          path_in_connector_config: ['credentials', 'client_id']\n        },\n        client_secret: {\n          type: string,\n          path_in_connector_config: ['credentials', 'client_secret']\n        }\n      }",
          "title": "OAuth specific blob. This is a Json Schema used to validate Json\nconfigurations persisted as Airbyte Server configurations that also need to\nbe merged back into the connector configuration at runtime. This is a\nsubset configuration of `complete_oauth_server_input_specification` that\nfilters fields out to retain only the ones that are necessary for the\nconnector to function with OAuth. (some fields could be used during oauth\nflows but not needed afterwards, therefore they would be listed in the\n`complete_oauth_server_input_specification` but not\n`complete_oauth_server_output_specification`) Must be a valid non-nested\nJSON describing additional fields configured by the Airbyte Instance or\nWorkspace Admins to be used by the connector when using OAuth flow APIs.\nThese fields are to be merged back to\n`ConnectorSpecification.connectionSpecification`. For each field, a special\nannotation `path_in_connector_config` can be specified to determine where\nto merge it,",
          "readOnly": true
        }
      },
      "title": "OauthConfigSpecification represents oauth config specification"
    },
    "v1alphaReleaseStage": {
      "type": "string",
      "enum": [
        "RELEASE_STAGE_UNSPECIFIED",
        "RELEASE_STAGE_ALPHA",
        "RELEASE_STAGE_BETA",
        "RELEASE_STAGE_GENERALLY_AVAILABLE",
        "RELEASE_STAGE_CUSTOM"
      ],
      "default": "RELEASE_STAGE_UNSPECIFIED",
      "description": "- RELEASE_STAGE_UNSPECIFIED: ReleaseStage: UNSPECIFIED\n - RELEASE_STAGE_ALPHA: ReleaseStage: ALPHA\n - RELEASE_STAGE_BETA: ReleaseStage: BETA\n - RELEASE_STAGE_GENERALLY_AVAILABLE: ReleaseStage: GENERALLY_AVAILABLE\n - RELEASE_STAGE_CUSTOM: ReleaseStage: CUSTOM",
      "title": "ReleaseStage enumerates the release stages"
    },
    "v1alphaSourceConnector": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "SourceConnector resource name. It must have the format of\n\"source-connectors/*\"",
          "readOnly": true
        },
        "uid": {
          "type": "string",
          "title": "SourceConnector UUID",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "SourceConnector resource ID (the last segment of the resource name) used to\nconstruct the resource name. This conforms to RFC-1034, which restricts to\nletters, numbers, and hyphen, with the first character a letter, the last a\nletter or a number, and a 63 character maximum."
        },
        "source_connector_definition": {
          "type": "string",
          "title": "Connector Definition resource (e.g. SourceDefinition or Destination\nDestination)",
          "required": [
            "source_connector_definition"
          ]
        },
        "connector": {
          "$ref": "#/definitions/v1alphaConnector",
          "title": "SourceConnector's connector data structure"
        }
      },
      "title": "SourceConnector represents a source connector resource",
      "required": [
        "source_connector_definition"
      ]
    },
    "v1alphaSourceConnectorDefinition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "SourceConnectorDefinition resource name. It must have the format of\n\"connector-definitions/*\"",
          "readOnly": true
        },
        "uid": {
          "type": "string",
          "title": "SourceConnectorDefinition UUID",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "SourceConnectorDefinition resource ID (the last segment of the resource\nname) used to construct the resource name. This conforms to RFC-1034, which\nrestricts to letters, numbers, and hyphen, with the first character a\nletter, the last a letter or a number, and a 63 character maximum."
        },
        "connector_definition": {
          "$ref": "#/definitions/v1alphaConnectorDefinition",
          "title": "SourceConnectorDefinition connector definition"
        }
      },
      "title": "SourceConnectorDefinition represents the source connector definition resource"
    },
    "v1alphaUpdateDestinationConnectorResponse": {
      "type": "object",
      "properties": {
        "destination_connector": {
          "$ref": "#/definitions/v1alphaDestinationConnector",
          "title": "DestinationConnector resource"
        }
      },
      "title": "UpdateDestinationConnectorResponse represents a response for a\nDestinationConnector resource"
    },
    "v1alphaUpdateSourceConnectorResponse": {
      "type": "object",
      "properties": {
        "source_connector": {
          "$ref": "#/definitions/v1alphaSourceConnector",
          "title": "SourceConnector resource"
        }
      },
      "title": "UpdateSourceConnectorResponse represents a response for a\nSourceConnector resource"
    }
  }
}
