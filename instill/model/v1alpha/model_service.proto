syntax = "proto3";

package instill.model.v1alpha;

// Google API
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";

import "instill/model/v1alpha/definition.proto";
import "instill/model/v1alpha/model.proto";

// HealthCheckRequest represents a request to health check a service
message HealthCheckRequest {
  // Service name to check for its readiness status
  string service = 1;
}

// HealthCheckResponse represents a response for a service heath status
message HealthCheckResponse {
  // ServingStatus enumerates the status of a queried service
  enum ServingStatus {
    // Serving status: UNSPECIFIED
    SERVING_STATUS_UNSPECIFIED = 0;
    // Serving status: SERVING
    SERVING_STATUS_SERVING = 1;
    // Serving status: NOT SERVING
    SERVING_STATUS_NOT_SERVING = 2;
  }

  // Status is the instance of the enum type ServingStatus
  ServingStatus status = 1;
}

// LivenessRequest represents a request to check a service liveness status
message LivenessRequest {
  // HealthCheckRequest message
  HealthCheckRequest health_check_request = 1 [(google.api.field_behavior) = OPTIONAL];
}

// LivenessResponse represents a response for a service liveness status
message LivenessResponse {
  // HealthCheckResponse message
  HealthCheckResponse health_check_response = 1;
}

// ReadinessRequest represents a request to check a service readiness status
message ReadinessRequest {
  // HealthCheckRequest message
  HealthCheckRequest health_check_request = 1 [(google.api.field_behavior) = OPTIONAL];
}

// ReadinessResponse represents a response for a service readiness status
message ReadinessResponse {
  // HealthCheckResponse message
  HealthCheckResponse health_check_response = 1;
}


// Model service responds to incoming model requests
service ModelService {
  option (google.api.default_host) = "api.instill.tech";

  // Liveness method receives a LivenessRequest message and returns a
  // LivenessResponse message.
  // See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
  rpc Liveness(LivenessRequest) returns (LivenessResponse) {
    option (google.api.http) = {
      get : "/__liveness"
      additional_bindings : [ {get : "/health/mgmt"} ]
    };
  }

  // Readiness method receives a ReadinessRequest message and returns a
  // ReadinessResponse message.
  // See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
  rpc Readiness(ReadinessRequest) returns (ReadinessResponse) {
    option (google.api.http) = {
      get : "/__readiness"
    };
  }

  // ListModelDefinition method receives a ListModelDefinitionRequest message and returns a ListModelDefinitionResponse
  rpc ListModelDefinition(ListModelDefinitionRequest) returns (ListModelDefinitionResponse) {
    option (google.api.http) = {
      get : "/model-definitions"
    };
  }

  // GetModelDefinition method receives a GetModelDefinitionRequest message and returns a GetModelDefinitionResponse
  rpc GetModelDefinition(GetModelDefinitionRequest) returns (GetModelDefinitionResponse) {
    option (google.api.http) = {
      get : "/{name=model-definitions/*}"
    };
  }

  // ListModel method receives a ListModelRequest message and returns a ListModelResponse
  rpc ListModel(ListModelRequest) returns (ListModelResponse) {
    option (google.api.http) = {
      get : "/models"
    };
  }

  // CreateModel method receives a CreateModelRequest message and returns a CreateModelResponse
  rpc CreateModel(CreateModelRequest) returns (CreateModelResponse) {
    option (google.api.http) = {
      post : "/models"
      body : "model"
    };
  }

  // GetModel method receives a GetModelRequest message and returns a GetModelResponse
  rpc GetModel(GetModelRequest) returns (GetModelResponse) {
    option (google.api.http) = {
      get : "/{name=models/*}"
    };
  }

  // UpdateModel method receives a UpdateModelRequest message and returns a UpdateModelResponse
  rpc UpdateModel(UpdateModelRequest) returns (UpdateModelResponse) {
    option (google.api.http) = {
      patch : "/{model.name=models/*}"
      body : "model"
    };
  }

  // DeleteModel method receives a DeleteModelRequest message and returns a DeleteModelResponse
  rpc DeleteModel(DeleteModelRequest) returns (DeleteModelResponse) {
    option (google.api.http) = {
      delete : "/{name=models/*}"
    };
  }

  // ListModelInstance method receives a ListModelInstanceRequest message and returns a ListModelInstanceResponse
  rpc ListModelInstance(ListModelInstanceRequest) returns (ListModelInstanceResponse) {
    option (google.api.http) = {
      get : "/{parent=models/*}/instances"
    };
  }

  // CreateModelInstance method receives a CreateModelInstanceRequest message and returns a CreateModelInstanceResponse
  rpc CreateModelInstance(CreateModelInstanceRequest) returns (CreateModelInstanceResponse) {
    option (google.api.http) = {
      post : "/{parent=models/*}/instances"
      body : "instance"
    };
  }

  // GetModelInstance method receives a GetModelInstanceRequest message and returns a GetModelInstanceResponse
  rpc GetModelInstance(GetModelInstanceRequest) returns (GetModelInstanceResponse) {
    option (google.api.http) = {
    get : "/{name=models/*/instances/*}"
    };
  }

  // UpdateModelInstance method receives a UpdateModelInstanceRequest message and returns a UpdateModelInstanceResponse
  rpc UpdateModelInstance(UpdateModelInstanceRequest) returns (UpdateModelInstanceResponse) {
    option (google.api.http) = {
      patch : "/{instance.name=models/*/instances/*}"
      body : "instance"
    };
  }

  // DeleteModelInstance method receives a DeleteModelInstanceRequest message and returns a DeleteModelInstanceResponse
  rpc DeleteModelInstance(DeleteModelInstanceRequest) returns (DeleteModelInstanceResponse) {
    option (google.api.http) = {
      delete : "/{name=models/*/instances/*}"
    };
  }

  // GetModelInstanceCard method receives a GetModelInstanceCardRequest message and returns a GetModelInstanceCardResponse
  rpc GetModelInstanceCard(GetModelInstanceCardRequest) returns (GetModelInstanceCardResponse) {
    option (google.api.http) = {
    get : "/{name=models/*/instances/*/readme}"
    };
  }

  // UpdateModelInstanceCard method receives a UpdateModelInstanceCardRequest message and returns a UpdateModelInstanceCardResponse
  rpc UpdateModelInstanceCard(UpdateModelInstanceCardRequest) returns (UpdateModelInstanceCardResponse) {
    option (google.api.http) = {
      patch : "/{readme.name=models/*/instances/*/readme}"
      body: "readme"
      };
  }

  ///////////////////////////////////////////////////////
  //
  // TriggerModel method receives a TriggerModelRequest message and
  // returns a TriggerModelResponse message.
  rpc TriggerModelInstance(TriggerModelInstanceRequest) returns (TriggerModelInstanceResponse) {
    option (google.api.http) = {
    post : "/{name=models/*/instances/*}:trigger"
      body : "*"
    };
  }

  // TriggerModelBinaryFileUpload method receives a
  // TriggerModelBinaryFileUploadRequest message and returns a
  // TriggerModelBinaryFileUploadResponse message.
  rpc TriggerModelInstanceBinaryFileUpload(stream TriggerModelInstanceBinaryFileUploadRequest)
      returns (TriggerModelInstanceBinaryFileUploadResponse) {}
}
