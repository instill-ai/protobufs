syntax = "proto3";

package instill.mgmt.v1alpha;

// Protobuf standard
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// Google API
import "google/api/resource.proto";
import "google/api/field_behavior.proto";

// HealthCheckRequest represents a request to health check a service
message HealthCheckRequest {
  // Service name to check for its readiness status
  optional string service = 1 [ (google.api.field_behavior) = OPTIONAL ];
}

// HealthCheckResponse represents a response for a service heath status
message HealthCheckResponse {
  // ServingStatus enumerates the status of a queried service
  enum ServingStatus {
    // Serving status: UNSPECIFIED
    SERVING_STATUS_UNSPECIFIED = 0;
    // Serving status: SERVING
    SERVING_STATUS_SERVING = 1;
    // Serving status: NOT SERVING
    SERVING_STATUS_NOT_SERVING = 2;
  }

  // Status is the instance of the enum type ServingStatus
  ServingStatus status = 1;
}

// LivenessRequest represents a request to check a service liveness status
message LivenessRequest {
  // HealthCheckRequest message
  HealthCheckRequest health_check_request = 1
      [ (google.api.field_behavior) = OPTIONAL ];
}

// LivenessResponse represents a response for a service liveness status
message LivenessResponse {
  // HealthCheckResponse message
  HealthCheckResponse health_check_response = 1;
}

// ReadinessRequest represents a request to check a service readiness status
message ReadinessRequest {
  // HealthCheckRequest message
  HealthCheckRequest health_check_request = 1
      [ (google.api.field_behavior) = OPTIONAL ];
}

// ReadinessResponse represents a response for a service readiness status
message ReadinessResponse {
  // HealthCheckResponse message
  HealthCheckResponse health_check_response = 1;
}

// OwnerType enumerates the owner type of any resource
enum OwnerType {
  // OwnerType: UNSPECIFIED
  OWNER_TYPE_UNSPECIFIED = 0;
  // OwnerType: USER
  OWNER_TYPE_USER = 1;
  // OwnerType: ORGANIZATION
  OWNER_TYPE_ORGANIZATION = 2;
}

// User represents the content of a user
message User {
  option (google.api.resource) = {
    type : "api.instill.tech/User"
    pattern : "users/{user}"
  };

  // Resource name. It must have the format of "users/*".
  // For example: "users/local-user".
  string name = 1 [ (google.api.field_behavior) = OUTPUT_ONLY ];
  // User ID in UUIDv4
  string uid = 2 [ (google.api.field_behavior) = OUTPUT_ONLY ];
  // User email
  optional string email = 3 [ (google.api.field_behavior) = OPTIONAL ];
  // Resource ID (the last segment of the resource name), also the user login
  // username. This conforms to RFC-1034, which restricts to letters, numbers,
  // and hyphen, with the first character a letter, the last a letter or a
  // number, and a 63 character maximum.
  string id = 4 [ (google.api.field_behavior) = IMMUTABLE ];
  // User company name
  optional string company_name = 5 [ (google.api.field_behavior) = OPTIONAL ];
  // User role
  // Allowed roles:
  // [ "manager", "ai-researcher", "ai-engineer", "data-engineer",
  // "data-scientist",
  //   "analytics-engineer", "hobbyist"]
  optional string role = 6 [ (google.api.field_behavior) = OPTIONAL ];
  // User usage data collection
  bool usage_data_collection = 7 [ (google.api.field_behavior) = REQUIRED ];
  // User newsletter subscription
  bool newsletter_subscription = 8 [ (google.api.field_behavior) = REQUIRED ];

  // Owner type: fixed to `OWNER_TYPE_USER`
  OwnerType type = 9 [ (google.api.field_behavior) = OUTPUT_ONLY ];
  // User creation time
  google.protobuf.Timestamp create_time = 10
      [ (google.api.field_behavior) = OUTPUT_ONLY ];
  // User update time
  google.protobuf.Timestamp update_time = 11
      [ (google.api.field_behavior) = OUTPUT_ONLY ];
}

// ListUserRequest represents a request to list all users
message ListUserRequest {
  // Page size: the maximum number of resources to return. The service may
  // return fewer than this value. If unspecified, at most 10 users will be
  // returned. The maximum value is 100; values above 100 will be coereced to
  // 100.
  int64 page_size = 1 [ (google.api.field_behavior) = OPTIONAL ];
  // Page token
  string page_token = 2 [ (google.api.field_behavior) = OPTIONAL ];
}

// ListUserResponse represents a response for a list of users
message ListUserResponse {
  // A list of users
  repeated User users = 1;
  // Next page token
  string next_page_token = 2;
  // Total count of users
  int64 total_size = 3;
}

// CreateUserRequest represents a request to create a user
message CreateUserRequest {
  // The user to be created
  //
  // The user's `name` field is used to identify the user to create.
  // Format: users/{user}
  User user = 1 [ (google.api.field_behavior) = REQUIRED ];
}

// CreateUserResponse represents a response for a user response
message CreateUserResponse {
  // A user resource
  User user = 1;
}

// GetUserRequest represents a request to query a user
message GetUserRequest {
  // Resource name of a user. For example:
  // "users/instill"
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.instill.tech/User",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      field_configuration : {path_param_name : "user.name"}
    }
  ];
}

// GetUserResponse represents a response for a user resource
message GetUserResponse {
  // A user resource
  User user = 1;
}

// UpdateUserRequest represents a request to update a user
message UpdateUserRequest {
  // The user to update
  //
  // The user's `name` field is used to identify the user to update.
  // Format: users/{user}
  User user = 1 [ (google.api.field_behavior) = REQUIRED ];
  // Update mask for a user resource
  google.protobuf.FieldMask update_mask = 2
      [ (google.api.field_behavior) = REQUIRED ];
}

// UpdateUserResponse represents a response for a user resource
message UpdateUserResponse {
  // A user resource
  User user = 1;
}

// DeleteUserRequest represents a request to delete a user
message DeleteUserRequest {
  // The resource name of the user to be deleted,
  // for example: "users/local-user"
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.instill.tech/User",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      field_configuration : {path_param_name : "user.name"}
    }
  ];
}

// DeleteUserResponse represents an empty response
message DeleteUserResponse {}

// LookUpUserRequest represents a request to query a user by permalink
message LookUpUserRequest {
  // Permalink of a user. For example:
  // "users/{uid}"
  string permalink = 1 [ (google.api.field_behavior) = REQUIRED ];
}

// LookUpUserResponse represents a response for a user resource
message LookUpUserResponse {
  // A user resource
  User user = 1;
}
