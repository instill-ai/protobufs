swagger: "2.0"
info:
  title: "\U0001F4BE Artifact "
  description: Artifact endpoints to manage artifact resources
  version: v0.37.0-beta
  contact:
    name: Instill AI
    url: https://github.com/instill-ai
    email: hello@instill.tech
  license:
    name: Elastic License 2.0 (ELv2)
    url: https://github.com/instill-ai/protobufs/blob/main/LICENSE
host: api.instill.tech
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1alpha/namespaces/{namespaceId}/catalogs:
    get:
      summary: Get all catalogs info
      operationId: ArtifactPublicService_ListCatalogs
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListCatalogsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: namespaceId
          description: User ID for which to list the catalogs
          in: path
          required: true
          type: string
      tags:
        - Catalog
    post:
      summary: Create a catalog
      operationId: ArtifactPublicService_CreateCatalog
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCreateCatalogResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: namespaceId
          description: The catalog's owner(nammespace).
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ArtifactPublicServiceCreateCatalogBody'
      tags:
        - Catalog
  /v1alpha/namespaces/{namespaceId}/catalogs/{catalogId}:
    delete:
      summary: Delete a catalog
      operationId: ArtifactPublicService_DeleteCatalog
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeleteCatalogResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: namespaceId
          description: The owner's id. i.e. namespace.
          in: path
          required: true
          type: string
        - name: catalogId
          description: The catalog id.
          in: path
          required: true
          type: string
      tags:
        - Catalog
    put:
      summary: Update a catalog info
      operationId: ArtifactPublicService_UpdateCatalog
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUpdateCatalogResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: namespaceId
          description: The catalog owner(namespace).
          in: path
          required: true
          type: string
        - name: catalogId
          description: The catalog id.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ArtifactPublicServiceUpdateCatalogBody'
      tags:
        - Catalog
  /v1alpha/namespaces/{namespaceId}/catalogs/{catalogId}/files:
    get:
      summary: list files
      operationId: ArtifactPublicService_ListCatalogFiles
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListCatalogFilesResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: namespaceId
          description: The owner/namespaceuid id.
          in: path
          required: true
          type: string
        - name: catalogId
          description: The catalog id.
          in: path
          required: true
          type: string
        - name: pageSize
          description: The page size (default:10; max 100).
          in: query
          required: false
          type: integer
          format: int32
        - name: pageToken
          description: The next page token(default from first file's token).
          in: query
          required: false
          type: string
        - name: filter.fileUids
          description: The file uids.
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      tags:
        - Catalog
    post:
      summary: Create a file
      operationId: ArtifactPublicService_UploadCatalogFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUploadCatalogFileResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: namespaceId
          description: owner/namespace uid
          in: path
          required: true
          type: string
        - name: catalogId
          description: catalog id
          in: path
          required: true
          type: string
        - name: file
          description: file
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alphaFile'
      tags:
        - Catalog
  /v1alpha/catalogs/files:
    delete:
      summary: Delete a file
      operationId: ArtifactPublicService_DeleteCatalogFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeleteCatalogFileResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: fileUid
          description: The file uid.
          in: query
          required: true
          type: string
      tags:
        - Catalog
  /v1alpha/catalogs/files/processAsync:
    post:
      summary: process file
      operationId: ArtifactPublicService_ProcessCatalogFiles
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaProcessCatalogFilesResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alphaProcessCatalogFilesRequest'
      tags:
        - Catalog
  /v1alpha/namespaces/{namespaceId}/catalogs/{catalogId}/chunks:
    get:
      summary: List chunks
      operationId: ArtifactPublicService_ListChunks
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListChunksResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: namespaceId
          description: owner/namespace id (not uid)
          in: path
          required: true
          type: string
        - name: catalogId
          description: catalog id (not uid)
          in: path
          required: true
          type: string
        - name: fileUid
          description: unique identifier of the file
          in: query
          required: false
          type: string
      tags:
        - Catalog
  /v1alpha/namespaces/{namespaceId}/catalogs/{catalogId}/files/{fileUid}/source:
    get:
      summary: Get source file
      operationId: ArtifactPublicService_GetSourceFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetSourceFileResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: namespaceId
          description: owner/namespace id
          in: path
          required: true
          type: string
        - name: catalogId
          description: catalog id
          in: path
          required: true
          type: string
        - name: fileUid
          description: unique identifier of the original uploaded file
          in: path
          required: true
          type: string
      tags:
        - Catalog
  /v1alpha/chunks/{chunkUid}:
    post:
      summary: Update chunk
      operationId: ArtifactPublicService_UpdateChunk
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUpdateChunkResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: chunkUid
          description: chunk uid
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ArtifactPublicServiceUpdateChunkBody'
      tags:
        - Catalog
  /v1alpha/namespaces/{namespaceId}/catalogs/{catalogId}/chunks/similarity:
    post:
      summary: Similarity chunks search
      operationId: ArtifactPublicService_SimilarityChunksSearch
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaSimilarityChunksSearchResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: namespaceId
          description: owner/namespace id
          in: path
          required: true
          type: string
        - name: catalogId
          description: catalog id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ArtifactPublicServiceSimilarityChunksSearchBody'
      tags:
        - Catalog
definitions:
  ArtifactPublicServiceCreateCatalogBody:
    type: object
    properties:
      name:
        type: string
        description: The catalog name.
      description:
        type: string
        description: The catalog description.
      tags:
        type: array
        items:
          type: string
        description: The catalog tags.
    description: CreateCatalogRequest represents a request to create a catalog.
  ArtifactPublicServiceSimilarityChunksSearchBody:
    type: object
    properties:
      textPrompt:
        type: string
        title: text prompt
      topk:
        type: integer
        format: int64
        title: topk
    title: Similar chunnk search request
  ArtifactPublicServiceUpdateCatalogBody:
    type: object
    properties:
      description:
        type: string
        description: The catalog description.
      tags:
        type: array
        items:
          type: string
        description: The catalog tags.
    description: UpdateCatalogRequest represents a request to update a catalog.
  ArtifactPublicServiceUpdateChunkBody:
    type: object
    properties:
      retrievable:
        type: boolean
        title: whether the chunk is retrievable
    title: Create chunk response
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1alphaCatalog:
    type: object
    properties:
      catalogId:
        type: string
        description: The catalog id.
      name:
        type: string
        description: The catalog name.
      description:
        type: string
        description: The catalog description.
      createTime:
        type: string
        description: The creation time of the catalog.
      updateTime:
        type: string
        description: The last update time of the catalog.
      ownerName:
        type: string
        description: The owner/namespaceof the catalog.
      tags:
        type: array
        items:
          type: string
        description: The catalog tags.
      convertingPipelines:
        type: array
        items:
          type: string
        description: The catalog converting pipelines.
      splittingPipelines:
        type: array
        items:
          type: string
        description: The catalog splitting pipelines.
      embeddingPipelines:
        type: array
        items:
          type: string
        description: The catalog embedding pipelines.
      downstreamApps:
        type: array
        items:
          type: string
        title: The downstream apps
      totalFiles:
        type: integer
        format: int64
        description: The total files in catalog.
      totalTokens:
        type: integer
        format: int64
        description: The total tokens in catalog.
      usedStorage:
        type: string
        format: uint64
        description: The current used storage in catalog.
    description: Catalog represents a catalog.
  v1alphaChunk:
    type: object
    properties:
      chunkUid:
        type: string
        title: unique identifier of the chunk
      retrievable:
        type: boolean
        title: whether the chunk is retrievable
      startPos:
        type: integer
        format: int64
        title: start position of the chunk in the source file
      endPos:
        type: integer
        format: int64
        title: end position of the chunk in the source file
      tokens:
        type: integer
        format: int64
        title: tokens of the chunk
      createTime:
        type: string
        format: date-time
        title: creation time of the chunk
      originalFileUid:
        type: string
        title: original file unique identifier
    description: The Chunk message represents a chunk of data in the artifact system.
  v1alphaCreateCatalogResponse:
    type: object
    properties:
      catalog:
        description: The created catalog.
        allOf:
          - $ref: '#/definitions/v1alphaCatalog'
    description: CreateCatalogResponse represents a response for creating a catalog.
  v1alphaCreateRepositoryTagResponse:
    type: object
    properties:
      tag:
        description: The created tag.
        allOf:
          - $ref: '#/definitions/v1alphaRepositoryTag'
    description: CreateRepositoryTagResponse contains the created tag.
  v1alphaDeleteCatalogFileResponse:
    type: object
    properties:
      fileUid:
        type: string
        description: The file uid.
    title: delete file response
  v1alphaDeleteCatalogResponse:
    type: object
    properties:
      catalog:
        description: The catalog identifier.
        allOf:
          - $ref: '#/definitions/v1alphaCatalog'
    description: DeleteCatalogResponse represents a response for deleting a catalog.
  v1alphaDeleteRepositoryTagResponse:
    type: object
    description: DeleteRepositoryTagResponse represent an empty response.
  v1alphaFile:
    type: object
    properties:
      fileUid:
        type: string
        title: file uid
        readOnly: true
      name:
        type: string
        title: file name
      type:
        title: file type
        allOf:
          - $ref: '#/definitions/v1alphaFileType'
      processStatus:
        title: file process status
        readOnly: true
        allOf:
          - $ref: '#/definitions/v1alphaFileProcessStatus'
      processOutcome:
        type: string
        title: file process message
        readOnly: true
      retrievable:
        type: boolean
        title: retrievable(this is reserved for future use)
        readOnly: true
      content:
        type: string
        title: contect(this is reserved for future use)
      ownerUid:
        type: string
        title: owner/namespaceuid
        readOnly: true
      creatorUid:
        type: string
        title: cretor uid from authn token
        readOnly: true
      catalogUid:
        type: string
        title: catalog uid
        readOnly: true
      createTime:
        type: string
        format: date-time
        title: create time
        readOnly: true
      updateTime:
        type: string
        format: date-time
        title: update time
        readOnly: true
      deleteTime:
        type: string
        format: date-time
        title: delete time
        readOnly: true
      size:
        type: string
        format: int64
        title: file size in bytes
        readOnly: true
      totalChunks:
        type: integer
        format: int32
        title: total chunks
        readOnly: true
      totalTokens:
        type: integer
        format: int32
        title: total tokens
        readOnly: true
    title: file mata data
    required:
      - name
      - type
  v1alphaFileProcessStatus:
    type: string
    enum:
      - FILE_PROCESS_STATUS_NOTSTARTED
      - FILE_PROCESS_STATUS_WAITING
      - FILE_PROCESS_STATUS_CONVERTING
      - FILE_PROCESS_STATUS_CHUNKING
      - FILE_PROCESS_STATUS_EMBEDDING
      - FILE_PROCESS_STATUS_COMPLETED
      - FILE_PROCESS_STATUS_FAILED
    description: |-
      - FILE_PROCESS_STATUS_NOTSTARTED: NOTSTARTED
       - FILE_PROCESS_STATUS_WAITING: waiting
       - FILE_PROCESS_STATUS_CONVERTING: embedding process is running
       - FILE_PROCESS_STATUS_CHUNKING: embedding process is done
       - FILE_PROCESS_STATUS_EMBEDDING: embedding process is failed
       - FILE_PROCESS_STATUS_COMPLETED: COMPLETED
       - FILE_PROCESS_STATUS_FAILED: Failed
    title: file embedding process status
  v1alphaFileType:
    type: string
    enum:
      - FILE_TYPE_TEXT
      - FILE_TYPE_PDF
      - FILE_TYPE_MARKDOWN
      - FILE_TYPE_PNG
      - FILE_TYPE_JPEG
      - FILE_TYPE_JPG
    description: |-
      - FILE_TYPE_TEXT: text
       - FILE_TYPE_PDF: PDF
       - FILE_TYPE_MARKDOWN: MARKDOWN
       - FILE_TYPE_PNG: PNG
       - FILE_TYPE_JPEG: JPEG
       - FILE_TYPE_JPG: JPG
    title: file type
  v1alphaGetRepositoryTagResponse:
    type: object
    properties:
      tag:
        description: The created tag.
        allOf:
          - $ref: '#/definitions/v1alphaRepositoryTag'
    description: GetRepositoryTagResponse contains the created tag.
  v1alphaGetSourceFileResponse:
    type: object
    properties:
      sourceFile:
        title: source file(either orignal file or converted file)
        allOf:
          - $ref: '#/definitions/v1alphaSourceFile'
    title: get source file response
  v1alphaListCatalogFilesFilter:
    type: object
    properties:
      fileUids:
        type: array
        items:
          type: string
        description: The file uids.
    title: |-
      list file filter
      todo: support more parameters
  v1alphaListCatalogFilesResponse:
    type: object
    properties:
      files:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaFile'
        description: The list of files.
      totalSize:
        type: integer
        format: int32
        description: The total number of files.
      pageSize:
        type: integer
        format: int32
        description: The requested page size.
      nextPageToken:
        type: string
        title: next page token
      filter:
        description: The filter.
        allOf:
          - $ref: '#/definitions/v1alphaListCatalogFilesFilter'
    title: list files response
  v1alphaListCatalogsResponse:
    type: object
    properties:
      catalogs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaCatalog'
        description: The catalogs container.
    description: GetCatalogsResponse represents a response for getting all catalogs from users.
  v1alphaListChunksResponse:
    type: object
    properties:
      chunks:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaChunk'
        title: repeated chunks
    description: The ListChunksResponse message represents a response containing a list of chunks in the artifact system.
  v1alphaListRepositoryTagsResponse:
    type: object
    properties:
      tags:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaRepositoryTag'
        description: A list of repository tags.
      totalSize:
        type: integer
        format: int32
        description: Total number of tags.
      pageSize:
        type: integer
        format: int32
        description: The requested page size.
      page:
        type: integer
        format: int32
        description: The requested page offset.
    description: ListRepositoryTagsResponse contains a list of container image tags.
  v1alphaProcessCatalogFilesRequest:
    type: object
    properties:
      fileUids:
        type: array
        items:
          type: string
        description: The file uid.
    title: Process Catalog File Request
    required:
      - fileUids
  v1alphaProcessCatalogFilesResponse:
    type: object
    properties:
      files:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaFile'
        description: The file uid.
    title: Process Catalog File Response
  v1alphaRepositoryTag:
    type: object
    properties:
      name:
        type: string
        description: |-
          The name of the tag, defined by its parent repository and ID.
          - Format: `repositories/{repository.id}/tags/{tag.id}`.
      id:
        type: string
        description: The tag identifier.
      digest:
        type: string
        description: Unique identifier, computed from the manifest the tag refers to.
      updateTime:
        type: string
        format: date-time
        description: Tag update time, i.e. timestamp of the last push.
        readOnly: true
    description: |-
      RepositoryTag contains information about the version of some content in a
      repository.
  v1alphaSimilarityChunk:
    type: object
    properties:
      chunkUid:
        type: string
        title: chunk uid
      similarityScore:
        type: number
        format: float
        title: similarity score
      textContent:
        type: string
        title: content
      sourceFile:
        type: string
        title: source file
    title: similarity chunks
  v1alphaSimilarityChunksSearchResponse:
    type: object
    properties:
      similarChunks:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaSimilarityChunk'
        title: chunks
    title: Similar chunnk search response
  v1alphaSourceFile:
    type: object
    properties:
      originalFileUid:
        type: string
        title: original file unique identifier
      content:
        type: string
        title: content
      createTime:
        type: string
        format: date-time
        title: creation time of the source file
      updateTime:
        type: string
        format: date-time
        title: update time of the source file
    description: The SourceFile message represents a source file in the artifact system.
  v1alphaUpdateCatalogResponse:
    type: object
    properties:
      catalog:
        description: The updated catalog.
        allOf:
          - $ref: '#/definitions/v1alphaCatalog'
    description: UpdateCatalogResponse represents a response for updating a catalog.
  v1alphaUpdateChunkResponse:
    type: object
    properties:
      chunk:
        title: chunk
        allOf:
          - $ref: '#/definitions/v1alphaChunk'
    title: Updae chunk response
  v1alphaUploadCatalogFileResponse:
    type: object
    properties:
      file:
        title: file
        allOf:
          - $ref: '#/definitions/v1alphaFile'
    title: upload file response
securityDefinitions:
  Bearer:
    type: apiKey
    description: Enter the token with the `Bearer ` prefix, e.g. `Bearer abcde12345`
    name: Authorization
    in: header
    x-default: Bearer instill_sk_***
security:
  - Bearer: []
externalDocs:
  description: More about Instill AI
  url: https://www.instill.tech/docs
