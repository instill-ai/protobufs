swagger: "2.0"
info:
  title: common/healthcheck/v1beta/healthcheck.proto
  version: version not set
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1alpha/owners/{ownerId}/knowledge-bases:
    get:
      summary: Get all knowledge bases info
      operationId: ArtifactPublicService_ListKnowledgeBases
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListKnowledgeBasesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: ownerId
          description: User ID for which to list the knowledge bases
          in: path
          required: true
          type: string
      tags:
        - KnowledgeBase
    post:
      summary: Create a knowledge base
      operationId: ArtifactPublicService_CreateKnowledgeBase
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCreateKnowledgeBaseResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: ownerId
          description: The knowledge base owner(nammespace).
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ArtifactPublicServiceCreateKnowledgeBaseBody'
      tags:
        - KnowledgeBase
  /v1alpha/owners/{ownerId}/knowledge-bases/{kbId}:
    delete:
      summary: Delete a knowledge base
      operationId: ArtifactPublicService_DeleteKnowledgeBase
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeleteKnowledgeBaseResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: ownerId
          description: The owner's id. i.e. namespace.
          in: path
          required: true
          type: string
        - name: kbId
          description: The knowledge base identifier.
          in: path
          required: true
          type: string
      tags:
        - KnowledgeBase
    put:
      summary: Update a knowledge base info
      operationId: ArtifactPublicService_UpdateKnowledgeBase
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUpdateKnowledgeBaseResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: ownerId
          description: The knowledge base owner(namespace).
          in: path
          required: true
          type: string
        - name: kbId
          description: The knowledge base id.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ArtifactPublicServiceUpdateKnowledgeBaseBody'
      tags:
        - KnowledgeBase
  /v1alpha/owners/{ownerId}/knowledge-bases/{kbId}/files:
    get:
      summary: list files
      operationId: ArtifactPublicService_ListKnowledgeBaseFiles
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListKnowledgeBaseFilesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: ownerId
          description: The owner uid.
          in: path
          required: true
          type: string
        - name: kbId
          description: The knowledge base uid.
          in: path
          required: true
          type: string
        - name: pageSize
          description: The page size (default:10; max 100).
          in: query
          required: false
          type: integer
          format: int32
        - name: pageToken
          description: The next page token(default from first file's token).
          in: query
          required: false
          type: string
        - name: filter.fileUids
          description: The file uids.
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      tags:
        - KnowledgeBase
    post:
      summary: Create a file
      operationId: ArtifactPublicService_UploadKnowledgeBaseFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUploadKnowledgeBaseFileResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: ownerId
          description: owenr uid
          in: path
          required: true
          type: string
        - name: kbId
          description: knowledge base uid
          in: path
          required: true
          type: string
        - name: file
          description: file
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alphaFile'
      tags:
        - KnowledgeBase
  /v1alpha/knowledge-bases/files:
    delete:
      summary: Delete a file
      operationId: ArtifactPublicService_DeleteKnowledgeBaseFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeleteKnowledgeBaseFileResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: fileUid
          description: The file uid.
          in: query
          required: true
          type: string
      tags:
        - KnowledgeBase
  /v1alpha/knowledge-bases/files/processAsync:
    post:
      summary: process file
      operationId: ArtifactPublicService_ProcessKnowledgeBaseFiles
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaProcessKnowledgeBaseFilesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alphaProcessKnowledgeBaseFilesRequest'
      tags:
        - KnowledgeBase
  /v1alpha/owners/{ownerId}/knowledge-bases/{kbId}/chunks:
    get:
      summary: List chunks
      operationId: ArtifactPublicService_ListChunks
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListChunksResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: ownerId
          description: owner id (not uid)
          in: path
          required: true
          type: string
        - name: kbId
          description: knowledge base name (not uid)
          in: path
          required: true
          type: string
        - name: fileUid
          description: unique identifier of the file
          in: query
          required: false
          type: string
      tags:
        - KnowledgeBase
  /v1alpha/owners/{ownerId}/knowledge-bases/{kbId}/files/{fileUid}/source:
    get:
      summary: Get source file
      operationId: ArtifactPublicService_GetSourceFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetSourceFileResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: ownerId
          description: owner id
          in: path
          required: true
          type: string
        - name: kbId
          description: knowledge base name
          in: path
          required: true
          type: string
        - name: fileUid
          description: unique identifier of the original uploaded file
          in: path
          required: true
          type: string
      tags:
        - KnowledgeBase
  /v1alpha/chunks/{chunkUid}:
    post:
      summary: Update chunk
      operationId: ArtifactPublicService_UpdateChunk
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUpdateChunkResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: chunkUid
          description: chunk uid
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ArtifactPublicServiceUpdateChunkBody'
      tags:
        - KnowledgeBase
definitions:
  ArtifactPublicServiceCreateKnowledgeBaseBody:
    type: object
    properties:
      name:
        type: string
        description: The knowledge base name.
      description:
        type: string
        description: The knowledge base description.
      tags:
        type: array
        items:
          type: string
        description: The knowledge base tags.
    description: CreateKnowledgeBaseRequest represents a request to create a knowledge base.
  ArtifactPublicServiceUpdateChunkBody:
    type: object
    properties:
      retrievable:
        type: boolean
        title: whether the chunk is retrievable
    title: Create chunk response
  ArtifactPublicServiceUpdateKnowledgeBaseBody:
    type: object
    properties:
      description:
        type: string
        description: The knowledge base description.
      tags:
        type: array
        items:
          type: string
        description: The knowledge base tags.
    description: UpdateKnowledgeBaseRequest represents a request to update a knowledge base.
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1alphaChunk:
    type: object
    properties:
      chunkUid:
        type: string
        title: unique identifier of the chunk
      retrievable:
        type: boolean
        title: whether the chunk is retrievable
      startPos:
        type: integer
        format: int64
        title: start position of the chunk in the source file
      endPos:
        type: integer
        format: int64
        title: end position of the chunk in the source file
      tokens:
        type: integer
        format: int64
        title: tokens of the chunk
      createTime:
        type: string
        format: date-time
        title: creation time of the chunk
      originalFileUid:
        type: string
        title: original file unique identifier
    description: The Chunk message represents a chunk of data in the artifact system.
  v1alphaCreateKnowledgeBaseResponse:
    type: object
    properties:
      knowledgeBase:
        $ref: '#/definitions/v1alphaKnowledgeBase'
        description: The created knowledge base.
    description: CreateKnowledgeBaseResponse represents a response for creating a knowledge base.
  v1alphaCreateRepositoryTagResponse:
    type: object
    properties:
      tag:
        $ref: '#/definitions/v1alphaRepositoryTag'
        description: The created tag.
    description: CreateRepositoryTagResponse contains the created tag.
  v1alphaDeleteKnowledgeBaseFileResponse:
    type: object
    properties:
      fileUid:
        type: string
        description: The file uid.
    title: delete file response
  v1alphaDeleteKnowledgeBaseResponse:
    type: object
    properties:
      knowledgeBase:
        $ref: '#/definitions/v1alphaKnowledgeBase'
        description: The knowledge base identifier.
    description: DeleteKnowledgeBaseResponse represents a response for deleting a knowledge base.
  v1alphaDeleteRepositoryTagResponse:
    type: object
    description: DeleteRepositoryTagResponse represent an empty response.
  v1alphaFile:
    type: object
    properties:
      fileUid:
        type: string
        title: file uid
        readOnly: true
      name:
        type: string
        title: file name
      type:
        $ref: '#/definitions/v1alphaFileType'
        title: file type
      processStatus:
        $ref: '#/definitions/v1alphaFileProcessStatus'
        title: file process status
        readOnly: true
      processOutcome:
        type: string
        title: file process message
        readOnly: true
      retrievable:
        type: boolean
        title: retrievable(this is reserved for future use)
        readOnly: true
      content:
        type: string
        title: contect(this is reserved for future use)
      ownerUid:
        type: string
        title: owner uid
        readOnly: true
      creatorUid:
        type: string
        title: cretor uid from authn token
        readOnly: true
      kbUid:
        type: string
        title: knowledge base uid
        readOnly: true
      createTime:
        type: string
        format: date-time
        title: create time
        readOnly: true
      updateTime:
        type: string
        format: date-time
        title: update time
        readOnly: true
      deleteTime:
        type: string
        format: date-time
        title: delete time
        readOnly: true
      size:
        type: string
        format: int64
        title: file size in bytes
        readOnly: true
    title: file mata data
    required:
      - name
      - type
  v1alphaFileProcessStatus:
    type: string
    enum:
      - FILE_PROCESS_STATUS_NOTSTARTED
      - FILE_PROCESS_STATUS_WAITING
      - FILE_PROCESS_STATUS_CONVERTING
      - FILE_PROCESS_STATUS_CHUNKING
      - FILE_PROCESS_STATUS_EMBEDDING
      - FILE_PROCESS_STATUS_COMPLETED
      - FILE_PROCESS_STATUS_FAILED
    description: |-
      - FILE_PROCESS_STATUS_NOTSTARTED: NOTSTARTED
       - FILE_PROCESS_STATUS_WAITING: waiting
       - FILE_PROCESS_STATUS_CONVERTING: embedding process is running
       - FILE_PROCESS_STATUS_CHUNKING: embedding process is done
       - FILE_PROCESS_STATUS_EMBEDDING: embedding process is failed
       - FILE_PROCESS_STATUS_COMPLETED: COMPLETED
       - FILE_PROCESS_STATUS_FAILED: Failed
    title: file embedding process status
  v1alphaFileType:
    type: string
    enum:
      - FILE_TYPE_TEXT
      - FILE_TYPE_PDF
      - FILE_TYPE_MARKDOWN
      - FILE_TYPE_PNG
      - FILE_TYPE_JPEG
      - FILE_TYPE_JPG
    description: |-
      - FILE_TYPE_TEXT: text
       - FILE_TYPE_PDF: PDF
       - FILE_TYPE_MARKDOWN: MARKDOWN
       - FILE_TYPE_PNG: PNG
       - FILE_TYPE_JPEG: JPEG
       - FILE_TYPE_JPG: JPG
    title: file type
  v1alphaGetRepositoryTagResponse:
    type: object
    properties:
      tag:
        $ref: '#/definitions/v1alphaRepositoryTag'
        description: The created tag.
    description: GetRepositoryTagResponse contains the created tag.
  v1alphaGetSourceFileResponse:
    type: object
    properties:
      sourceFile:
        $ref: '#/definitions/v1alphaSourceFile'
        title: source file(either orignal file or converted file)
    title: get source file response
  v1alphaKnowledgeBase:
    type: object
    properties:
      kbId:
        type: string
        description: The knowledge base identifier.
      name:
        type: string
        description: The knowledge base name.
      description:
        type: string
        description: The knowledge base description.
      createTime:
        type: string
        description: The creation time of the knowledge base.
      updateTime:
        type: string
        description: The last update time of the knowledge base.
      ownerName:
        type: string
        description: The owner of the knowledge base.
      tags:
        type: array
        items:
          type: string
        description: The knowledge base tags.
      convertingPipelines:
        type: array
        items:
          type: string
        description: The knowledge base converting pipelines.
      splittingPipelines:
        type: array
        items:
          type: string
        description: The knowledge base splitting pipelines.
      embeddingPipelines:
        type: array
        items:
          type: string
        description: The knowledge base embedding pipelines.
      downstreamApps:
        type: array
        items:
          type: string
        title: The downstream apps
      totalFiles:
        type: integer
        format: int64
        description: The total files in knowledge base.
      totalTokens:
        type: integer
        format: int64
        description: The total tokens in knowledge base.
      usedStorage:
        type: string
        format: uint64
        description: The current used storage in knowledge base.
    description: KnowledgeBase represents a knowledge base.
  v1alphaListChunksResponse:
    type: object
    properties:
      chunks:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaChunk'
        title: repeated chunks
    description: The ListChunksResponse message represents a response containing a list of chunks in the artifact system.
  v1alphaListKnowledgeBaseFilesFilter:
    type: object
    properties:
      fileUids:
        type: array
        items:
          type: string
        description: The file uids.
    title: |-
      list file filter
      todo: support more parameters
  v1alphaListKnowledgeBaseFilesResponse:
    type: object
    properties:
      files:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaFile'
        description: The list of files.
      totalSize:
        type: integer
        format: int32
        description: The total number of files.
      pageSize:
        type: integer
        format: int32
        description: The requested page size.
      nextPageToken:
        type: string
        title: next page token
      filter:
        $ref: '#/definitions/v1alphaListKnowledgeBaseFilesFilter'
        description: The filter.
    title: list files response
  v1alphaListKnowledgeBasesResponse:
    type: object
    properties:
      knowledgeBases:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaKnowledgeBase'
        description: The knowledge bases container.
    description: GetKnowledgeBasesResponse represents a response for getting all knowledge bases from users.
  v1alphaListRepositoryTagsResponse:
    type: object
    properties:
      tags:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaRepositoryTag'
        description: A list of repository tags.
      totalSize:
        type: integer
        format: int32
        description: Total number of tags.
      pageSize:
        type: integer
        format: int32
        description: The requested page size.
      page:
        type: integer
        format: int32
        description: The requested page offset.
    description: ListRepositoryTagsResponse contains a list of container image tags.
  v1alphaProcessKnowledgeBaseFilesRequest:
    type: object
    properties:
      fileUids:
        type: array
        items:
          type: string
        description: The file uid.
    title: Process KnowledgeBase File Request
    required:
      - fileUids
  v1alphaProcessKnowledgeBaseFilesResponse:
    type: object
    properties:
      files:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaFile'
        description: The file uid.
    title: Process KnowledgeBase File Response
  v1alphaRepositoryTag:
    type: object
    properties:
      name:
        type: string
        description: |-
          The name of the tag, defined by its parent repository and ID.
          - Format: `repositories/{repository.id}/tags/{tag.id}`.
      id:
        type: string
        description: The tag identifier.
      digest:
        type: string
        description: Unique identifier, computed from the manifest the tag refers to.
      updateTime:
        type: string
        format: date-time
        description: Tag update time, i.e. timestamp of the last push.
        readOnly: true
    description: |-
      RepositoryTag contains information about the version of some content in a
      repository.
  v1alphaSourceFile:
    type: object
    properties:
      originalFileUid:
        type: string
        title: original file unique identifier
      content:
        type: string
        title: content
      createTime:
        type: string
        format: date-time
        title: creation time of the source file
      updateTime:
        type: string
        format: date-time
        title: update time of the source file
    description: The SourceFile message represents a source file in the artifact system.
  v1alphaUpdateChunkResponse:
    type: object
    properties:
      chunk:
        $ref: '#/definitions/v1alphaChunk'
        title: chunk
    title: Updae chunk response
  v1alphaUpdateKnowledgeBaseResponse:
    type: object
    properties:
      knowledgeBase:
        $ref: '#/definitions/v1alphaKnowledgeBase'
        description: The updated knowledge base.
    description: UpdateKnowledgeBaseResponse represents a response for updating a knowledge base.
  v1alphaUploadKnowledgeBaseFileResponse:
    type: object
    properties:
      file:
        $ref: '#/definitions/v1alphaFile'
        title: file
    title: upload file response
