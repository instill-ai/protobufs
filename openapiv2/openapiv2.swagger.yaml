swagger: "2.0"
info:
  title: instill/connector/v1alpha/auth.proto
  version: version not set
tags:
- name: ConnectorService
- name: UserService
- name: ModelService
- name: PipelineService
- name: UsageService
consumes:
- application/json
produces:
- application/json
paths:
  /v1alpha/__liveness:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: UsageService_Liveness
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/instillusagev1alphaLivenessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: health_check_request.service
        description: Service name to check for its readiness status
        in: query
        required: false
        type: string
      tags:
      - UsageService
  /v1alpha/__readiness:
    get:
      summary: |-
        Readiness method receives a ReadinessRequest message and returns a
        ReadinessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: UsageService_Readiness
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/instillusagev1alphaReadinessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: health_check_request.service
        description: Service name to check for its readiness status
        in: query
        required: false
        type: string
      tags:
      - UsageService
  /v1alpha/{destination_connector.name}:
    get:
      summary: |-
        GetDestinationConnector method receives a GetDestinationConnectorRequest
        message and returns a GetDestinationConnectorResponse message.
      operationId: ConnectorService_GetDestinationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetDestinationConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: destination_connector.name
        description: |-
          DestinationConnectorConnector resource name. It must have the format of
          "destination-connectors/*"
        in: path
        required: true
        type: string
        pattern: destination-connectors/[^/]+
      - name: view
        description: |-
          DestinationConnector view (default is VIEW_BASIC)

           - VIEW_UNSPECIFIED: View: UNSPECIFIED
           - VIEW_BASIC: View: BASIC
           - VIEW_FULL: View: FULL
        in: query
        required: false
        type: string
        enum:
        - VIEW_UNSPECIFIED
        - VIEW_BASIC
        - VIEW_FULL
        default: VIEW_UNSPECIFIED
      tags:
      - ConnectorService
    delete:
      summary: |-
        DeleteDestinationConnector method receives a
        DeleteDestinationConnectorRequest message and returns a
        DeleteDestinationConnectorResponse message.
      operationId: ConnectorService_DeleteDestinationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeleteDestinationConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: destination_connector.name
        description: |-
          DestinationConnector resource name. It must have the format of
          "destination-connectors/*"
        in: path
        required: true
        type: string
        pattern: destination-connectors/[^/]+
      tags:
      - ConnectorService
    patch:
      summary: |-
        UpdateDestinationConnector method receives a
        UpdateDestinationConnectorRequest message and returns a
        UpdateDestinationConnectorResponse message.
      operationId: ConnectorService_UpdateDestinationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUpdateDestinationConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: destination_connector.name
        description: |-
          DestinationConnector resource name. It must have the format of
          "source-connectors/*"
        in: path
        required: true
        type: string
        pattern: destination-connectors/[^/]+
      - name: destination_connector
        description: DestinationConnector resource
        in: body
        required: true
        schema:
          type: object
          properties:
            uid:
              type: string
              title: DestinationConnector UUID
              readOnly: true
            id:
              type: string
              description: |-
                DestinationConnector resource ID (the last segment of the resource name)
                used to construct the resource name. This conforms to RFC-1034, which
                restricts to letters, numbers, and hyphen, with the first character a
                letter, the last a letter or a number, and a 63 character maximum.
            destination_connector_definition:
              type: string
              title: |-
                Connector Definition resource (e.g. SourceDefinition or Destination
                Destination)
            connector:
              $ref: '#/definitions/v1alphaConnector'
              title: DestinationConnector's connector data structure
          title: DestinationConnector resource
      - name: update_mask
        description: Update mask for a DestinationConnector resource
        in: query
        required: true
        type: string
      tags:
      - ConnectorService
  /v1alpha/{destination_connector_definition.name}:
    get:
      summary: |-
        GetDestinationConnectorDefinition method receives a
        GetDestinationConnectorDefinitionRequest message and returns a
        GetGetDestinationConnectorDefinitionResponse message.
      operationId: ConnectorService_GetDestinationConnectorDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetDestinationConnectorDefinitionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: destination_connector_definition.name
        description: |-
          DestinationConnectorDefinition resource name. It must have the format of
          "source-connector-definitions/*"
        in: path
        required: true
        type: string
        pattern: destination-connector-definitions/[^/]+
      - name: view
        description: |-
          DestinationConnectorDefinition resource view (default is
          DEFINITION_VIEW_BASIC)

           - VIEW_UNSPECIFIED: View: UNSPECIFIED
           - VIEW_BASIC: View: BASIC
           - VIEW_FULL: View: FULL
        in: query
        required: false
        type: string
        enum:
        - VIEW_UNSPECIFIED
        - VIEW_BASIC
        - VIEW_FULL
        default: VIEW_UNSPECIFIED
      tags:
      - ConnectorService
  /v1alpha/{model.name}:
    get:
      summary: |-
        GetModel method receives a GetModelRequest message and returns a
        GetModelResponse
      operationId: ModelService_GetModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: model.name
        description: |-
          Resource name of the model.
          For example "models/{model}"
        in: path
        required: true
        type: string
        pattern: models/[^/]+
      - name: view
        description: |-
          Model view (default is VIEW_BASIC)
          VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
          VIEW_FULL: show full information

           - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
           - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
           - VIEW_FULL: View: FULL, full representation of the resource
        in: query
        required: false
        type: string
        enum:
        - VIEW_UNSPECIFIED
        - VIEW_BASIC
        - VIEW_FULL
        default: VIEW_UNSPECIFIED
      tags:
      - ModelService
    delete:
      summary: |-
        DeleteModel method receives a DeleteModelRequest message and returns a
        DeleteModelResponse
      operationId: ModelService_DeleteModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeleteModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: model.name
        description: |-
          Resource name of the model.
          For example "models/{model}"
        in: path
        required: true
        type: string
        pattern: models/[^/]+
      tags:
      - ModelService
    patch:
      summary: |-
        UpdateModel method receives a UpdateModelRequest message and returns a
        UpdateModelResponse
      operationId: ModelService_UpdateModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUpdateModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: model.name
        description: |-
          Resource name. It must have the format of "models/{model}".
          For example: "models/yolov4"
        in: path
        required: true
        type: string
        pattern: models/[^/]+
      - name: model
        description: |-
          The model to update

          The model `name` field is used to identify the model to update.
          Format: models/{model}
        in: body
        required: true
        schema:
          type: object
          properties:
            uid:
              type: string
              title: Model ID in UUIDv4
              readOnly: true
            id:
              type: string
              description: |-
                Resource ID (the last segment of the resource name) used to construct the
                resource name. This conforms to RFC-1034, which restricts to letters,
                numbers, and hyphen, with the first character a letter, the last a letter
                or a number, and a 63 character maximum.
            description:
              type: string
              title: Model description
            model_definition:
              type: string
              title: Model definition resource name
            configuration:
              type: string
              title: |-
                Model configuration represents the configuration JSON string that has been
                validated using the `model_spec` JSON schema of a ModelDefinition
            visibility:
              $ref: '#/definitions/ModelVisibility'
              title: Model visibility including public or private
            user:
              type: string
              description: The resource name of a user, e.g., "users/local-user".
              readOnly: true
            org:
              type: string
              title: The resource name of an organization
              readOnly: true
            create_time:
              type: string
              format: date-time
              title: Model create time
              readOnly: true
            update_time:
              type: string
              format: date-time
              title: Model update time
              readOnly: true
          description: |-
            The model `name` field is used to identify the model to update.
            Format: models/{model}
          title: The model to update
      - name: update_mask
        description: Mask of fields to update.
        in: query
        required: true
        type: string
      tags:
      - ModelService
  /v1alpha/{model_definition.name}:
    get:
      summary: |-
        GetModelDefinition method receives a GetModelDefinitionRequest message and
        returns a GetModelDefinitionResponse
      operationId: ModelService_GetModelDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetModelDefinitionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: model_definition.name
        description: |-
          Resource name of the model definition.
          For example "model-definitions/{uuid}"
        in: path
        required: true
        type: string
        pattern: model-definitions/[^/]+
      - name: view
        description: |-
          Definition view (default is VIEW_BASIC)
          VIEW_UNSPECIFIED/VIEW_BASIC: omit `ModelDefinition.model_spec` and
          `ModelDefinition.model_instance_spec`
          VIEW_FULL: show full information

           - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
           - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
           - VIEW_FULL: View: FULL, full representation of the resource
        in: query
        required: false
        type: string
        enum:
        - VIEW_UNSPECIFIED
        - VIEW_BASIC
        - VIEW_FULL
        default: VIEW_UNSPECIFIED
      tags:
      - ModelService
  /v1alpha/{model_instance.name/readme}:
    get:
      summary: |-
        GetModelInstanceCard method receives a GetModelInstanceCardRequest message
        and returns a GetModelInstanceCardResponse
      operationId: ModelService_GetModelInstanceCard
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetModelInstanceCardResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: model_instance.name/readme
        description: |-
          Resource name of the model instance card.
          For example "models/{model}/instances/{instance}/readme"
        in: path
        required: true
        type: string
        pattern: models/[^/]+/instances/[^/]+/readme
      tags:
      - ModelService
  /v1alpha/{model_instance.name}:
    get:
      summary: |-
        GetModelInstance method receives a GetModelInstanceRequest message and
        returns a GetModelInstanceResponse
      operationId: ModelService_GetModelInstance
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetModelInstanceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: model_instance.name
        description: |-
          Resource name of the model instance.
          For example "models/{model}/instances/{instance}"
        in: path
        required: true
        type: string
        pattern: models/[^/]+/instances/[^/]+
      - name: view
        description: |-
          Model instance view (default is VIEW_BASIC)
          VIEW_UNSPECIFIED/VIEW_BASIC: omit `ModelInstance.configuration`
          VIEW_FULL: show full information

           - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
           - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
           - VIEW_FULL: View: FULL, full representation of the resource
        in: query
        required: false
        type: string
        enum:
        - VIEW_UNSPECIFIED
        - VIEW_BASIC
        - VIEW_FULL
        default: VIEW_UNSPECIFIED
      tags:
      - ModelService
  /v1alpha/{name_1}:rename:
    post:
      summary: |-
        RenameDestinationConnector method receives a RenameDestinationConnectorRequest message and returns
        a RenameDestinationConnectorResponse message.
      operationId: ConnectorService_RenameDestinationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaRenameDestinationConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: name_1
        description: |-
          DestinationConnector resource name. It must have the format of
          "destination-connectors/*"
        in: path
        required: true
        type: string
        pattern: destination-connectors/[^/]+
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            new_destination_connector_id:
              type: string
              title: |-
                DestinationConnector new resource id to replace with the
                DestinationConnector resource name to be
                "destination-connectors/{new_destination_connector_id}"
              required:
              - new_destination_connector_id
          title: |-
            RenameDestinationConnectorRequest represents a request to rename the
            DestinationConnector resource name
          required:
          - new_destination_connector_id
      tags:
      - ConnectorService
  /v1alpha/{name_1}:trigger:
    post:
      summary: |-
        TriggerPipeline method receives a TriggerPipelineRequest message and
        returns a TriggerPipelineResponse.
      operationId: PipelineService_TriggerPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaTriggerPipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: name_1
        description: Pipeline resource name. It must have the format of "pipelines/*"
        in: path
        required: true
        type: string
        pattern: pipelines/[^/]+
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            inputs:
              type: array
              items:
                $ref: '#/definitions/instillpipelinev1alphaInput'
              title: Input to the pipeline
              required:
              - inputs
          title: TriggerPipelineRequest represents a request to trigger a pipeline
          required:
          - inputs
      tags:
      - PipelineService
  /v1alpha/{name_2}:rename:
    post:
      summary: RenameModel method rename a model
      operationId: ModelService_RenameModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaRenameModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: name_2
        description: Resource name for the model to be renamed.
        in: path
        required: true
        type: string
        pattern: models/[^/]+
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            new_model_id:
              type: string
              title: New ID of this model
              required:
              - new_model_id
          title: RenameModelRequest represents a request to rename a model
          required:
          - new_model_id
      tags:
      - ModelService
  /v1alpha/{name_3}:rename:
    post:
      summary: |-
        RenamePipeline method receives a RenamePipelineRequest message and returns
        a RenamePipelineResponse message.
      operationId: PipelineService_RenamePipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaRenamePipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: name_3
        description: Pipeline resource name. It must have the format of "pipelines/*"
        in: path
        required: true
        type: string
        pattern: pipelines/[^/]+
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            new_pipeline_id:
              type: string
              title: |-
                Pipeline new resource id to replace with the pipeline resource name to be
                "pipelines/{new_pipeline_id}"
              required:
              - new_pipeline_id
          title: |-
            RenamePipelineRequest represents a request to rename the pipeline resource
            name
          required:
          - new_pipeline_id
      tags:
      - PipelineService
  /v1alpha/{name}:activate:
    post:
      summary: |-
        Activate a pipeline.
        The `state` of the pipeline after activating is `ACTIVE`.
        ActivatePipeline` can be called on Pipelines in the state `INACTIVE`;
        Pipelines in a different state (including `ACTIVE`) returns an error.
      operationId: PipelineService_ActivatePipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaActivatePipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: name
        description: Pipeline resource name. It must have the format of "pipelines/*"
        in: path
        required: true
        type: string
        pattern: pipelines/[^/]+
      - name: body
        in: body
        required: true
        schema:
          type: object
          title: ActivatePipelineRequest represents a request to activate a pipeline
      tags:
      - PipelineService
  /v1alpha/{name}:deactivate:
    post:
      summary: |-
        Deactivate a pipeline.
        The `state` of the pipeline after inactivating is `INACTIVE`.
        DeactivatePipeline` can be called on Pipelines in the state `ACTIVE`;
        Pipelines in a different state (including `INACTIVE`) returns an error.
      operationId: PipelineService_DeactivatePipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeactivatePipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: name
        description: Pipeline resource name. It must have the format of "pipelines/*"
        in: path
        required: true
        type: string
        pattern: pipelines/[^/]+
      - name: body
        in: body
        required: true
        schema:
          type: object
          title: DeactivatePipelineRequest represents a request to deactivate a pipeline
      tags:
      - PipelineService
  /v1alpha/{name}:deploy:
    post:
      summary: |-
        DeployModelInstance deploy a model instance to online state
        TODO: should use [Long-running operations](https://google.aip.dev/151)
      operationId: ModelService_DeployModelInstance
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeployModelInstanceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: name
        description: |-
          Resource name for the model instance to be deployed.
          Format: models/{model}/instances/{instance}
        in: path
        required: true
        type: string
        pattern: models/[^/]+/instances/[^/]+
      - name: body
        in: body
        required: true
        schema:
          type: object
          title: |-
            DeployModelInstanceRequest represents a request to deploy a model instance to
            online state
      tags:
      - ModelService
  /v1alpha/{name}:publish:
    post:
      summary: |-
        PublishModel method receives a PublishModelRequest message and returns a
        PublishModelResponse
      operationId: ModelService_PublishModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaPublishModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: name
        description: |-
          Resource name of the model.
          For example "models/{model}"
        in: path
        required: true
        type: string
        pattern: models/[^/]+
      - name: body
        in: body
        required: true
        schema:
          type: object
          title: PublishModelRequest represents a request to publish a model
      tags:
      - ModelService
  /v1alpha/{name}:rename:
    post:
      summary: |-
        RenameDestinationConnector method receives a RenameSourceConnectorRequest message and returns
        a RenameSourceConnectorResponse message.
      operationId: ConnectorService_RenameSourceConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaRenameSourceConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: name
        description: |-
          SourceConnector resource name. It must have the format of
          "source-connectors/*"
        in: path
        required: true
        type: string
        pattern: source-connectors/[^/]+
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            new_source_connector_id:
              type: string
              title: |-
                SourceConnector new resource id to replace with the
                SourceConnector resource name to be
                "source-connectors/{new_source_connector_id}"
              required:
              - new_source_connector_id
          title: |-
            RenameSourceConnectorRequest represents a request to rename the
            SourceConnector resource name
          required:
          - new_source_connector_id
      tags:
      - ConnectorService
  /v1alpha/{name}:trigger:
    post:
      summary: /////////////////////////////////////////////////////
      description: |-
        TriggerModelInstance method receives a TriggerModelInstanceRequest message
        and returns a TriggerModelInstanceResponse message.
      operationId: ModelService_TriggerModelInstance
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaTriggerModelInstanceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: name
        description: |-
          The resource name of the model instance to trigger.
          For example "models/{model}/instances/{instance}"
        in: path
        required: true
        type: string
        pattern: models/[^/]+/instances/[^/]+
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            inputs:
              type: array
              items:
                $ref: '#/definitions/instillmodelv1alphaInput'
              title: Input to trigger the model instance
              required:
              - inputs
          title: TriggerModelInstanceRequest represents a request to trigger a model
            instance
          required:
          - inputs
      tags:
      - ModelService
  /v1alpha/{name}:undeploy:
    post:
      summary: |-
        UndeployModelInstance undeploy a model instance to offline state
        TODO: should use [Long-running operations](https://google.aip.dev/151)
      operationId: ModelService_UndeployModelInstance
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUndeployModelInstanceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: name
        description: |-
          Resource name for the model instance to be undeployed.
          Format: models/{model}/instances/{instance}
        in: path
        required: true
        type: string
        pattern: models/[^/]+/instances/[^/]+
      - name: body
        in: body
        required: true
        schema:
          type: object
          title: |-
            UndeployModelInstanceRequest represents a request to undeploy a model
            instance to offline state
      tags:
      - ModelService
  /v1alpha/{name}:unpublish:
    post:
      summary: |-
        UnpublishModel method receives a UnpublishModelRequest message and returns
        a UnpublishModelResponse
      operationId: ModelService_UnpublishModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUnpublishModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: name
        description: |-
          Resource name of the model.
          For example "models/{model}"
        in: path
        required: true
        type: string
        pattern: models/[^/]+
      - name: body
        in: body
        required: true
        schema:
          type: object
          title: UnpublishModelRequest represents a request to unpublish a model
      tags:
      - ModelService
  /v1alpha/{parent}/instances:
    get:
      summary: |-
        ListModelInstance method receives a ListModelInstanceRequest message and
        returns a ListModelInstanceResponse
      operationId: ModelService_ListModelInstance
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListModelInstanceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: parent
        description: |-
          The name of the model whose instances we'd like to list.
          e.g., "models/yolov4"
        in: path
        required: true
        type: string
        pattern: models/[^/]+
      - name: page_size
        description: |-
          Page size: the maximum number of resources to return. The service may
          return fewer than this value. If unspecified, at most 10 model instances
          will be returned. The maximum value is 100; values above 100 will be
          coereced to 100.
        in: query
        required: false
        type: string
        format: int64
      - name: page_token
        description: Page token
        in: query
        required: false
        type: string
      - name: view
        description: |-
          Model instance view (default is VIEW_BASIC)
          VIEW_UNSPECIFIED/VIEW_BASIC: omit `ModelInstance.configuration`
          VIEW_FULL: show full information

           - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
           - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
           - VIEW_FULL: View: FULL, full representation of the resource
        in: query
        required: false
        type: string
        enum:
        - VIEW_UNSPECIFIED
        - VIEW_BASIC
        - VIEW_FULL
        default: VIEW_UNSPECIFIED
      tags:
      - ModelService
  /v1alpha/{permalink_1}:lookUp:
    get:
      summary: |-
        LookUpDestinationConnector method receives a
        LookUpDestinationConnectorRequest message and returns a
        LookUpDestinationConnectorResponse
      operationId: ConnectorService_LookUpDestinationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaLookUpDestinationConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: permalink_1
        description: |-
          Permalink of a source connector. For example:
          "destination-connectors/{uid}"
        in: path
        required: true
        type: string
        pattern: destination-connectors/[^/]+
      - name: view
        description: |-
          SourceConnector view (default is VIEW_BASIC)

           - VIEW_UNSPECIFIED: View: UNSPECIFIED
           - VIEW_BASIC: View: BASIC
           - VIEW_FULL: View: FULL
        in: query
        required: false
        type: string
        enum:
        - VIEW_UNSPECIFIED
        - VIEW_BASIC
        - VIEW_FULL
        default: VIEW_UNSPECIFIED
      tags:
      - ConnectorService
  /v1alpha/{permalink_2}:lookUp:
    get:
      summary: |-
        LookUpUser method receives a LookUpUserRequest message and returns a
        LookUpUserResponse
      operationId: UserService_LookUpUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaLookUpUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: permalink_2
        description: |-
          Permalink of a user. For example:
          "users/{uid}"
        in: path
        required: true
        type: string
        pattern: users/[^/]+
      tags:
      - UserService
  /v1alpha/{permalink_3}:lookUp:
    get:
      summary: |-
        LookUpModel method receives a LookUpModelRequest message and returns a
        LookUpModelResponse
      operationId: ModelService_LookUpModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaLookUpModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: permalink_3
        description: |-
          Permalink of a model. For example:
          "models/{uid}"
        in: path
        required: true
        type: string
        pattern: models/[^/]+
      - name: view
        description: |-
          Model view (default is VIEW_BASIC)
          VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
          VIEW_FULL: show full information

           - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
           - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
           - VIEW_FULL: View: FULL, full representation of the resource
        in: query
        required: false
        type: string
        enum:
        - VIEW_UNSPECIFIED
        - VIEW_BASIC
        - VIEW_FULL
        default: VIEW_UNSPECIFIED
      tags:
      - ModelService
  /v1alpha/{permalink_4}:lookUp:
    get:
      summary: |-
        LookUpModelInstance method receives a LookUpModelInstanceRequest message
        and returns a
        LookUpModelInstanceResponse
      operationId: ModelService_LookUpModelInstance
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaLookUpModelInstanceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: permalink_4
        description: |-
          Permalink of a model instance. For example:
          "models/{model_uid}/instances/{instance_uid}"
        in: path
        required: true
        type: string
        pattern: models/[^/]+/instances/[^/]+
      - name: view
        description: |-
          Model instance view (default is VIEW_BASIC)
          VIEW_UNSPECIFIED/VIEW_BASIC: omit `ModelInstance.configuration`
          VIEW_FULL: show full information

           - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
           - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
           - VIEW_FULL: View: FULL, full representation of the resource
        in: query
        required: false
        type: string
        enum:
        - VIEW_UNSPECIFIED
        - VIEW_BASIC
        - VIEW_FULL
        default: VIEW_UNSPECIFIED
      tags:
      - ModelService
  /v1alpha/{permalink_5}:lookUp:
    get:
      summary: |-
        LookUpPipeline method receives a LookUpPipelineRequest message and returns
        a LookUpPipelineResponse
      operationId: PipelineService_LookUpPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaLookUpPipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: permalink_5
        description: |-
          Permalink of a pipeline. For example:
          "pipelines/{uid}"
        in: path
        required: true
        type: string
        pattern: pipelines/[^/]+
      - name: view
        description: |-
          View view (default is VIEW_BASIC)

           - VIEW_UNSPECIFIED: View: UNSPECIFIED
           - VIEW_BASIC: View: BASIC
           - VIEW_FULL: View: FULL
        in: query
        required: false
        type: string
        enum:
        - VIEW_UNSPECIFIED
        - VIEW_BASIC
        - VIEW_FULL
        default: VIEW_UNSPECIFIED
      tags:
      - PipelineService
  /v1alpha/{permalink}:lookUp:
    get:
      summary: |-
        LookUpSourceConnector method receives a LookUpSourceConnectorRequest
        message and returns a LookUpSourceConnectorResponse
      operationId: ConnectorService_LookUpSourceConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaLookUpSourceConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: permalink
        description: |-
          Permalink of a source connector. For example:
          "source-connectors/{uid}"
        in: path
        required: true
        type: string
        pattern: source-connectors/[^/]+
      - name: view
        description: |-
          SourceConnector view (default is VIEW_BASIC)

           - VIEW_UNSPECIFIED: View: UNSPECIFIED
           - VIEW_BASIC: View: BASIC
           - VIEW_FULL: View: FULL
        in: query
        required: false
        type: string
        enum:
        - VIEW_UNSPECIFIED
        - VIEW_BASIC
        - VIEW_FULL
        default: VIEW_UNSPECIFIED
      tags:
      - ConnectorService
  /v1alpha/{pipeline.name}:
    get:
      summary: |-
        GetPipeline method receives a GetPipelineRequest message and returns a
        GetPipelineResponse message.
      operationId: PipelineService_GetPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetPipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: pipeline.name
        description: Pipeline resource name. It must have the format of "pipelines/*"
        in: path
        required: true
        type: string
        pattern: pipelines/[^/]+
      - name: view
        description: |-
          Pipeline resource view (default is VIEW_BASIC)

           - VIEW_UNSPECIFIED: View: UNSPECIFIED
           - VIEW_BASIC: View: BASIC
           - VIEW_FULL: View: FULL
        in: query
        required: false
        type: string
        enum:
        - VIEW_UNSPECIFIED
        - VIEW_BASIC
        - VIEW_FULL
        default: VIEW_UNSPECIFIED
      tags:
      - PipelineService
    delete:
      summary: |-
        DeletePipeline method receives a DeletePipelineRequest message and returns
        a DeletePipelineResponse message.
      operationId: PipelineService_DeletePipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeletePipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: pipeline.name
        description: Pipeline resource name. It must have the format of "pipelines/*"
        in: path
        required: true
        type: string
        pattern: pipelines/[^/]+
      tags:
      - PipelineService
    patch:
      summary: |-
        UpdatePipeline method receives a UpdatePipelineRequest message and returns
        a UpdatePipelineResponse message.
      operationId: PipelineService_UpdatePipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUpdatePipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: pipeline.name
        description: Pipeline resource name. It must have the format of "pipelines/*"
        in: path
        required: true
        type: string
        pattern: pipelines/[^/]+
      - name: pipeline
        description: A pipeline resource to update
        in: body
        required: true
        schema:
          type: object
          properties:
            uid:
              type: string
              title: Pipeline UUID
              readOnly: true
            id:
              type: string
              description: |-
                Pipeline resource ID (the last segment of the resource name) used to
                construct the resource name. This conforms to RFC-1034, which restricts to
                letters, numbers, and hyphen, with the first character a letter, the last a
                letter or a number, and a 63 character maximum.
            description:
              type: string
              title: Pipeline description
            recipe:
              $ref: '#/definitions/v1alphaRecipe'
              title: Pipeline recipe
            mode:
              $ref: '#/definitions/PipelineMode'
              title: Pipeline mode
            state:
              $ref: '#/definitions/v1alphaPipelineState'
              title: Pipeline state
            user:
              type: string
              description: The resource name of a user, e.g., "users/local-user".
              readOnly: true
            org:
              type: string
              title: The resource name of an organization
              readOnly: true
            create_time:
              type: string
              format: date-time
              title: Pipeline creation time
              readOnly: true
            update_time:
              type: string
              format: date-time
              title: Pipeline update time
              readOnly: true
          title: A pipeline resource to update
      - name: update_mask
        description: Update mask for a pipeline resource
        in: query
        required: true
        type: string
      tags:
      - PipelineService
  /v1alpha/{source_connector.name}:
    get:
      summary: |-
        GetSourceConnector method receives a GetSourceConnectorRequest message and
        returns a GetSourceConnectorResponse message.
      operationId: ConnectorService_GetSourceConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetSourceConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: source_connector.name
        description: |-
          SourceConnectorConnector resource name. It must have the format of
          "destination-connectors/*"
        in: path
        required: true
        type: string
        pattern: source-connectors/[^/]+
      - name: view
        description: |-
          SourceConnector view (default is VIEW_BASIC)

           - VIEW_UNSPECIFIED: View: UNSPECIFIED
           - VIEW_BASIC: View: BASIC
           - VIEW_FULL: View: FULL
        in: query
        required: false
        type: string
        enum:
        - VIEW_UNSPECIFIED
        - VIEW_BASIC
        - VIEW_FULL
        default: VIEW_UNSPECIFIED
      tags:
      - ConnectorService
    delete:
      summary: |-
        DeleteSourceConnector method receives a DeleteSourceConnectorRequest
        message and returns a DeleteSourceConnectorResponse message.
      operationId: ConnectorService_DeleteSourceConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeleteSourceConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: source_connector.name
        description: |-
          SourceConnector resource name. It must have the format of
          "destination-connectors/*"
        in: path
        required: true
        type: string
        pattern: source-connectors/[^/]+
      tags:
      - ConnectorService
    patch:
      summary: |-
        UpdateSourceConnector method receives a UpdateSourceConnectorRequest
        message and returns a UpdateSourceConnectorResponse message.
      operationId: ConnectorService_UpdateSourceConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUpdateSourceConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: source_connector.name
        description: |-
          SourceConnector resource name. It must have the format of
          "source-connectors/*"
        in: path
        required: true
        type: string
        pattern: source-connectors/[^/]+
      - name: source_connector
        description: SourceConnector resource
        in: body
        required: true
        schema:
          type: object
          properties:
            uid:
              type: string
              title: SourceConnector UUID
              readOnly: true
            id:
              type: string
              description: |-
                SourceConnector resource ID (the last segment of the resource name) used to
                construct the resource name. This conforms to RFC-1034, which restricts to
                letters, numbers, and hyphen, with the first character a letter, the last a
                letter or a number, and a 63 character maximum.
            source_connector_definition:
              type: string
              title: |-
                Connector Definition resource (e.g. SourceDefinition or Destination
                Destination)
            connector:
              $ref: '#/definitions/v1alphaConnector'
              title: SourceConnector's connector data structure
          title: SourceConnector resource
      - name: update_mask
        description: Update mask for a SourceConnector resource
        in: query
        required: true
        type: string
      tags:
      - ConnectorService
  /v1alpha/{source_connector_definition.name}:
    get:
      summary: |-
        GetSourceConnectorDefinition method receives a
        GetSourceConnectorDefinitionRequest message and returns a
        GetGetSourceConnectorDefinitionResponse message.
      operationId: ConnectorService_GetSourceConnectorDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetSourceConnectorDefinitionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: source_connector_definition.name
        description: |-
          SourceConnectorDefinition resource name. It must have the format of
          "source-connector-definitions/*"
        in: path
        required: true
        type: string
        pattern: source-connector-definitions/[^/]+
      - name: view
        description: |-
          SourceConnectorDefinition resource view (default is DEFINITION_VIEW_BASIC)

           - VIEW_UNSPECIFIED: View: UNSPECIFIED
           - VIEW_BASIC: View: BASIC
           - VIEW_FULL: View: FULL
        in: query
        required: false
        type: string
        enum:
        - VIEW_UNSPECIFIED
        - VIEW_BASIC
        - VIEW_FULL
        default: VIEW_UNSPECIFIED
      tags:
      - ConnectorService
  /v1alpha/{user.name}:
    get:
      summary: |-
        GetUser method receives a GetUserRequest message and returns
        a GetUserResponse message.
      operationId: UserService_GetUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: user.name
        description: |-
          Resource name of a user. For example:
          "users/instill"
        in: path
        required: true
        type: string
        pattern: users/[^/]+
      tags:
      - UserService
    delete:
      summary: |-
        DeleteUser method receives a DeleteUserRequest message and returns a
        DeleteUserResponse
      operationId: UserService_DeleteUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeleteUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: user.name
        description: |-
          The resource name of the user to be deleted,
          for example: "users/local-user"
        in: path
        required: true
        type: string
        pattern: users/[^/]+
      tags:
      - UserService
    patch:
      summary: |-
        UpdateUser method receives a UpdateUserRequest message and returns
        a UpdateUserResponse
      operationId: UserService_UpdateUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUpdateUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: user.name
        description: |-
          Resource name. It must have the format of "users/*".
          For example: "users/local-user".
        in: path
        required: true
        type: string
        pattern: users/[^/]+
      - name: user
        description: |-
          The user to update

          The user's `name` field is used to identify the user to update.
          Format: users/{user}
        in: body
        required: true
        schema:
          type: object
          properties:
            uid:
              type: string
              title: User ID in UUIDv4
              readOnly: true
            email:
              type: string
              title: User email
            id:
              type: string
              description: |-
                Resource ID (the last segment of the resource name), also the user login
                username. This conforms to RFC-1034, which restricts to letters, numbers,
                and hyphen, with the first character a letter, the last a letter or a
                number, and a 63 character maximum.
            company_name:
              type: string
              title: User company name
            role:
              type: string
              title: |-
                User role
                Allowed roles:
                [ "manager", "ai-researcher", "ai-engineer", "data-engineer",
                "data-scientist",
                  "analytics-engineer", "hobbyist"]
            usage_data_collection:
              type: boolean
              title: User usage data collection
              required:
              - usage_data_collection
            newsletter_subscription:
              type: boolean
              title: User newsletter subscription
              required:
              - newsletter_subscription
            type:
              $ref: '#/definitions/v1alphaOwnerType'
              title: 'Owner type: fixed to `OWNER_TYPE_USER`'
            create_time:
              type: string
              format: date-time
              title: User creation time
              readOnly: true
            update_time:
              type: string
              format: date-time
              title: User update time
              readOnly: true
          description: |-
            The user's `name` field is used to identify the user to update.
            Format: users/{user}
          title: The user to update
          required:
          - usage_data_collection
          - newsletter_subscription
      - name: update_mask
        description: Update mask for a user resource
        in: query
        required: true
        type: string
      tags:
      - UserService
  /v1alpha/destination-connector-definitions:
    get:
      summary: |-
        ListDestinationConnectorDefinition method receives a
        ListDestinationConnectorDefinitionRequest message and returns a
        ListDestinationConnectorDefinitionResponse message.
      operationId: ConnectorService_ListDestinationConnectorDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListDestinationConnectorDefinitionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: page_size
        description: |-
          The maximum number of DestinationConnectorDefinitions to return. The
          service may return fewer than this value. If unspecified, at most 10
          DestinationConnectorDefinitions will be returned. The maximum value is 100;
          values above 100 will be coerced to 100.
        in: query
        required: false
        type: string
        format: int64
      - name: page_token
        description: Page token
        in: query
        required: false
        type: string
      - name: view
        description: |-
          Definition view (default is DEFINITION_VIEW_BASIC)

           - VIEW_UNSPECIFIED: View: UNSPECIFIED
           - VIEW_BASIC: View: BASIC
           - VIEW_FULL: View: FULL
        in: query
        required: false
        type: string
        enum:
        - VIEW_UNSPECIFIED
        - VIEW_BASIC
        - VIEW_FULL
        default: VIEW_UNSPECIFIED
      tags:
      - ConnectorService
  /v1alpha/destination-connectors:
    get:
      summary: |-
        ListDestinationConnector method receives a ListDestinationConnectorRequest
        message and returns a ListDestinationConnectorResponse message.
      operationId: ConnectorService_ListDestinationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListDestinationConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: page_size
        description: |-
          The maximum number of connectors to return. The service may return fewer
          than this value. If unspecified, at most 10 connectors will be returned.
          The maximum value is 100; values above 100 will be coerced to 100.
        in: query
        required: false
        type: string
        format: int64
      - name: page_token
        description: Page token
        in: query
        required: false
        type: string
      - name: view
        description: |-
          DestinationConnector view (default is VIEW_BASIC)

           - VIEW_UNSPECIFIED: View: UNSPECIFIED
           - VIEW_BASIC: View: BASIC
           - VIEW_FULL: View: FULL
        in: query
        required: false
        type: string
        enum:
        - VIEW_UNSPECIFIED
        - VIEW_BASIC
        - VIEW_FULL
        default: VIEW_UNSPECIFIED
      tags:
      - ConnectorService
    post:
      summary: |-
        CreateDestinationConnector method receives a
        CreateDestinationConnectorRequest message and returns a
        CreateDestinationConnectorResponse message.
      operationId: ConnectorService_CreateDestinationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCreateDestinationConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: destination_connector
        description: DestinationConnector resource
        in: body
        required: true
        schema:
          $ref: '#/definitions/v1alphaDestinationConnector'
      tags:
      - ConnectorService
  /v1alpha/health/connector:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: ConnectorService_Liveness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/instillconnectorv1alphaLivenessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: health_check_request.service
        description: Service name to check for its readiness status
        in: query
        required: false
        type: string
      tags:
      - ConnectorService
  /v1alpha/health/mgmt:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: UsageService_Liveness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/instillusagev1alphaLivenessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: health_check_request.service
        description: Service name to check for its readiness status
        in: query
        required: false
        type: string
      tags:
      - UsageService
  /v1alpha/health/model:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: ModelService_Liveness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/instillmodelv1alphaLivenessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: health_check_request.service
        description: Service name to check for its readiness status
        in: query
        required: false
        type: string
      tags:
      - ModelService
  /v1alpha/health/pipeline:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: PipelineService_Liveness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/instillpipelinev1alphaLivenessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: health_check_request.service
        description: Service name to check for its readiness status
        in: query
        required: false
        type: string
      tags:
      - PipelineService
  /v1alpha/model-definitions:
    get:
      summary: |-
        ListModelDefinition method receives a ListModelDefinitionRequest message
        and returns a ListModelDefinitionResponse
      operationId: ModelService_ListModelDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListModelDefinitionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: page_size
        description: |-
          Page size: the maximum number of resources to return. The service may
          return fewer than this value. If unspecified, at most 10 ModelDefinitions
          will be returned. The maximum value is 100; values above 100 will be
          coereced to 100.
        in: query
        required: false
        type: string
        format: int64
      - name: page_token
        description: Page token
        in: query
        required: false
        type: string
      - name: view
        description: |-
          Definition view (default is VIEW_BASIC)
          VIEW_UNSPECIFIED/VIEW_BASIC: omit `ModelDefinition.model_spec` and
          `ModelDefinition.model_instance_spec`
          VIEW_FULL: show full information

           - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
           - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
           - VIEW_FULL: View: FULL, full representation of the resource
        in: query
        required: false
        type: string
        enum:
        - VIEW_UNSPECIFIED
        - VIEW_BASIC
        - VIEW_FULL
        default: VIEW_UNSPECIFIED
      tags:
      - ModelService
  /v1alpha/models:
    get:
      summary: |-
        ListModel method receives a ListModelRequest message and returns a
        ListModelResponse
      operationId: ModelService_ListModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: page_size
        description: |-
          Page size: the maximum number of resources to return. The service may
          return fewer than this value. If unspecified, at most 10 models will be
          returned. The maximum value is 100; values above 100 will be coereced to
          100.
        in: query
        required: false
        type: string
        format: int64
      - name: page_token
        description: Page token
        in: query
        required: false
        type: string
      - name: view
        description: |-
          Model view (default is VIEW_BASIC)
          VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
          VIEW_FULL: show full information

           - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
           - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
           - VIEW_FULL: View: FULL, full representation of the resource
        in: query
        required: false
        type: string
        enum:
        - VIEW_UNSPECIFIED
        - VIEW_BASIC
        - VIEW_FULL
        default: VIEW_UNSPECIFIED
      tags:
      - ModelService
    post:
      summary: |-
        CreateModel method receives a CreateModelRequest message and returns a
        CreateModelResponse
      operationId: ModelService_CreateModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCreateModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: model
        description: |-
          The model to be created

          The model `name` field is used to identify the model to create.
          Format: models/{model}
        in: body
        required: true
        schema:
          $ref: '#/definitions/v1alphaModel'
      tags:
      - ModelService
  /v1alpha/pipelines:
    get:
      summary: |-
        ListPipeline method receives a ListPipelineRequest message and returns a
        ListPipelineResponse message.
      operationId: PipelineService_ListPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListPipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: page_size
        description: |-
          The maximum number of pipelines to return. The service may return fewer
          than this value. If unspecified, at most 10 pipelines will be returned. The
          maximum value is 100; values above 100 will be coerced to 100.
        in: query
        required: false
        type: string
        format: int64
      - name: page_token
        description: Page token
        in: query
        required: false
        type: string
      - name: view
        description: |-
          View view (default is VIEW_BASIC)

           - VIEW_UNSPECIFIED: View: UNSPECIFIED
           - VIEW_BASIC: View: BASIC
           - VIEW_FULL: View: FULL
        in: query
        required: false
        type: string
        enum:
        - VIEW_UNSPECIFIED
        - VIEW_BASIC
        - VIEW_FULL
        default: VIEW_UNSPECIFIED
      tags:
      - PipelineService
    post:
      summary: |-
        CreatePipeline method receives a CreatePipelineRequest message and returns
        a CreatePipelineResponse message.
      operationId: PipelineService_CreatePipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCreatePipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: pipeline
        description: A pipeline resource to create
        in: body
        required: true
        schema:
          $ref: '#/definitions/v1alphaPipeline'
      tags:
      - PipelineService
  /v1alpha/reports:send:
    post:
      summary: |-
        SendReport method receives a SendReportRequest message and returns a
        SendReportResponse message.
      operationId: UsageService_SendReport
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaSendReportResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/v1alphaSendReportRequest'
      tags:
      - UsageService
  /v1alpha/sessions:
    post:
      summary: |-
        CreateSession method receives a CreateSessionRequest message and returns
        a CreateSessionResponse message.
      operationId: UsageService_CreateSession
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCreateSessionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: session
        description: A session resource to create
        in: body
        required: true
        schema:
          $ref: '#/definitions/v1alphaSession'
      tags:
      - UsageService
  /v1alpha/source-connector-definitions:
    get:
      summary: |-
        ListSourceConnectorDefinition method receives a
        ListSourceConnectorDefinitionRequest message and returns a
        ListSourceConnectorDefinitionResponse message.
      operationId: ConnectorService_ListSourceConnectorDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListSourceConnectorDefinitionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: page_size
        description: |-
          The maximum number of SourceConnectorDefinitions to return. The service may
          return fewer than this value. If unspecified, at most 10
          SourceConnectorDefinitions will be returned. The maximum value is 100;
          values above 100 will be coerced to 100.
        in: query
        required: false
        type: string
        format: int64
      - name: page_token
        description: Page token
        in: query
        required: false
        type: string
      - name: view
        description: |-
          Definition view (default is DEFINITION_VIEW_BASIC)

           - VIEW_UNSPECIFIED: View: UNSPECIFIED
           - VIEW_BASIC: View: BASIC
           - VIEW_FULL: View: FULL
        in: query
        required: false
        type: string
        enum:
        - VIEW_UNSPECIFIED
        - VIEW_BASIC
        - VIEW_FULL
        default: VIEW_UNSPECIFIED
      tags:
      - ConnectorService
  /v1alpha/source-connectors:
    get:
      summary: |-
        ListSourceConnector method receives a ListSourceConnectorRequest message
        and returns a ListSourceConnectorResponse message.
      operationId: ConnectorService_ListSourceConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListSourceConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: page_size
        description: |-
          The maximum number of connectors to return. The service may return fewer
          than this value. If unspecified, at most 10 connectors will be returned.
          The maximum value is 100; values above 100 will be coerced to 100.
        in: query
        required: false
        type: string
        format: int64
      - name: page_token
        description: Page token
        in: query
        required: false
        type: string
      - name: view
        description: |-
          SourceConnector view (default is VIEW_BASIC)

           - VIEW_UNSPECIFIED: View: UNSPECIFIED
           - VIEW_BASIC: View: BASIC
           - VIEW_FULL: View: FULL
        in: query
        required: false
        type: string
        enum:
        - VIEW_UNSPECIFIED
        - VIEW_BASIC
        - VIEW_FULL
        default: VIEW_UNSPECIFIED
      tags:
      - ConnectorService
    post:
      summary: |-
        CreateSourceConnector method receives a CreateSourceConnectorRequest
        message and returns a CreateSourceConnectorResponse message.
      operationId: ConnectorService_CreateSourceConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCreateSourceConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: source_connector
        description: SourceConnector resource
        in: body
        required: true
        schema:
          $ref: '#/definitions/v1alphaSourceConnector'
      tags:
      - ConnectorService
  /v1alpha/users:
    get:
      summary: |-
        ListUser method receives a ListUserRequest message and returns a
        ListUserResponse message.
      operationId: UserService_ListUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: page_size
        description: |-
          Page size: the maximum number of resources to return. The service may
          return fewer than this value. If unspecified, at most 10 users will be
          returned. The maximum value is 100; values above 100 will be coereced to
          100.
        in: query
        required: false
        type: string
        format: int64
      - name: page_token
        description: Page token
        in: query
        required: false
        type: string
      tags:
      - UserService
    post:
      summary: |-
        CreateUser receives a CreateUserRequest message and returns a
        aGetUserResponse
      operationId: UserService_CreateUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCreateUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: user
        description: |-
          The user to be created

          The user's `name` field is used to identify the user to create.
          Format: users/{user}
        in: body
        required: true
        schema:
          $ref: '#/definitions/v1alphaUser'
      tags:
      - UserService
definitions:
  AdvancedAuthAuthFlowType:
    type: string
    enum:
    - AUTH_FLOW_TYPE_UNSPECIFIED
    - AUTH_FLOW_TYPE_OAUTH2_0
    - AUTH_FLOW_TYPE_OAUTH1_0
    default: AUTH_FLOW_TYPE_UNSPECIFIED
    description: |-
      - AUTH_FLOW_TYPE_UNSPECIFIED: AuthFlowType: AUTH_TYPE_UNSPECIFIED
       - AUTH_FLOW_TYPE_OAUTH2_0: AuthFlowType: AUTH_TYPE_OAUTH2_0
       - AUTH_FLOW_TYPE_OAUTH1_0: AuthFlowType: AUTH_TYPE_OAUTH1_0
    title: AuthFlowType enumerates the type of auth
  ModelInstanceTask:
    type: string
    enum:
    - TASK_UNSPECIFIED
    - TASK_CLASSIFICATION
    - TASK_DETECTION
    default: TASK_UNSPECIFIED
    description: |-
      - TASK_UNSPECIFIED: Task: UNSPECIFIED
       - TASK_CLASSIFICATION: Task: CLASSIFICATION
       - TASK_DETECTION: Task: DETECTION
    title: Task enumerates the task type of a model instance
  ModelVisibility:
    type: string
    enum:
    - VISIBILITY_UNSPECIFIED
    - VISIBILITY_PRIVATE
    - VISIBILITY_PUBLIC
    default: VISIBILITY_UNSPECIFIED
    description: |-
      - VISIBILITY_UNSPECIFIED: Visibility: UNSPECIFIED, equivalent to PRIVATE.
       - VISIBILITY_PRIVATE: Visibility: PRIVATE
       - VISIBILITY_PUBLIC: Visibility: PUBLIC
    title: Model visibility including public or private
  PipelineMode:
    type: string
    enum:
    - MODE_UNSPECIFIED
    - MODE_SYNC
    - MODE_ASYNC
    default: MODE_UNSPECIFIED
    description: |-
      - MODE_UNSPECIFIED: Mode: UNSPECIFIED
       - MODE_SYNC: Mode: SYNC
       - MODE_ASYNC: Mode: ASYNC
    title: Mode enumerates the pipeline modes
  SpecSupportedDestinationSyncModes:
    type: string
    enum:
    - SUPPORTED_DESTINATION_SYNC_MODES_UNSPECIFIED
    - SUPPORTED_DESTINATION_SYNC_MODES_APPEND
    - SUPPORTED_DESTINATION_SYNC_MODES_OVERWRITE
    - SUPPORTED_DESTINATION_SYNC_MODES_APPEND_DEDUP
    default: SUPPORTED_DESTINATION_SYNC_MODES_UNSPECIFIED
    description: |-
      - SUPPORTED_DESTINATION_SYNC_MODES_UNSPECIFIED: SupportedDestinationSyncModes: DESTINATION_SYNC_MODE_UNSPECIFIED
       - SUPPORTED_DESTINATION_SYNC_MODES_APPEND: SupportedDestinationSyncModes: DESTINATION_SYNC_MODE_APPEND
       - SUPPORTED_DESTINATION_SYNC_MODES_OVERWRITE: SupportedDestinationSyncModes: DESTINATION_SYNC_MODE_OVERWRITE
       - SUPPORTED_DESTINATION_SYNC_MODES_APPEND_DEDUP: SupportedDestinationSyncModes: DESTINATION_SYNC_MODE_APPEND_DEDUP
    title: SupportedDestinationSyncMode enumerates destination sync mode
  instillconnectorv1alphaHealthCheckRequest:
    type: object
    properties:
      service:
        type: string
        title: Service name to check for its readiness status
    title: HealthCheckRequest represents a request to health check a service
  instillconnectorv1alphaHealthCheckResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/instillconnectorv1alphaHealthCheckResponseServingStatus'
        title: Status is the instance of the enum type ServingStatus
    title: HealthCheckResponse represents a response for a service heath status
  instillconnectorv1alphaHealthCheckResponseServingStatus:
    type: string
    enum:
    - SERVING_STATUS_UNSPECIFIED
    - SERVING_STATUS_SERVING
    - SERVING_STATUS_NOT_SERVING
    default: SERVING_STATUS_UNSPECIFIED
    description: |-
      - SERVING_STATUS_UNSPECIFIED: Serving status: UNSPECIFIED
       - SERVING_STATUS_SERVING: Serving status: SERVING
       - SERVING_STATUS_NOT_SERVING: Serving status: NOT SERVING
    title: ServingStatus enumerates the status of a queried service
  instillconnectorv1alphaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/instillconnectorv1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  instillconnectorv1alphaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/instillconnectorv1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  instillconnectorv1alphaView:
    type: string
    enum:
    - VIEW_UNSPECIFIED
    - VIEW_BASIC
    - VIEW_FULL
    default: VIEW_UNSPECIFIED
    description: |-
      - VIEW_UNSPECIFIED: View: UNSPECIFIED
       - VIEW_BASIC: View: BASIC
       - VIEW_FULL: View: FULL
    title: View enumerates the definition views
  instillmgmtv1alphaHealthCheckRequest:
    type: object
    properties:
      service:
        type: string
        title: Service name to check for its readiness status
    title: HealthCheckRequest represents a request to health check a service
  instillmgmtv1alphaHealthCheckResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/instillmgmtv1alphaHealthCheckResponseServingStatus'
        title: Status is the instance of the enum type ServingStatus
    title: HealthCheckResponse represents a response for a service heath status
  instillmgmtv1alphaHealthCheckResponseServingStatus:
    type: string
    enum:
    - SERVING_STATUS_UNSPECIFIED
    - SERVING_STATUS_SERVING
    - SERVING_STATUS_NOT_SERVING
    default: SERVING_STATUS_UNSPECIFIED
    description: |-
      - SERVING_STATUS_UNSPECIFIED: Serving status: UNSPECIFIED
       - SERVING_STATUS_SERVING: Serving status: SERVING
       - SERVING_STATUS_NOT_SERVING: Serving status: NOT SERVING
    title: ServingStatus enumerates the status of a queried service
  instillmgmtv1alphaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/instillmgmtv1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  instillmgmtv1alphaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/instillmgmtv1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  instillmodelv1alphaHealthCheckRequest:
    type: object
    properties:
      service:
        type: string
        title: Service name to check for its readiness status
    title: HealthCheckRequest represents a request to health check a service
  instillmodelv1alphaHealthCheckResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/instillmodelv1alphaHealthCheckResponseServingStatus'
        title: Status is the instance of the enum type ServingStatus
    title: HealthCheckResponse represents a response for a service heath status
  instillmodelv1alphaHealthCheckResponseServingStatus:
    type: string
    enum:
    - SERVING_STATUS_UNSPECIFIED
    - SERVING_STATUS_SERVING
    - SERVING_STATUS_NOT_SERVING
    default: SERVING_STATUS_UNSPECIFIED
    description: |-
      - SERVING_STATUS_UNSPECIFIED: Serving status: UNSPECIFIED
       - SERVING_STATUS_SERVING: Serving status: SERVING
       - SERVING_STATUS_NOT_SERVING: Serving status: NOT SERVING
    title: ServingStatus enumerates the status of a queried service
  instillmodelv1alphaInput:
    type: object
    properties:
      image_url:
        type: string
        title: Image type URL
      image_base64:
        type: string
        title: Image type base64
    title: Input represents the input to trigger a model instance
  instillmodelv1alphaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/instillmodelv1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  instillmodelv1alphaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/instillmodelv1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  instillmodelv1alphaView:
    type: string
    enum:
    - VIEW_UNSPECIFIED
    - VIEW_BASIC
    - VIEW_FULL
    default: VIEW_UNSPECIFIED
    description: |-
      View represents a view of any resource. The resource view is implemented by
      adding a parameter to the method request which allows the client to specify
      which view of the resource it wants to receive in the response.

       - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
       - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
       - VIEW_FULL: View: FULL, full representation of the resource
  instillpipelinev1alphaHealthCheckRequest:
    type: object
    properties:
      service:
        type: string
        title: Service name to check for its readiness status
    title: HealthCheckRequest represents a request to health check a service
  instillpipelinev1alphaHealthCheckResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/instillpipelinev1alphaHealthCheckResponseServingStatus'
        title: Status is the instance of the enum type ServingStatus
    title: HealthCheckResponse represents a response for a service heath status
  instillpipelinev1alphaHealthCheckResponseServingStatus:
    type: string
    enum:
    - SERVING_STATUS_UNSPECIFIED
    - SERVING_STATUS_SERVING
    - SERVING_STATUS_NOT_SERVING
    default: SERVING_STATUS_UNSPECIFIED
    description: |-
      - SERVING_STATUS_UNSPECIFIED: Serving status: UNSPECIFIED
       - SERVING_STATUS_SERVING: Serving status: SERVING
       - SERVING_STATUS_NOT_SERVING: Serving status: NOT SERVING
    title: ServingStatus enumerates the status of a queried service
  instillpipelinev1alphaInput:
    type: object
    properties:
      image_url:
        type: string
        title: Image type URL
      image_base64:
        type: string
        title: Image type base64
    title: Input represents the input to a pipeline
  instillpipelinev1alphaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/instillpipelinev1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  instillpipelinev1alphaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/instillpipelinev1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  instillpipelinev1alphaView:
    type: string
    enum:
    - VIEW_UNSPECIFIED
    - VIEW_BASIC
    - VIEW_FULL
    default: VIEW_UNSPECIFIED
    description: |-
      View represents a view of any resource. The resource view is implemented by
      adding a parameter to the method request which allows the client to specify
      which view of the resource it wants to receive in the response.

       - VIEW_UNSPECIFIED: View: UNSPECIFIED
       - VIEW_BASIC: View: BASIC
       - VIEW_FULL: View: FULL
  instillusagev1alphaHealthCheckRequest:
    type: object
    properties:
      service:
        type: string
        title: Service name to check for its readiness status
    title: HealthCheckRequest represents a request to health check a service
  instillusagev1alphaHealthCheckResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/instillusagev1alphaHealthCheckResponseServingStatus'
        title: Status is the instance of the enum type ServingStatus
    title: HealthCheckResponse represents a response for a service heath status
  instillusagev1alphaHealthCheckResponseServingStatus:
    type: string
    enum:
    - SERVING_STATUS_UNSPECIFIED
    - SERVING_STATUS_SERVING
    - SERVING_STATUS_NOT_SERVING
    default: SERVING_STATUS_UNSPECIFIED
    description: |-
      - SERVING_STATUS_UNSPECIFIED: Serving status: UNSPECIFIED
       - SERVING_STATUS_SERVING: Serving status: SERVING
       - SERVING_STATUS_NOT_SERVING: Serving status: NOT SERVING
    title: ServingStatus enumerates the status of a queried service
  instillusagev1alphaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/instillusagev1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  instillusagev1alphaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/instillusagev1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  protobufNullValue:
    type: string
    enum:
    - NULL_VALUE
    default: NULL_VALUE
    description: |-
      `NullValue` is a singleton enumeration to represent the null value for the
      `Value` type union.

       The JSON representation for `NullValue` is JSON `null`.

       - NULL_VALUE: Null value.
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          $ref: '#/definitions/protobufAny'
  typeDate:
    type: object
    properties:
      year:
        type: integer
        format: int32
        description: |-
          Year of the date. Must be from 1 to 9999, or 0 to specify a date without
          a year.
      month:
        type: integer
        format: int32
        description: |-
          Month of a year. Must be from 1 to 12, or 0 to specify a year without a
          month and day.
      day:
        type: integer
        format: int32
        description: |-
          Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
          to specify a year by itself or a year and month where the day isn't
          significant.
    description: |-
      * A full date, with non-zero year, month, and day values
      * A month and day value, with a zero year, such as an anniversary
      * A year on its own, with zero month and day values
      * A year and month value, with a zero day, such as a credit card expiration
      date

      Related types are [google.type.TimeOfDay][google.type.TimeOfDay] and
      `google.protobuf.Timestamp`.
    title: |-
      Represents a whole or partial calendar date, such as a birthday. The time of
      day and time zone are either specified elsewhere or are insignificant. The
      date is relative to the Gregorian Calendar. This can represent one of the
      following:
  v1alphaActivatePipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1alphaPipeline'
        title: A pipeline resource
    title: ActivatePipelineResponse represents an activated pipeline
  v1alphaAdvancedAuth:
    type: object
    properties:
      auth_flow_type:
        $ref: '#/definitions/AdvancedAuthAuthFlowType'
        title: AdvancedAuth auth flow type
      predicate_key:
        type: array
        items:
          type: string
        title: |-
          AdvancedAuth predicate key, i.e., the JSON Path to a field in the
          connectorSpecification that should exist for the advanced auth to be
          applicable
      predicate_value:
        type: string
        title: |-
          AdvancedAuth predicate value, i.e., the value of the predicate key fields
          for the advanced auth to be applicable
      oauth_config_specification:
        $ref: '#/definitions/v1alphaOauthConfigSpecification'
        title: OauthConfigSpecification represents OAuth config specification
    description: |-
      Additional and optional specification object to describe what an 'advanced'
      Auth flow would need to function.
      - A connector should be able to fully function with the configuration as
      described by the ConnectorSpecification in a 'basic' mode.
      - The 'advanced' mode provides easier UX for the user with UI improvements
      and automations. However, this requires further setup on the server side by
      instance or workspace admins beforehand. The trade-off is that the user does
      not have to provide as many technical inputs anymore and the auth process is
      faster and easier to complete.
  v1alphaConnectionType:
    type: string
    enum:
    - CONNECTION_TYPE_UNSPECIFIED
    - CONNECTION_TYPE_DIRECTNESS
    - CONNECTION_TYPE_API
    - CONNECTION_TYPE_FILE
    - CONNECTION_TYPE_DATABASE
    - CONNECTION_TYPE_CUSTOM
    default: CONNECTION_TYPE_UNSPECIFIED
    description: |-
      - CONNECTION_TYPE_UNSPECIFIED: ConnectionType: UNSPECIFIED
       - CONNECTION_TYPE_DIRECTNESS: ConnectionType: DIRECTNESS
       - CONNECTION_TYPE_API: ConnectionType: API
       - CONNECTION_TYPE_FILE: ConnectionType: FILE
       - CONNECTION_TYPE_DATABASE: ConnectionType: DATABASE
       - CONNECTION_TYPE_CUSTOM: ConnectionType: CUSTOM
    title: ConnectionType enumerates a connection type
  v1alphaConnector:
    type: object
    properties:
      description:
        type: string
        title: Connector description
      configuration:
        type: string
        title: Connector configuration in JSON string
        required:
        - configuration
      tombstone:
        type: boolean
        title: Connector tombstone
        readOnly: true
      user:
        type: string
        description: The resource name of a user, e.g., "users/local-user".
        readOnly: true
      org:
        type: string
        title: The resource name of an organization
        readOnly: true
      create_time:
        type: string
        format: date-time
        title: Connector creation time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: Connector update time
        readOnly: true
    title: Connector represents a connector data model
    required:
    - configuration
  v1alphaConnectorDefinition:
    type: object
    properties:
      title:
        type: string
        title: ConnectorDefinition title
        readOnly: true
      docker_repository:
        type: string
        title: ConnectorDefinition Docker repository
        readOnly: true
      docker_image_tag:
        type: string
        title: ConnectorDefinition Docker image tag
        readOnly: true
      documentation_url:
        type: string
        title: ConnectorDefinition documentation URL
        readOnly: true
      icon:
        type: string
        title: ConnectorDefinition icon
        readOnly: true
      connection_type:
        $ref: '#/definitions/v1alphaConnectionType'
        title: ConnectorDefinition connection type
      spec:
        $ref: '#/definitions/v1alphaSpec'
        title: ConnectorDefinition spec
      tombstone:
        type: boolean
        title: |-
          ConnectorDefinition tombstone, i.e., if not set or false, the
          configuration is active, or otherwise, if true, this configuration is
          permanently off
        readOnly: true
      public:
        type: boolean
        title: |-
          ConnectorDefinition public flag, i.e., true if this connector
          definition is available to all workspaces
        readOnly: true
      custom:
        type: boolean
        title: |-
          ConnectorDefinition custom flag, i.e., whether this is a custom
          connector definition
        readOnly: true
      release_stage:
        $ref: '#/definitions/v1alphaReleaseStage'
        title: ConnectorDefinition release stage
      release_date:
        $ref: '#/definitions/typeDate'
        description: |-
          ConnectorDefinition release date, i.e., the date when this connector
          was first released, in yyyy-mm-dd format.
      resource_requirements:
        type: object
        title: ConnectorDefinition resource requirements
        readOnly: true
      create_time:
        type: string
        format: date-time
        title: ConnectorDefinition creation time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: ConnectorDefinition update time
        readOnly: true
    title: ConnectorDefinition represents the connector definition data model
  v1alphaCreateDestinationConnectorResponse:
    type: object
    properties:
      destination_connector:
        $ref: '#/definitions/v1alphaDestinationConnector'
        title: DestinationConnector resource
    title: |-
      CreateDestinationConnectorResponse represents a response for a
      DestinationConnector resource
  v1alphaCreateModelBinaryFileUploadResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: The created model
    title: |-
      CreateModelBinaryFileUploadResponse represents a response for a model
      instance
  v1alphaCreateModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: The created model
    title: CreateModelResponse represents a response for a model
  v1alphaCreatePipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1alphaPipeline'
        title: The created pipeline resource
    title: CreatePipelineResponse represents a response for a pipeline resource
  v1alphaCreateSessionResponse:
    type: object
    properties:
      session:
        $ref: '#/definitions/v1alphaSession'
        title: A session resource
    title: CreateSessionResponse represents a response for a session response
  v1alphaCreateSourceConnectorResponse:
    type: object
    properties:
      source_connector:
        $ref: '#/definitions/v1alphaSourceConnector'
        title: SourceConnector resource
    title: |-
      CreateSourceConnectorResponse represents a response for a
      SourceConnector resource
  v1alphaCreateUserResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUser'
        title: A user resource
    title: CreateUserResponse represents a response for a user response
  v1alphaDeactivatePipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1alphaPipeline'
        title: A pipeline resource
    title: DeactivatePipelineResponse represents an inactivated pipeline
  v1alphaDeleteDestinationConnectorResponse:
    type: object
    title: DeleteDestinationConnectorResponse represents an empty response
  v1alphaDeleteModelResponse:
    type: object
    title: DeleteModelResponse represents an empty response
  v1alphaDeletePipelineResponse:
    type: object
    title: DeletePipelineResponse represents an empty response
  v1alphaDeleteSourceConnectorResponse:
    type: object
    title: DeleteSourceConnectorResponse represents an empty response
  v1alphaDeleteUserResponse:
    type: object
    title: DeleteUserResponse represents an empty response
  v1alphaDeployModelInstanceResponse:
    type: object
    properties:
      instance:
        $ref: '#/definitions/v1alphaModelInstance'
        title: Deployed model instance
    title: |-
      DeployModelInstanceResponse represents a response for a deployed model
      instance
      TODO: should use [Long-running operations](https://google.aip.dev/151)
  v1alphaDestinationConnector:
    type: object
    properties:
      name:
        type: string
        title: |-
          DestinationConnector resource name. It must have the format of
          "source-connectors/*"
        readOnly: true
      uid:
        type: string
        title: DestinationConnector UUID
        readOnly: true
      id:
        type: string
        description: |-
          DestinationConnector resource ID (the last segment of the resource name)
          used to construct the resource name. This conforms to RFC-1034, which
          restricts to letters, numbers, and hyphen, with the first character a
          letter, the last a letter or a number, and a 63 character maximum.
      destination_connector_definition:
        type: string
        title: |-
          Connector Definition resource (e.g. SourceDefinition or Destination
          Destination)
      connector:
        $ref: '#/definitions/v1alphaConnector'
        title: DestinationConnector's connector data structure
    title: DestinationConnector represents a destination connector resource
  v1alphaDestinationConnectorDefinition:
    type: object
    properties:
      name:
        type: string
        title: |-
          DestinationConnectorDefinition resource name. It must have the format of
          "connector-definitions/*"
        readOnly: true
      uid:
        type: string
        title: DestinationConnectorDefinition UUID
        readOnly: true
      id:
        type: string
        description: |-
          DestinationConnectorDefinition resource ID (the last segment of the
          resource name) used to construct the resource name. This conforms to
          RFC-1034, which restricts to letters, numbers, and hyphen, with the first
          character a letter, the last a letter or a number, and a 63 character
          maximum.
      connector_definition:
        $ref: '#/definitions/v1alphaConnectorDefinition'
        title: DestinationConnectorDefinition connector definition
    title: |-
      DestinationConnectorDefinition represents the destination connector
      definition resource
  v1alphaGetDestinationConnectorDefinitionResponse:
    type: object
    properties:
      destination_connector_definition:
        $ref: '#/definitions/v1alphaDestinationConnectorDefinition'
        title: A DestinationConnectorDefinition resource
    title: |-
      GetDestinationConnectorDefinitionResponse represents a
      DestinationConnectorDefinition response
  v1alphaGetDestinationConnectorResponse:
    type: object
    properties:
      destination_connector:
        $ref: '#/definitions/v1alphaDestinationConnector'
        title: DestinationConnector resource
    title: |-
      GetDestinationConnectorResponse represents a response for a
      DestinationConnector resource
  v1alphaGetModelDefinitionResponse:
    type: object
    properties:
      model_definition:
        $ref: '#/definitions/v1alphaModelDefinition'
        title: A model definition instance
    title: GetModelDefinitionResponse represents a response for a model definition
  v1alphaGetModelInstanceCardResponse:
    type: object
    properties:
      readme:
        $ref: '#/definitions/v1alphaModelInstanceCard'
        title: Retrieved model instance card
    title: |-
      GetModelInstanceCardResponse represents a response to fetch a model
      instance's README card
  v1alphaGetModelInstanceResponse:
    type: object
    properties:
      instance:
        $ref: '#/definitions/v1alphaModelInstance'
        title: Retrieved model instance
    title: GetModelInstanceResponse represents a response for a model instance
  v1alphaGetModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: The retrieved model
    title: GetModelResponse represents a response for a model
  v1alphaGetPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1alphaPipeline'
        title: A pipeline resource
    title: GetPipelineResponse represents a response for a pipeline resource
  v1alphaGetSourceConnectorDefinitionResponse:
    type: object
    properties:
      source_connector_definition:
        $ref: '#/definitions/v1alphaSourceConnectorDefinition'
        title: A SourceConnectorDefinition resource
    title: |-
      GetSourceConnectorDefinitionResponse represents a SourceConnectorDefinition
      response
  v1alphaGetSourceConnectorResponse:
    type: object
    properties:
      source_connector:
        $ref: '#/definitions/v1alphaSourceConnector'
        title: SourceConnector resource
    title: |-
      GetSourceConnectorResponse represents a response for a
      SourceConnector resource
  v1alphaGetUserResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUser'
        title: A user resource
    title: GetUserResponse represents a response for a user resource
  v1alphaListDestinationConnectorDefinitionResponse:
    type: object
    properties:
      destination_connector_definitions:
        type: array
        items:
          $ref: '#/definitions/v1alphaDestinationConnectorDefinition'
        title: A list of DestinationConnectorDefinition resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: string
        format: int64
        title: Total count of DestinationConnectorDefinition resources
    title: |-
      ListDestinationConnectorDefinitionResponse represents a response for a list
      of DestinationConnectorDefinitions
  v1alphaListDestinationConnectorResponse:
    type: object
    properties:
      destination_connectors:
        type: array
        items:
          $ref: '#/definitions/v1alphaDestinationConnector'
        title: A list of DestinationConnector resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: string
        format: int64
        title: Total count of connector resources
    title: |-
      ListDestinationConnectorResponse represents a response for a list of
      DestinationConnector resources
  v1alphaListModelDefinitionResponse:
    type: object
    properties:
      model_definitions:
        type: array
        items:
          $ref: '#/definitions/v1alphaModelDefinition'
        title: a list of ModelDefinition instances
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: string
        format: int64
        title: Total count of model definitions
    title: |-
      ListModelDefinitionResponse represents a response to list all supported model
      definitions
  v1alphaListModelInstanceResponse:
    type: object
    properties:
      instances:
        type: array
        items:
          $ref: '#/definitions/v1alphaModelInstance'
        title: a list of Model instances
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: string
        format: int64
        title: Total count of model instances
    title: ListModelInstanceResponse represents a response for a list of model instances
  v1alphaListModelResponse:
    type: object
    properties:
      models:
        type: array
        items:
          $ref: '#/definitions/v1alphaModel'
        title: a list of Models
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: string
        format: int64
        title: Total count of models
    title: ListModelResponse represents a response for a list of models
  v1alphaListPipelineResponse:
    type: object
    properties:
      pipelines:
        type: array
        items:
          $ref: '#/definitions/v1alphaPipeline'
        title: A list of pipeline resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: string
        format: int64
        title: Total count of pipeline resources
    title: ListPipelineResponse represents a response for a list of pipelines
  v1alphaListSourceConnectorDefinitionResponse:
    type: object
    properties:
      source_connector_definitions:
        type: array
        items:
          $ref: '#/definitions/v1alphaSourceConnectorDefinition'
        title: A list of SourceConnectorDefinition resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: string
        format: int64
        title: Total count of SourceConnectorDefinition resources
    title: |-
      ListSourceConnectorDefinitionResponse represents a response for a list of
      SourceConnectorDefinitions
  v1alphaListSourceConnectorResponse:
    type: object
    properties:
      source_connectors:
        type: array
        items:
          $ref: '#/definitions/v1alphaSourceConnector'
        title: A list of SourceConnector resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: string
        format: int64
        title: Total count of connector resources
    title: |-
      ListSourceConnectorResponse represents a response for a list of
      SourceConnector resources
  v1alphaListUserResponse:
    type: object
    properties:
      users:
        type: array
        items:
          $ref: '#/definitions/v1alphaUser'
        title: A list of users
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: string
        format: int64
        title: Total count of users
    title: ListUserResponse represents a response for a list of users
  v1alphaLookUpDestinationConnectorResponse:
    type: object
    properties:
      destination_connector:
        $ref: '#/definitions/v1alphaDestinationConnector'
        title: DestinationConnector resource
    title: |-
      LookUpDestinationConnectorResponse represents a response for a destination
      connector
  v1alphaLookUpModelInstanceResponse:
    type: object
    properties:
      instance:
        $ref: '#/definitions/v1alphaModelInstance'
        title: A model instance
    title: LookUpModelInstanceResponse represents a response for a model instance
  v1alphaLookUpModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: A model resource
    title: LookUpModelResponse represents a response for a model instance
  v1alphaLookUpPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1alphaPipeline'
        title: A pipeline resource
    title: LookUpPipelineResponse represents a response for a pipeline resource
  v1alphaLookUpSourceConnectorResponse:
    type: object
    properties:
      source_connector:
        $ref: '#/definitions/v1alphaSourceConnector'
        title: SourceConnector resource
    title: LookUpSourceConnectorResponse represents a response for a source connector
  v1alphaLookUpUserResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUser'
        title: A user resource
    title: LookUpUserResponse represents a response for a user resource
  v1alphaModel:
    type: object
    properties:
      name:
        type: string
        title: |-
          Resource name. It must have the format of "models/{model}".
          For example: "models/yolov4"
        readOnly: true
      uid:
        type: string
        title: Model ID in UUIDv4
        readOnly: true
      id:
        type: string
        description: |-
          Resource ID (the last segment of the resource name) used to construct the
          resource name. This conforms to RFC-1034, which restricts to letters,
          numbers, and hyphen, with the first character a letter, the last a letter
          or a number, and a 63 character maximum.
      description:
        type: string
        title: Model description
      model_definition:
        type: string
        title: Model definition resource name
      configuration:
        type: string
        title: |-
          Model configuration represents the configuration JSON string that has been
          validated using the `model_spec` JSON schema of a ModelDefinition
      visibility:
        $ref: '#/definitions/ModelVisibility'
        title: Model visibility including public or private
      user:
        type: string
        description: The resource name of a user, e.g., "users/local-user".
        readOnly: true
      org:
        type: string
        title: The resource name of an organization
        readOnly: true
      create_time:
        type: string
        format: date-time
        title: Model create time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: Model update time
        readOnly: true
    title: Model represents a model
  v1alphaModelDefinition:
    type: object
    properties:
      name:
        type: string
        title: |-
          ModelDefinition resource name. It must have the format of
          "model-definitions/{model-definition}"
        readOnly: true
      uid:
        type: string
        title: ModelDefinition ID in UUIDv4
        readOnly: true
      id:
        type: string
        description: |-
          ModelDefinition resource ID (the last segment of the resource name) used to
          construct the resource name.
        readOnly: true
      title:
        type: string
        title: ModelDefinition display official title
        readOnly: true
      documentation_url:
        type: string
        title: ModelDefinition documentation url
        readOnly: true
      icon:
        type: string
        title: ModelDefinition icon
        readOnly: true
      model_spec:
        type: object
        description: |-
          ModelDefinition model specification represents the JSON schema used to
          validate the JSON configurations of a model created from a specific model
          source. Must be a valid JSON that includes what fields are needed to
          create/display a model.
        readOnly: true
      model_instance_spec:
        type: object
        description: |-
          ModelDefinition model instance specification represents the JSON schema
          used to validate the JSON configurations of a model instance from a
          specific model source. Must be a valid JSON that includes what fields are
          needed to display a model instance.
        required:
        - model_instance_spec
      create_time:
        type: string
        format: date-time
        title: ModelDefinition create time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: ModelDefinition update time
        readOnly: true
    title: |-
      /////////////////////////////////////////////////////////////////
      ModelDefinition represents the definition of a model
    required:
    - model_instance_spec
  v1alphaModelInstance:
    type: object
    properties:
      name:
        type: string
        title: |-
          Resource name. It must have the format of
          "models/{model}/instances/{instance}"
        readOnly: true
      uid:
        type: string
        title: Model instance ID in UUIDv4
        readOnly: true
      id:
        type: string
        description: |-
          Model instance ID (the last segment of the resource name), used to
          construct the resource name. This conforms to RFC-1034, which restricts to
          letters, numbers, and hyphen, with the first character a letter, the last a
          letter or a number, and a 63 character maximum.
        readOnly: true
      state:
        $ref: '#/definitions/v1alphaModelInstanceState'
        title: Model instance state
      task:
        $ref: '#/definitions/ModelInstanceTask'
        title: Model instance task
      model_definition:
        type: string
        title: Model definition resource name
        readOnly: true
      configuration:
        type: string
        title: |-
          Model instance configuration represents the configuration JSON string that
          has been validated using the `model_instance_spec` JSON schema of a
          ModelDefinition
        readOnly: true
      create_time:
        type: string
        format: date-time
        title: Model instance create time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: Model instance update time
        readOnly: true
    title: ModelVersion represents one deployable instance of a model
  v1alphaModelInstanceCard:
    type: object
    properties:
      name:
        type: string
        title: |-
          Resource name. It must have the format of
          "models/{model}/instances/{instance}/readme"
        readOnly: true
      size:
        type: integer
        format: int32
        title: Size of the file
        readOnly: true
      type:
        type: string
        description: Type of the resource. Fixed to "file".
        readOnly: true
      contents:
        type: string
        format: byte
        title: Contents of the README file in bytes and base64 format
        readOnly: true
      encoding:
        type: string
        description: Encoding type of the contents. Fixed to "base64".
        readOnly: true
    description: |-
      ModelInstanceCard represents the README card for a model instance. There
      exists one one and exactly one README card per model instance.
  v1alphaModelInstanceState:
    type: string
    enum:
    - STATE_UNSPECIFIED
    - STATE_OFFLINE
    - STATE_ONLINE
    - STATE_ERROR
    default: STATE_UNSPECIFIED
    description: |-
      - STATE_UNSPECIFIED: State: UNSPECIFIED
       - STATE_OFFLINE: State: OFFLINE
       - STATE_ONLINE: State: ONLINE
       - STATE_ERROR: State: ERROR
    title: State enumerates the lifecycling state of a model instance
  v1alphaOauthConfigSpecification:
    type: object
    properties:
      oauth_user_input_from_connector_config_specification:
        type: object
        description: |-
          OAuth specific blob. This is a Json Schema used to validate Json
          configurations used as input to OAuth. Must be a valid non-nested JSON that
          refers to properties from ConnectorSpecification.connectionSpecification
          using special annotation 'path_in_connector_config'.
          These are input values the user is entering through the UI to authenticate
          to the connector, that might also shared as inputs for syncing data via the
          connector.

          Examples:

          if no connector values is shared during oauth flow,
          oauth_user_input_from_connector_config_specification=[] if connector values
          such as 'app_id' inside the top level are used to generate the API url for
          the oauth flow,
            oauth_user_input_from_connector_config_specification={
              app_id: {
                type: string
                path_in_connector_config: ['app_id']
              }
            }
          if connector values such as 'info.app_id' nested inside another object are
          used to generate the API url for the oauth flow,
           oauth_user_input_from_connector_config_specification={
             app_id: {
               type: string
               path_in_connector_config: ['info', 'app_id']
             }
           }
        readOnly: true
      complete_oauth_output_specification:
        type: object
        description: |-
          Examples:

              complete_oauth_output_specification={
                refresh_token: {
                  type: string,
                  path_in_connector_config: ['credentials', 'refresh_token']
                }
              }
        title: |-
          OAuth specific blob. This is a Json Schema used to validate Json
          configurations produced by the OAuth flows as they are returned by the
          distant OAuth APIs. Must be a valid JSON describing the fields to merge
          back to `ConnectorSpecification.connectionSpecification`. For each field, a
          special annotation `path_in_connector_config` can be specified to determine
          where to merge it,
        readOnly: true
      complete_oauth_server_input_specification:
        type: object
        description: |-
          OAuth specific blob. This is a Json Schema used to validate Json
          configurations persisted as Airbyte Server configurations. Must be a valid
          non-nested JSON describing additional fields configured by the Airbyte
          Instance or Workspace Admins to be used by the server when completing an
          OAuth flow (typically exchanging an auth code for refresh token).

          Examples:

              complete_oauth_server_input_specification={
                client_id: {
                  type: string
                },
                client_secret: {
                  type: string
                }
              }
        readOnly: true
      complete_oauth_server_output_specification:
        type: object
        description: |-
          Examples:

                complete_oauth_server_output_specification={
                  client_id: {
                    type: string,
                    path_in_connector_config: ['credentials', 'client_id']
                  },
                  client_secret: {
                    type: string,
                    path_in_connector_config: ['credentials', 'client_secret']
                  }
                }
        title: |-
          OAuth specific blob. This is a Json Schema used to validate Json
          configurations persisted as Airbyte Server configurations that also need to
          be merged back into the connector configuration at runtime. This is a
          subset configuration of `complete_oauth_server_input_specification` that
          filters fields out to retain only the ones that are necessary for the
          connector to function with OAuth. (some fields could be used during oauth
          flows but not needed afterwards, therefore they would be listed in the
          `complete_oauth_server_input_specification` but not
          `complete_oauth_server_output_specification`) Must be a valid non-nested
          JSON describing additional fields configured by the Airbyte Instance or
          Workspace Admins to be used by the connector when using OAuth flow APIs.
          These fields are to be merged back to
          `ConnectorSpecification.connectionSpecification`. For each field, a special
          annotation `path_in_connector_config` can be specified to determine where
          to merge it,
        readOnly: true
    title: OauthConfigSpecification represents oauth config specification
  v1alphaOwnerType:
    type: string
    enum:
    - OWNER_TYPE_UNSPECIFIED
    - OWNER_TYPE_USER
    - OWNER_TYPE_ORGANIZATION
    default: OWNER_TYPE_UNSPECIFIED
    description: |-
      - OWNER_TYPE_UNSPECIFIED: OwnerType: UNSPECIFIED
       - OWNER_TYPE_USER: OwnerType: USER
       - OWNER_TYPE_ORGANIZATION: OwnerType: ORGANIZATION
    title: OwnerType enumerates the owner type of any resource
  v1alphaPipeline:
    type: object
    properties:
      name:
        type: string
        title: Pipeline resource name. It must have the format of "pipelines/*"
        readOnly: true
      uid:
        type: string
        title: Pipeline UUID
        readOnly: true
      id:
        type: string
        description: |-
          Pipeline resource ID (the last segment of the resource name) used to
          construct the resource name. This conforms to RFC-1034, which restricts to
          letters, numbers, and hyphen, with the first character a letter, the last a
          letter or a number, and a 63 character maximum.
      description:
        type: string
        title: Pipeline description
      recipe:
        $ref: '#/definitions/v1alphaRecipe'
        title: Pipeline recipe
      mode:
        $ref: '#/definitions/PipelineMode'
        title: Pipeline mode
      state:
        $ref: '#/definitions/v1alphaPipelineState'
        title: Pipeline state
      user:
        type: string
        description: The resource name of a user, e.g., "users/local-user".
        readOnly: true
      org:
        type: string
        title: The resource name of an organization
        readOnly: true
      create_time:
        type: string
        format: date-time
        title: Pipeline creation time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: Pipeline update time
        readOnly: true
    title: Pipeline represents the content of a pipeline
  v1alphaPipelineState:
    type: string
    enum:
    - STATE_UNSPECIFIED
    - STATE_INACTIVE
    - STATE_ACTIVE
    - STATE_ERROR
    default: STATE_UNSPECIFIED
    description: |-
      - STATE_UNSPECIFIED: State: UNSPECIFIED
       - STATE_INACTIVE: State INACTIVE indicates the pipeline is inactive
       - STATE_ACTIVE: State ACTIVE indicates the pipeline is active
       - STATE_ERROR: State ERROR indicates the pipeline has error
    title: State enumerates the state of a pipeline
  v1alphaPublishModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: Published model
    title: PublishModelResponse represents a response for the published model
  v1alphaRecipe:
    type: object
    properties:
      source:
        type: string
        title: A source connector resource
      destination:
        type: string
        title: A destination connector resource
      model_instances:
        type: array
        items:
          type: string
        title: A list of model instance resources
    title: Pipeline represents a pipeline recipe
  v1alphaReleaseStage:
    type: string
    enum:
    - RELEASE_STAGE_UNSPECIFIED
    - RELEASE_STAGE_ALPHA
    - RELEASE_STAGE_BETA
    - RELEASE_STAGE_GENERALLY_AVAILABLE
    - RELEASE_STAGE_CUSTOM
    default: RELEASE_STAGE_UNSPECIFIED
    description: |-
      - RELEASE_STAGE_UNSPECIFIED: ReleaseStage: UNSPECIFIED
       - RELEASE_STAGE_ALPHA: ReleaseStage: ALPHA
       - RELEASE_STAGE_BETA: ReleaseStage: BETA
       - RELEASE_STAGE_GENERALLY_AVAILABLE: ReleaseStage: GENERALLY_AVAILABLE
       - RELEASE_STAGE_CUSTOM: ReleaseStage: CUSTOM
    title: ReleaseStage enumerates the release stages
  v1alphaRenameDestinationConnectorResponse:
    type: object
    properties:
      destination_connector:
        $ref: '#/definitions/v1alphaDestinationConnector'
        title: A DestinationConnector resource
    title: |-
      RenameDestinationConnectorResponse represents a renamed DestinationConnector
      resource
  v1alphaRenameModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: Renamed model
    title: RenameModelResponse represents a response for a model
  v1alphaRenamePipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1alphaPipeline'
        title: A pipeline resource
    title: RenamePipelineResponse represents a renamed pipeline resource
  v1alphaRenameSourceConnectorResponse:
    type: object
    properties:
      source_connector:
        $ref: '#/definitions/v1alphaSourceConnector'
        title: A SourceConnector resource
    title: RenameSourceConnectorResponse represents a renamed SourceConnector resource
  v1alphaReport:
    type: object
    properties:
      permalink:
        type: string
        title: Permalink of a report. It must have the format of "reports/{uid}"
        readOnly: true
      uid:
        type: string
        title: Report ID in UUIDv4
        readOnly: true
      pow:
        type: string
        title: Pow
        required:
        - pow
      data:
        $ref: '#/definitions/v1alphaUsageData'
        title: Usage data
    title: |-
      Report represents a report to be sent to the server that includes the usage
      data of a session
    required:
    - pow
  v1alphaSendReportRequest:
    type: object
    properties:
      report:
        $ref: '#/definitions/v1alphaReport'
        title: A report resource to create
    title: SendReportRequest represents a request to send a usage report
  v1alphaSendReportResponse:
    type: object
    title: SendReportResponse represents an empty response
  v1alphaSession:
    type: object
    properties:
      permalink:
        type: string
        title: Permalink of a session. It must have the format of "sessons/{uid}"
        readOnly: true
      uid:
        type: string
        title: Session ID in UUIDv4
        readOnly: true
      cluster_id:
        type: string
        title: Cluster Identifier
      server_id:
        type: string
        title: Server Identifier
      token:
        type: string
        description: |-
          Token to send report. The token is generated by the server and sent to the
          client. Client needs to use the token to send report to the server.
    title: |-
      Session represents a unique session whenever a new instance of VDP gets
      started. The usage server returns a token for the given pair of identifiers
      (`cluster_id` and `server_id`) that should be used as part of the challenge
      when creating a report
  v1alphaSourceConnector:
    type: object
    properties:
      name:
        type: string
        title: |-
          SourceConnector resource name. It must have the format of
          "source-connectors/*"
        readOnly: true
      uid:
        type: string
        title: SourceConnector UUID
        readOnly: true
      id:
        type: string
        description: |-
          SourceConnector resource ID (the last segment of the resource name) used to
          construct the resource name. This conforms to RFC-1034, which restricts to
          letters, numbers, and hyphen, with the first character a letter, the last a
          letter or a number, and a 63 character maximum.
      source_connector_definition:
        type: string
        title: |-
          Connector Definition resource (e.g. SourceDefinition or Destination
          Destination)
      connector:
        $ref: '#/definitions/v1alphaConnector'
        title: SourceConnector's connector data structure
    title: SourceConnector represents a source connector resource
  v1alphaSourceConnectorDefinition:
    type: object
    properties:
      name:
        type: string
        title: |-
          SourceConnectorDefinition resource name. It must have the format of
          "connector-definitions/*"
        readOnly: true
      uid:
        type: string
        title: SourceConnectorDefinition UUID
        readOnly: true
      id:
        type: string
        description: |-
          SourceConnectorDefinition resource ID (the last segment of the resource
          name) used to construct the resource name. This conforms to RFC-1034, which
          restricts to letters, numbers, and hyphen, with the first character a
          letter, the last a letter or a number, and a 63 character maximum.
      connector_definition:
        $ref: '#/definitions/v1alphaConnectorDefinition'
        title: SourceConnectorDefinition connector definition
    title: SourceConnectorDefinition represents the source connector definition resource
  v1alphaSpec:
    type: object
    properties:
      documentation_url:
        type: string
        title: Spec documentation URL
        readOnly: true
      changelog_url:
        type: string
        title: Spec changelog URL
        readOnly: true
      connection_specification:
        type: object
        title: Spec connection specification
        required:
        - connection_specification
      supports_incremental:
        type: boolean
        title: |-
          Spec supports incremental flag, i.e., if the connector supports incremental
          mode or not
        readOnly: true
      supports_normalization:
        type: boolean
        title: |-
          Spec supports normalization flag, i.e., if the connector supports
          normalization or not
        readOnly: true
      supports_dbt:
        type: boolean
        title: Spec supports dbt flag, i.e., if the connector supports DBT or not
        readOnly: true
      supported_destination_sync_modes:
        type: array
        items:
          $ref: '#/definitions/SpecSupportedDestinationSyncModes'
        title: |-
          Spec destination sync mode, i.e., a list of destination sync modes
          supported by the connector
        readOnly: true
      advanced_auth:
        $ref: '#/definitions/v1alphaAdvancedAuth'
        title: |-
          Spec advanced auth, i.e., additional and optional specification object to
          describe what an 'advanced' Auth flow would need to function
    title: |-
      //////////////////////////////////
      Spec represents a spec data model
    required:
    - connection_specification
  v1alphaTriggerModelInstanceBinaryFileUploadResponse:
    type: object
    properties:
      output:
        type: object
        title: Output from a model
    title: |-
      TriggerModelInstanceBinaryFileUploadResponse represents a response for the
      output for triggering a model instance
  v1alphaTriggerModelInstanceResponse:
    type: object
    properties:
      output:
        type: object
        title: Output from a model
    title: |-
      TriggerModelInstanceResponse represents a response for the output for
      triggering a model instance
  v1alphaTriggerPipelineBinaryFileUploadResponse:
    type: object
    properties:
      output:
        type: object
        title: Output from a pipeline
    title: |-
      TriggerPipelineBinaryFileUploadResponse represents a response for the output
      of a pipeline
  v1alphaTriggerPipelineResponse:
    type: object
    properties:
      output:
        type: object
        title: Output from a pipeline
    title: TriggerPipelineResponse represents a response for the output of a pipeline
  v1alphaUndeployModelInstanceResponse:
    type: object
    properties:
      instance:
        $ref: '#/definitions/v1alphaModelInstance'
        title: Undeployed model instance
    title: |-
      UndeployModelInstanceResponse represents a response for a undeployed model
      instance
      TODO: should use [Long-running operations](https://google.aip.dev/151)
  v1alphaUnpublishModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: Unpublished model
    title: UnpublishModelResponse represents a response for the unpublished model
  v1alphaUpdateDestinationConnectorResponse:
    type: object
    properties:
      destination_connector:
        $ref: '#/definitions/v1alphaDestinationConnector'
        title: DestinationConnector resource
    title: |-
      UpdateDestinationConnectorResponse represents a response for a
      DestinationConnector resource
  v1alphaUpdateModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: The updated model
    title: UpdateModelResponse represents a response for a model
  v1alphaUpdatePipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1alphaPipeline'
        title: An updated pipeline resource
    title: UpdatePipelineResponse represents a response for a pipeline resource
  v1alphaUpdateSourceConnectorResponse:
    type: object
    properties:
      source_connector:
        $ref: '#/definitions/v1alphaSourceConnector'
        title: SourceConnector resource
    title: |-
      UpdateSourceConnectorResponse represents a response for a
      SourceConnector resource
  v1alphaUpdateUserResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUser'
        title: A user resource
    title: UpdateUserResponse represents a response for a user resource
  v1alphaUsageData:
    type: object
    properties:
      session:
        $ref: '#/definitions/v1alphaSession'
        title: Session
      version:
        type: string
        title: Version of the system
        required:
        - version
      arch:
        type: string
        title: Architecture of the system
        required:
        - arch
      os:
        type: string
        title: Operating system
        required:
        - os
      uptime:
        type: string
        format: int64
        title: Session service uptime
        required:
        - uptime
      time:
        type: string
        format: date-time
        title: Report time
        required:
        - time
    title: UsageData represents the usage data collected from a session
    required:
    - version
    - arch
    - os
    - uptime
    - time
  v1alphaUser:
    type: object
    properties:
      name:
        type: string
        description: |-
          Resource name. It must have the format of "users/*".
          For example: "users/local-user".
        readOnly: true
      uid:
        type: string
        title: User ID in UUIDv4
        readOnly: true
      email:
        type: string
        title: User email
      id:
        type: string
        description: |-
          Resource ID (the last segment of the resource name), also the user login
          username. This conforms to RFC-1034, which restricts to letters, numbers,
          and hyphen, with the first character a letter, the last a letter or a
          number, and a 63 character maximum.
      company_name:
        type: string
        title: User company name
      role:
        type: string
        title: |-
          User role
          Allowed roles:
          [ "manager", "ai-researcher", "ai-engineer", "data-engineer",
          "data-scientist",
            "analytics-engineer", "hobbyist"]
      usage_data_collection:
        type: boolean
        title: User usage data collection
        required:
        - usage_data_collection
      newsletter_subscription:
        type: boolean
        title: User newsletter subscription
        required:
        - newsletter_subscription
      type:
        $ref: '#/definitions/v1alphaOwnerType'
        title: 'Owner type: fixed to `OWNER_TYPE_USER`'
      create_time:
        type: string
        format: date-time
        title: User creation time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: User update time
        readOnly: true
    title: User represents the content of a user
    required:
    - usage_data_collection
    - newsletter_subscription
