swagger: "2.0"
info:
  title: Instill AI API
  description: Interface definitions for the Instill AI endpoints exposed over HTTP
  version: 0.4-beta
  contact:
    name: Instill AI
    url: https://github.com/instill-ai
    email: hello@instill.tech
  license:
    name: Elastic License 2.0 (ELv2)
    url: https://github.com/instill-ai/protobufs/blob/main/LICENSE
tags:
  - name: MgmtPublicService
    description: "\U0001F52E Core endpoints to manage user resources. The **base path** for this server is `core/` (e.g. `GET {protocol}://{host}/core/v1beta/users`)"
    externalDocs:
      description: More about Core
      url: https://github.com/instill-ai/core
  - name: PipelinePublicService
    description: "\U0001F4A7 VDP endpoints to manage pipeline resources. The **base path** for this server is `vdp/` (e.g. `GET {protocol}://{host}/vdp/v1beta/pipelines`)"
    externalDocs:
      description: More about VDP
      url: https://github.com/instill-ai/vdp
host: https://api.instill.tech
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1beta/{connector.name_1}:
    patch:
      summary: Update a connector owned by an organization.
      description: |-
        Updates an organization-owned connector.

        In REST requests, only the supplied connector fields will be taken into
        account when updating the resource.
      operationId: PipelinePublicService_UpdateOrganizationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaUpdateOrganizationConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: connector.name_1
          description: |-
            The name of the connector, defined by its ID.
            - Format: `connectors/{id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/connectors/[^/]+
        - name: connector
          description: The connector fields that will replace the existing ones.
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Connector UUID.
                readOnly: true
              id:
                type: string
                description: |-
                  Connector resource ID (used in `name` as the last segment). This conforms
                  to RFC-1034, which restricts to letters, numbers, and hyphen, with the
                  first character a letter, the last a letter or a number, and a 63
                  character maximum.
              connector_definition_name:
                type: string
                description: Connector definition that describes the connector configuration.
              type:
                $ref: '#/definitions/v1betaConnectorType'
                description: Connector type.
                readOnly: true
              description:
                type: string
                description: Connector description.
              configuration:
                type: object
                description: Connector configuration in JSON format.
              state:
                $ref: '#/definitions/v1betaConnectorState'
                description: Connector state.
                readOnly: true
              tombstone:
                type: boolean
                description: |-
                  Connector tombstone. If true, this configuration is permanently off.
                  Otherwise, the configuration is active.
                readOnly: true
              create_time:
                type: string
                format: date-time
                description: Connector creation time.
                readOnly: true
              update_time:
                type: string
                format: date-time
                description: Connector update time.
                readOnly: true
              visibility:
                $ref: '#/definitions/v1betaConnectorVisibility'
                description: Connector visibility.
                readOnly: true
              connector_definition:
                $ref: '#/definitions/v1betaConnectorDefinition'
                description: Embed content of the ConnectorDefinition.
                readOnly: true
              delete_time:
                type: string
                format: date-time
                description: Connector deletion time.
                readOnly: true
              owner_name:
                type: string
                description: Owner name.
                readOnly: true
              owner:
                type: object
                description: Owner details.
                readOnly: true
            title: The connector fields that will replace the existing ones.
            required:
              - configuration
      tags:
        - PipelinePublicService
  /v1beta/{connector.name}:
    patch:
      summary: Update a connector owned by a user.
      description: |-
        Updates a user-owned connector. The authebnticated user must be the parent
        of the connector.

        In REST requests, only the supplied connector fields will be taken into
        account when updating the resource.
      operationId: PipelinePublicService_UpdateUserConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaUpdateUserConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: connector.name
          description: |-
            The name of the connector, defined by its ID.
            - Format: `connectors/{id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connectors/[^/]+
        - name: connector
          description: The connector fields that will replace the existing ones.
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Connector UUID.
                readOnly: true
              id:
                type: string
                description: |-
                  Connector resource ID (used in `name` as the last segment). This conforms
                  to RFC-1034, which restricts to letters, numbers, and hyphen, with the
                  first character a letter, the last a letter or a number, and a 63
                  character maximum.
              connector_definition_name:
                type: string
                description: Connector definition that describes the connector configuration.
              type:
                $ref: '#/definitions/v1betaConnectorType'
                description: Connector type.
                readOnly: true
              description:
                type: string
                description: Connector description.
              configuration:
                type: object
                description: Connector configuration in JSON format.
              state:
                $ref: '#/definitions/v1betaConnectorState'
                description: Connector state.
                readOnly: true
              tombstone:
                type: boolean
                description: |-
                  Connector tombstone. If true, this configuration is permanently off.
                  Otherwise, the configuration is active.
                readOnly: true
              create_time:
                type: string
                format: date-time
                description: Connector creation time.
                readOnly: true
              update_time:
                type: string
                format: date-time
                description: Connector update time.
                readOnly: true
              visibility:
                $ref: '#/definitions/v1betaConnectorVisibility'
                description: Connector visibility.
                readOnly: true
              connector_definition:
                $ref: '#/definitions/v1betaConnectorDefinition'
                description: Embed content of the ConnectorDefinition.
                readOnly: true
              delete_time:
                type: string
                format: date-time
                description: Connector deletion time.
                readOnly: true
              owner_name:
                type: string
                description: Owner name.
                readOnly: true
              owner:
                type: object
                description: Owner details.
                readOnly: true
            title: The connector fields that will replace the existing ones.
            required:
              - configuration
      tags:
        - PipelinePublicService
  /v1beta/{connector_definition.name}:
    get:
      summary: Get connector definition
      description: Returns the details of a connector definition.
      operationId: PipelinePublicService_GetConnectorDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetConnectorDefinitionResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: connector_definition.name
          description: |-
            The resource name of the connector definition, which allows its access by ID.
            - Format: `connector-definitions/{id}`.
          in: path
          required: true
          type: string
          pattern: connector-definitions/[^/]+
        - name: view
          description: |-
            View allows clients to specify the desired resource view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
      tags:
        - PipelinePublicService
  /v1beta/{membership.name_1}:
    put:
      summary: Uppdate an organization membership
      description: Updates a user membership within an organization.
      operationId: MgmtPublicService_UpdateOrganizationMembership
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaUpdateOrganizationMembershipResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: membership.name_1
          description: |-
            The resource name of the membership, which allows its access by
            organization and user ID.
            - Format: `organizations/{organization.id}/memberships/{user.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/memberships/[^/]+
        - name: membership
          description: The membership fields to update.
          in: body
          required: true
          schema:
            type: object
            properties:
              role:
                type: string
                description: Role of the user in the organization.
              state:
                $ref: '#/definitions/v1betaMembershipState'
                description: State of the membership.
                readOnly: true
              user:
                $ref: '#/definitions/mgmtv1betaUser'
                description: User information.
                readOnly: true
              organization:
                $ref: '#/definitions/v1betaOrganization'
                description: Organization information.
                readOnly: true
            title: The membership fields to update.
            required:
              - role
        - name: update_mask
          description: |-
            The update mask specifies the subset of fields that should be modified.

            For more information about this field, see
            https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#field-mask.
          in: query
          required: true
          type: string
      tags:
        - MgmtPublicService
  /v1beta/{membership.name}:
    put:
      summary: Update a user membership
      description: Accesses and updates a user membership by parent and membership IDs.
      operationId: MgmtPublicService_UpdateUserMembership
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaUpdateUserMembershipResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: membership.name
          description: |-
            The resource name of the membership, which allows its access by user and
            organization ID.
            - Format: `users/{user.id}/memberships/{organization.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/memberships/[^/]+
        - name: membership
          description: The membership fields to update.
          in: body
          required: true
          schema:
            type: object
            properties:
              role:
                type: string
                description: Role of the user in the organization.
                readOnly: true
              state:
                $ref: '#/definitions/v1betaMembershipState'
                description: State of the membership.
              user:
                $ref: '#/definitions/mgmtv1betaUser'
                description: User information.
                readOnly: true
              organization:
                $ref: '#/definitions/v1betaOrganization'
                description: Organization information.
                readOnly: true
            title: The membership fields to update.
            required:
              - state
        - name: update_mask
          description: |-
            The update mask specifies the subset of fields that should be modified.

            For more information about this field, see
            https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#field-mask.
          in: query
          required: true
          type: string
      tags:
        - MgmtPublicService
  /v1beta/{name}:
    get:
      summary: Get the details of a long-running operation
      description: |-
        This method allows requesters to request the status and outcome of
        long-running operations such as asynchronous pipeline triggers.
      operationId: PipelinePublicService_GetOperation
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetOperationResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: |-
            The name of the operation resource. Asynchronous methods will contain this
            information in their response.
          in: path
          required: true
          type: string
          pattern: operations/[^/]+
      tags:
        - PipelinePublicService
  /v1beta/{operator_definition.name}:
    get:
      summary: Get operator definition
      description: Returns the details of an operator definition.
      operationId: PipelinePublicService_GetOperatorDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetOperatorDefinitionResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: operator_definition.name
          description: |-
            The resource name of the operator definition, which allows its access by ID.
            - Format: `operator-definitions/{id}`.
          in: path
          required: true
          type: string
          pattern: operator-definitions/[^/]+
        - name: view
          description: |-
            View allows clients to specify the desired resource view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
      tags:
        - PipelinePublicService
  /v1beta/{operator_definition.permalink}/lookUp:
    get:
      summary: Get a connector by UID
      description: Returns the details of a connector by UID.
      operationId: PipelinePublicService_LookUpConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaLookUpConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: operator_definition.permalink
          description: |-
            The permalink of the connector, which allows its access by UID.
            - Format: `connectors/{uid}`.
          in: path
          required: true
          type: string
          pattern: connectors/[^/]+
        - name: view
          description: |-
            View allows clients to specify the desired connector view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_CONFIGURATION: Contains the connector configuration.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_CONFIGURATION
      tags:
        - PipelinePublicService
  /v1beta/{organization.name}:
    get:
      summary: Get an organization
      description: Returns the organization details by its ID.
      operationId: MgmtPublicService_GetOrganization
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetOrganizationResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization.name
          description: |-
            The resource name of the organization, which allows its access by ID.
            - Format: `organizations/{organization.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+
        - name: view
          description: |-
            View allows clients to specify the desired resource view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
      tags:
        - MgmtPublicService
    delete:
      summary: Delete an organization
      description: Accesses and deletes an organization by ID.
      operationId: MgmtPublicService_DeleteOrganization
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaDeleteOrganizationResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization.name
          description: |-
            The resource name of the organization, which allows its access by ID.
            - Format: `organizations/{organization.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+
      tags:
        - MgmtPublicService
    patch:
      summary: Update an organization
      description: |-
        Accesses and updates an organization by ID.

        In REST requests, only the supplied organization fields will be taken into
        account when updating the resource.
      operationId: MgmtPublicService_UpdateOrganization
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaUpdateOrganizationResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization.name
          description: |-
            The name of the organization, defined by its ID.
            - Format: `organization/{organization.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+
        - name: organization
          description: The organization fields that will replace the existing ones.
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Organization UUID.
                readOnly: true
              id:
                type: string
                description: |-
                  Resource ID (used in `name` as the last segment). This conforms to
                  RFC-1034, which restricts to letters, numbers, and hyphen, with the first
                  character a letter, the last a letter or a number, and a 63 character
                  maximum.

                  Note that the ID can be updated.
              create_time:
                type: string
                format: date-time
                description: Creation time.
                readOnly: true
              update_time:
                type: string
                format: date-time
                description: Update time.
                readOnly: true
              org_name:
                type: string
                description: Company or institution name.
              customer_id:
                type: string
                description: Stripe customer ID. This field is used in Instill Cloud.
                readOnly: true
              profile_avatar:
                type: string
                description: Profile Avatar in base64.
              profile_data:
                type: object
                description: Profile Data.
              owner:
                $ref: '#/definitions/mgmtv1betaUser'
                description: The user that owns the organization.
                readOnly: true
            title: The organization fields that will replace the existing ones.
            required:
              - id
      tags:
        - MgmtPublicService
  /v1beta/{organization.name}/connectors:
    get:
      summary: List organization connectors
      description: |-
        Returns a paginated list of connectors that belong to the specified
        organization.
      operationId: PipelinePublicService_ListOrganizationConnectors
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListOrganizationConnectorsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization.name
          description: |-
            The parent resource, i.e., the organization that created the connectors.
            - Format: `organizations/{organization.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+
        - name: page_size
          description: |-
            The maximum number of connectors to return. If this parameter is
            unspecified, at most 10 connectors will be returned. The cap value for this
            parameter is 100 (i.e. any value above that will be coerced to 100).
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token.
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View allows clients to specify the desired resource view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_CONFIGURATION: Contains the connector configuration.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_CONFIGURATION
        - name: filter
          description: Filter expression to list connectors
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Include soft-deleted connectors in the result.
          in: query
          required: false
          type: boolean
      tags:
        - PipelinePublicService
    post:
      summary: Create a new organization connector
      description: Creates a new connector under the parenthood of an organization.
      operationId: PipelinePublicService_CreateOrganizationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaCreateOrganizationConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization.name
          description: |-
            The parent resource, i.e., the organization that creates the connector.
            - Format: `organizations/{organization.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+
        - name: connector
          description: The properties of the connector to be created.
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1betaConnector'
            required:
              - connector
      tags:
        - PipelinePublicService
  /v1beta/{organization.name}/memberships:
    get:
      summary: List organization memberships
      description: Returns a paginated list of the user memberships in an organization.
      operationId: MgmtPublicService_ListOrganizationMemberships
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListOrganizationMembershipsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization.name
          description: |-
            The parent resource, i.e., the organization to which the memberships
            belong.
            Format: `organizations/{organization.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+
      tags:
        - MgmtPublicService
  /v1beta/{organization.name}/pipelines:
    get:
      summary: List organization pipelines
      description: |-
        Returns a paginated list of pipelines that belong to the specified
        organization.
      operationId: PipelinePublicService_ListOrganizationPipelines
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListOrganizationPipelinesResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization.name
          description: |-
            The parent resource, i.e., the organization that created the pipelines.
            - Format: `organizations/{organization.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+
        - name: page_size
          description: |-
            The maximum number of pipelines to return. If this parameter is
            unspecified, at most 10 pipelines will be returned. The cap value for this
            parameter is 100 (i.e. any value above that will be coerced to 100).
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token.
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View allows clients to specify the desired pipeline view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_RECIPE: Contains the recipe of the resource.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
        - name: filter
          description: |-
            Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
            expression.
            - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
            - Example:
            `recipe.components.definition_name:"operator-definitions/2ac8be70-0f7a-4b61-a33d-098b8acfa6f3"`.
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Include soft-deleted pipelines in the result.
          in: query
          required: false
          type: boolean
      tags:
        - PipelinePublicService
    post:
      summary: Create a new organization pipeline
      description: Creates a new pipeline under the parenthood of an organization.
      operationId: PipelinePublicService_CreateOrganizationPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaCreateOrganizationPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization.name
          description: |-
            The parent resource, i.e., the organization that creates the pipeline.
            - Format: `organizations/{organization.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+
        - name: pipeline
          description: The properties of the pipeline to be created.
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1betaPipeline'
            required:
              - pipeline
      tags:
        - PipelinePublicService
  /v1beta/{organization.name}/releases:
    get:
      summary: List the releases in a pipeline owned by an organization
      description: |-
        Lists the commited versions of a pipeline, identified by its resource name,
        which is formed by the parent organization and ID of the pipeline.
      operationId: PipelinePublicService_ListOrganizationPipelineReleases
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListOrganizationPipelineReleasesResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization.name
          description: |-
            The parent resource where this pipeline release will be created.
            Format: `organizations/{organization.id}/pipelines/{pipeline.id}`
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+
        - name: page_size
          description: |-
            The maximum number of releases to return. If this parameter is
            unspecified, at most 10 pipelines will be returned. The cap value for this
            parameter is 100 (i.e. any value above that will be coerced to 100).
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token.
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View allows clients to specify the desired pipeline view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_RECIPE: Contains the recipe of the resource.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
        - name: filter
          description: |-
            Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
            expression.
            - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Include soft-deleted pipelines in the result.
          in: query
          required: false
          type: boolean
      tags:
        - PipelinePublicService
    post:
      summary: Release a version of a pipeline owned by an organization
      description: |-
        Commits the version of a pipeline, identified by its resource name, which is
        formed by the parent organization and ID of the pipeline.
      operationId: PipelinePublicService_CreateOrganizationPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaCreateOrganizationPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization.name
          description: |-
            Name of the pipeline for which the release will be created.
            Format: `organizations/{organization.id}/pipelines/{pipeline.id}`
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+
        - name: release
          description: The release information.
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1betaPipelineRelease'
            required:
              - release
      tags:
        - PipelinePublicService
  /v1beta/{organization.name}/subscription:
    get:
      summary: Get an organization subscription
      description: Returns the subscription details of an organization.
      operationId: MgmtPublicService_GetOrganizationSubscription
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetOrganizationSubscriptionResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization.name
          description: |-
            The parent resource, i.e., the organization to which the subscription
            refers.
            Format: `organizations/{organization.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+
      tags:
        - MgmtPublicService
  /v1beta/{organization_connector.name}:
    get:
      summary: Get a connector owned by an organization.
      description: Returns the details of an organization-owned connector.
      operationId: PipelinePublicService_GetOrganizationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetOrganizationConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization_connector.name
          description: |-
            The resource name of the connector, which allows its access by parent
            organization and ID.
            - Format: `organizations/{organization.id}/connectors/{connector.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/connectors/[^/]+
        - name: view
          description: |-
            View allows clients to specify the desired resource view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_CONFIGURATION: Contains the connector configuration.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_CONFIGURATION
      tags:
        - PipelinePublicService
    delete:
      summary: Delete a connector owned by an organization
      description: Deletes a connector.
      operationId: PipelinePublicService_DeleteOrganizationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaDeleteOrganizationConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization_connector.name
          description: |-
            The resource name of the connector, which allows its access by parent
            organization and ID.
            - Format: `organizations/{organization.id}/connectors/{connector.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/connectors/[^/]+
      tags:
        - PipelinePublicService
  /v1beta/{organization_connector.name}/connect:
    post:
      summary: Connect a connector owned by an organization
      description: |-
        Transitions the state of a connector from `DISCONNECTED` to `CONNECTED`. If
        the state of the connector is different when the request is made, an error
        is returned.
      operationId: PipelinePublicService_ConnectOrganizationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaConnectOrganizationConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization_connector.name
          description: |-
            The resource name of the connector, which allows its access by parent
            organization and ID.
            - Format: `organizations/{organization.id}/connectors/{connector.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/connectors/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            description: |-
              ConnectOrganizationConnectorRequest represents a request to connect a
              connector owned by an organization.
      tags:
        - PipelinePublicService
  /v1beta/{organization_connector.name}/disconnect:
    post:
      summary: Disconnect a connector owned by an organization
      description: |-
        Transitions the state of a connector from `CONNECTED` to `DISCONNECTED`. If
        the state of the connector is different when the request is made, an error
        is returned.
      operationId: PipelinePublicService_DisconnectOrganizationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaDisconnectOrganizationConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization_connector.name
          description: |-
            The resource name of the connector, which allows its access by parent
            organization and ID.
            - Format: `organizations/{organization.id}/connectors/{connector.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/connectors/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            description: |-
              DisconnectOrganizationConnectorRequest represents a request to disconnect a
              connector owned by an organization.
      tags:
        - PipelinePublicService
  /v1beta/{organization_connector.name}/execute:
    post:
      summary: Execute a connector owned by an organization
      description: Executes a task in an organization-owned connector.
      operationId: PipelinePublicService_ExecuteOrganizationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaExecuteOrganizationConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization_connector.name
          description: |-
            The resource name of the connector, which allows its access by parent
            organization and ID.
            - Format: `organizations/{organization.id}/connectors/{connector.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/connectors/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              inputs:
                type: array
                items:
                  type: object
                description: Connector input parameters.
              task:
                type: string
                description: Task to be passed to the connector (e.g. `TASK_TEXT_GENERATION`).
            description: |-
              ExecuteOrganizationConnectorRequest represents a request to execute a
              connector owned by an organization.
      tags:
        - PipelinePublicService
  /v1beta/{organization_connector.name}/rename:
    post:
      summary: Rename a connector owned by an organization
      description: |-
        Updates the ID of a connector. Since this is an output-only field, a custom
        method is required to modify it.

        The connector name will be updated accordingly, as it is  composed by the
        parent organization and ID of the connector (e.g.
        `organizations/indiana-jones/connector/whip`).
      operationId: PipelinePublicService_RenameOrganizationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaRenameOrganizationConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization_connector.name
          description: |-
            The resource name of the connector, which allows its access by parent
            organization and ID.
            - Format: `organizations/{organization.id}/connectors/{connector.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/connectors/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              new_connector_id:
                type: string
                description: |-
                  The new resource ID. This will transform the resource name into
                  `organizations/{organization.id}/connectors/{new_connector_id}`.
            description: |-
              RenameOrganizationConnectorRequest represents a request to rename the name
              of a connector owned by an organization.
            required:
              - new_connector_id
      tags:
        - PipelinePublicService
  /v1beta/{organization_connector.name}/testConnection:
    post:
      summary: Test a connector owned by an organization
      description: Tests the connection on an organization-owned connector.
      operationId: PipelinePublicService_TestOrganizationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaTestOrganizationConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization_connector.name
          description: |-
            The resource name of the connector, which allows its access by parent
            organization and ID.
            - Format: `organizations/{organization.id}/connectors/{connector.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/connectors/[^/]+
      tags:
        - PipelinePublicService
  /v1beta/{organization_connector.name}/watch:
    get:
      summary: Get the state of a connector owned by an organization
      description: Gets the state of an organization-owned connector.
      operationId: PipelinePublicService_WatchOrganizationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaWatchOrganizationConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization_connector.name
          description: |-
            The resource name of the connector, which allows its access by parent
            connector and ID.
            - Format: `organizations/{organization.id}/connectors/{connector.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/connectors/[^/]+
      tags:
        - PipelinePublicService
  /v1beta/{organization_membership.name}:
    get:
      summary: Get a an organization membership
      description: Returns the details of a user membership within an organization.
      operationId: MgmtPublicService_GetOrganizationMembership
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetOrganizationMembershipResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization_membership.name
          description: |-
            The resource name of the membership, which allows its access by
            organization and user ID.
            - Format: `organizations/{organization.id}/memberships/{user.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/memberships/[^/]+
        - name: view
          description: |-
            View allows clients to specify the desired resource view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
      tags:
        - MgmtPublicService
    delete:
      summary: Delete an organization membership
      description: Deletes a user membership within an organization.
      operationId: MgmtPublicService_DeleteOrganizationMembership
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaDeleteOrganizationMembershipResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization_membership.name
          description: |-
            The resource name of the membership, which allows its access by
            organization and user ID.
            - Format: `organizations/{organization.id}/memberships/{user.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/memberships/[^/]+
      tags:
        - MgmtPublicService
  /v1beta/{organization_pipeline.name}:
    get:
      summary: Get a pipeline owned by an organization
      description: |-
        Returns the details of an organization-owned pipeline by its resource name,
        which is defined by the parent organization and the ID of the pipeline.
      operationId: PipelinePublicService_GetOrganizationPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetOrganizationPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization_pipeline.name
          description: |-
            The resource name of the pipeline, which allows its access by parent
            organization and ID.
            - Format: `organizations/{organization.id}/pipelines/{pipeline.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+
        - name: view
          description: |-
            View allows clients to specify the desired pipeline view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_RECIPE: Contains the recipe of the resource.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
      tags:
        - PipelinePublicService
    delete:
      summary: Delete a pipeline owned by an organization
      description: |-
        Deletes a pipeline, accesing it by its resource name, which is defined by
        the parent organization and the ID of the pipeline.
      operationId: PipelinePublicService_DeleteOrganizationPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaDeleteOrganizationPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization_pipeline.name
          description: |-
            The resource name of the pipeline, which allows its access by parent
            organization and ID.
            - Format: `organizations/{organization.id}/pipelines/{pipeline.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+
      tags:
        - PipelinePublicService
  /v1beta/{organization_pipeline.name}/rename:
    post:
      summary: Rename a pipeline owned by an organization
      description: |-
        Updates the ID of a pipeline. Since this is an output-only field, a custom
        method is required to modify it.

        The pipeline name will be updated accordingly, as it is  composed by the
        parent organization and ID of the pipeline (e.g.
        `organizations/luigi/pipelines/pizza-recipe-generator`).
      operationId: PipelinePublicService_RenameOrganizationPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaRenameOrganizationPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization_pipeline.name
          description: |-
            The resource name of the pipeline, which allows its access by parent
            organization and ID.
            - Format: `organizations/{organization.id}/pipelines/{pipeline.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              new_pipeline_id:
                type: string
                description: |-
                  The new resource ID. This will transform the resource name into
                  `organizations/{organization.id}/pipelines/{new_pipeline_id}`.
            description: |-
              RenameOrganizationPipelineRequest represents a request to rename the name of
              a pipeline owned by an organization.
            required:
              - new_pipeline_id
      tags:
        - PipelinePublicService
  /v1beta/{organization_pipeline.name}/trigger:
    post:
      summary: Trigger a pipeline owned by an organization
      description: |-
        Triggers the execution of a pipeline synchronously, i.e., the result is sent
        back to the organization right after the data is processed. This method is
        intended for real-time inference when low latency is of concern.

        The pipeline is identified by its resource name, formed by the parent
        organization and ID of the pipeline.

        For more information, see [Trigger
        Pipeline](https://www.instill.tech/docs/latest/core/concepts/pipeline#trigger-pipeline).
      operationId: PipelinePublicService_TriggerOrganizationPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaTriggerOrganizationPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization_pipeline.name
          description: |-
            The resource name of the pipeline, which allows its access by parent
            organization and ID.
            - Format: `organizations/{organization.id}/pipelines/{pipeline.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              inputs:
                type: array
                items:
                  type: object
                description: Pipeline input parameters.
            description: |-
              TriggerOrganizationPipelineRequest represents a request to trigger an
              organization-owned pipeline synchronously.
            required:
              - inputs
      tags:
        - PipelinePublicService
  /v1beta/{organization_pipeline.name}/triggerAsync:
    post:
      summary: Trigger a pipeline owned by an organization asynchronously
      description: |-
        Triggers the execution of a pipeline asynchronously, i.e., the result
        contains the necessary information to access the result and status of the
        operation. This method is intended for cases that require long-running
        workloads.

        The pipeline is identified by its resource name, formed by the parent
        organization and ID of the pipeline.

        For more information, see [Trigger
        Pipeline](https://www.instill.tech/docs/latest/core/concepts/pipeline#trigger-pipeline).
      operationId: PipelinePublicService_TriggerAsyncOrganizationPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaTriggerAsyncOrganizationPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization_pipeline.name
          description: |-
            The resource name of the pipeline, which allows its access by parent
            organization and ID.
            - Format: `organizations/{organization.id}/pipelines/{pipeline.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              inputs:
                type: array
                items:
                  type: object
                description: Pipeline input parameters.
            description: |-
              TriggerOrganizationPipelineRequest represents a request to trigger an
              organization-owned pipeline synchronously.
            required:
              - inputs
      tags:
        - PipelinePublicService
  /v1beta/{organization_pipeline.name}/validate:
    post:
      summary: Validate a pipeline a pipeline owned by an organization
      description: |-
        Validates a pipeline by its resource name, which is defined by the parent
        organization and the ID of the pipeline.

        Validation checks the recipe of the pipeline and the status of its
        components.
      operationId: PipelinePublicService_ValidateOrganizationPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaValidateOrganizationPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization_pipeline.name
          description: |-
            The resource name of the pipeline, which allows its access by parent
            organization and ID.
            - Format: `organizations/{organization.id}/pipelines/{pipeline.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            description: |-
              ValidateOrganizationPipelineRequest represents a request to validate a
              pipeline owned by an organization.
      tags:
        - PipelinePublicService
  /v1beta/{organization_pipeline_release.name}:
    get:
      summary: Get a release in a pipeline owned by an organization
      description: |-
        Gets the details of a pipeline release, where the pipeline is identified by
        its resource name, formed by its parent organization and ID.
      operationId: PipelinePublicService_GetOrganizationPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetOrganizationPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization_pipeline_release.name
          description: |-
            The resource name of the pipeline release, which allows its access by
            parent pipeline and ID.
            - Format:
            `organizations/{organization.id}/pipelines/{pipeline.id}/releases/{release.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+/releases/[^/]+
        - name: view
          description: |-
            View allows clients to specify the desired pipeline view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_RECIPE: Contains the recipe of the resource.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
      tags:
        - PipelinePublicService
    delete:
      summary: Delete a release in a pipeline owned by an organization
      description: |-
        Deletes a pipeline release, where the pipeline is identified by its resource
        name, formed by its parent organization and ID.
      operationId: PipelinePublicService_DeleteOrganizationPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaDeleteOrganizationPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization_pipeline_release.name
          description: |-
            The resource name of the pipeline release, which allows its access by
            parent pipeline and ID.
            - Format:
            `organizations/{organization.id}/pipelines/{pipeline.id}/releases/{release.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+/releases/[^/]+
      tags:
        - PipelinePublicService
  /v1beta/{organization_pipeline_release.name}/rename:
    post:
      summary: Rename a release in a pipeline owned by an organization
      description: |-
        Updates the ID of a pipeline release, where the pipeline is identified by
        its resource name, formed by the parent organization and ID. Since this is
        an output-only field, a custom method is required to modify it.

        The pipeline release name will be updated accordingly, as it is  composed by
        the pipeline name and the ID of the release (e.g.
        `organizations/luigi/pipelines/pizza-recipe-generator/releases/v0.2.1`).
      operationId: PipelinePublicService_RenameOrganizationPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaRenameOrganizationPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization_pipeline_release.name
          description: |-
            The resource name of the pipeline release, which allows its access by
            parent pipeline and ID.
            - Format:
            `organizations/{organization.id}/pipelines/{pipeline.id}/releases/{release.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+/releases/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              new_pipeline_release_id:
                type: string
                description: |-
                  The new resource ID. This will transform the resource name into
                  `organizations/{organization.id}/pipelines/{pipeline.id}/releases{new_release_id}`.
            description: |-
              RenameOrganizationPipelineReleaseRequest represents a request to rename a
              release in an organization-owned pipeline.
            required:
              - new_pipeline_release_id
      tags:
        - PipelinePublicService
  /v1beta/{organization_pipeline_release.name}/restore:
    post:
      summary: Set the version of a pipeline owned by an organization to a pinned release
      description: |-
        Sets the pipeline configuration to a pinned version defined by a release.

        The pipeline is identified by its resource name, formed by its parent
        organization and ID.
      operationId: PipelinePublicService_RestoreOrganizationPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaRestoreOrganizationPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization_pipeline_release.name
          description: |-
            The resource name of the pipeline release, which allows its access by
            parent pipeline and ID.
            - Format:
            `organizations/{organization.id}/pipelines/{pipeline.id}/releases/{release.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+/releases/[^/]+
      tags:
        - PipelinePublicService
  /v1beta/{organization_pipeline_release.name}/trigger:
    post:
      summary: Trigger a version of a pipeline owned by an organization
      description: |-
        Triggers the synchronous execution of of a pipeline. While the trigger
        endpoint (where the release version isn't specified) triggers the pipeline
        at its latest release, this method allows the client to specified any
        committed release.

        The pipeline is identified by its resource name, formed by its parent
        organization and ID.
      operationId: PipelinePublicService_TriggerOrganizationPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaTriggerOrganizationPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization_pipeline_release.name
          description: |-
            The resource name of the pipeline release, which allows its access by
            parent pipeline and ID.
            - Format:
            `organizations/{organization.id}/pipelines/{pipeline.id}/releases/{release.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+/releases/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              inputs:
                type: array
                items:
                  type: object
                description: Pipeline input parameters.
            description: |-
              TriggerOrganizationPipelineReleaseRequest represents a request to trigger a
              pinned release of an organization-owned pipeline.
            required:
              - inputs
      tags:
        - PipelinePublicService
  /v1beta/{organization_pipeline_release.name}/triggerAsync:
    post:
      summary: Trigger a version of a pipeline owned by an organization asynchronously
      description: |-
        Triggers the asynchronous execution of of a pipeline. While the trigger
        endpoint (where the release version isn't specified) triggers the pipeline
        at its latest release, this method allows the client to specified any
        committed release.

        The pipeline is identified by its resource name, formed by its parent
        organization and ID.
      operationId: PipelinePublicService_TriggerAsyncOrganizationPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaTriggerAsyncOrganizationPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization_pipeline_release.name
          description: |-
            The resource name of the pipeline release, which allows its access by
            parent pipeline and ID.
            - Format:
            `organizations/{organization.id}/pipelines/{pipeline.id}/releases/{release.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+/releases/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              inputs:
                type: array
                items:
                  type: object
                description: Pipeline input parameters.
            description: |-
              TriggerOrganizationPipelineReleaseRequest represents a request to trigger a
              pinned release of an organization-owned pipeline asynchronously.
            required:
              - inputs
      tags:
        - PipelinePublicService
  /v1beta/{organization_pipeline_release.name}/watch:
    get:
      summary: Get the state of a release in a pipeline owned by an organization
      description: |-
        Gets the state of a pipeline release, where the pipeline is identified by
        its resource name, formed by the parent organization and ID of the pipeline.
      operationId: PipelinePublicService_WatchOrganizationPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaWatchOrganizationPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization_pipeline_release.name
          description: |-
            The resource name of the pipeline release, which allows its access by
            parent pipeline and ID.
            - Format:
            `organizations/{organization.id}/pipelines/{pipeline.id}/releases/{release.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+/releases/[^/]+
      tags:
        - PipelinePublicService
  /v1beta/{permalink}/lookUp:
    get:
      summary: Get a pipeline by UID
      description: |-
        Returns the details of a pipeline by a permalink defined by the resource
        UID.
      operationId: PipelinePublicService_LookUpPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaLookUpPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: permalink
          description: |-
            The permalink of the pipeline, which allows its access by UID.
            - Format: `pipelines/{pipeline.uid}`.
          in: path
          required: true
          type: string
          pattern: pipelines/[^/]+
        - name: view
          description: |-
            View allows clients to specify the desired pipeline view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_RECIPE: Contains the recipe of the resource.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
      tags:
        - PipelinePublicService
  /v1beta/{pipeline.name_1}:
    patch:
      summary: Update a pipeline owned by an organization
      description: |-
        Udpates a pipeline, accessing it by its resource name, which is defined by

        In REST requests, only the supplied pipeline fields will be taken into
        account when updating the resource.
      operationId: PipelinePublicService_UpdateOrganizationPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaUpdateOrganizationPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pipeline.name_1
          description: |-
            The name of the pipeline, defined by its owner and ID.
            - Format: `users/{user.id}/pipelines/{pipeline.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+
        - name: pipeline
          description: The pipeline fields that will replace the existing ones.
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Pipeline UUID.
                readOnly: true
              id:
                type: string
                description: |-
                  Pipeline resource ID (used in `name` as the last segment). This conforms
                  to RFC-1034, which restricts to letters, numbers, and hyphen, with the
                  first character a letter, the last a letter or a number, and a 63
                  character maximum.
              description:
                type: string
                description: Pipeline description.
              recipe:
                $ref: '#/definitions/v1betaRecipe'
                description: Recipe describes the components of a Pipeline and how they are connected.
              create_time:
                type: string
                format: date-time
                description: Pipeline creation time.
                readOnly: true
              update_time:
                type: string
                format: date-time
                description: Pipeline update time.
                readOnly: true
              openapi_schema:
                type: object
                description: OpenAPI schema.
                readOnly: true
              delete_time:
                type: string
                format: date-time
                description: Pipeline delete time.
                readOnly: true
              sharing:
                $ref: '#/definitions/v1betaSharing'
                description: Pipeline sharing information.
              metadata:
                type: object
                description: Metadata holds console-related data such as the pipeline builder layout.
              owner_name:
                type: string
                description: Owner Name.
                readOnly: true
              owner:
                type: object
                description: Owner details.
                readOnly: true
              releases:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1betaPipelineRelease'
                description: Releases holds the history of pipeline versions.
                readOnly: true
              readme:
                type: string
                description: README holds the pipeline documentation.
              permission:
                $ref: '#/definitions/v1betaPermission'
                description: Permission defines how a pipeline can be used.
                readOnly: true
            title: The pipeline fields that will replace the existing ones.
      tags:
        - PipelinePublicService
  /v1beta/{pipeline.name}:
    patch:
      summary: Update a pipeline owned by a user
      description: |-
        Udpates a pipeline, accessing it by its resource name, which is defined by
        the parent user and the ID of the pipeline. The authenticated user must be
        the parent of the pipeline in order to modify it.

        In REST requests, only the supplied pipeline fields will be taken into
        account when updating the resource.
      operationId: PipelinePublicService_UpdateUserPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaUpdateUserPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pipeline.name
          description: |-
            The name of the pipeline, defined by its owner and ID.
            - Format: `users/{user.id}/pipelines/{pipeline.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
        - name: pipeline
          description: The pipeline fields that will replace the existing ones.
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Pipeline UUID.
                readOnly: true
              id:
                type: string
                description: |-
                  Pipeline resource ID (used in `name` as the last segment). This conforms
                  to RFC-1034, which restricts to letters, numbers, and hyphen, with the
                  first character a letter, the last a letter or a number, and a 63
                  character maximum.
              description:
                type: string
                description: Pipeline description.
              recipe:
                $ref: '#/definitions/v1betaRecipe'
                description: Recipe describes the components of a Pipeline and how they are connected.
              create_time:
                type: string
                format: date-time
                description: Pipeline creation time.
                readOnly: true
              update_time:
                type: string
                format: date-time
                description: Pipeline update time.
                readOnly: true
              openapi_schema:
                type: object
                description: OpenAPI schema.
                readOnly: true
              delete_time:
                type: string
                format: date-time
                description: Pipeline delete time.
                readOnly: true
              sharing:
                $ref: '#/definitions/v1betaSharing'
                description: Pipeline sharing information.
              metadata:
                type: object
                description: Metadata holds console-related data such as the pipeline builder layout.
              owner_name:
                type: string
                description: Owner Name.
                readOnly: true
              owner:
                type: object
                description: Owner details.
                readOnly: true
              releases:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1betaPipelineRelease'
                description: Releases holds the history of pipeline versions.
                readOnly: true
              readme:
                type: string
                description: README holds the pipeline documentation.
              permission:
                $ref: '#/definitions/v1betaPermission'
                description: Permission defines how a pipeline can be used.
                readOnly: true
            title: The pipeline fields that will replace the existing ones.
      tags:
        - PipelinePublicService
  /v1beta/{release.name_1}:
    patch:
      summary: Update a release in a pipeline owned by an organization
      description: |-
        Updates the details of a pipeline release, where the pipeline is identified
        by its resource name, formed by its parent organization and ID.
      operationId: PipelinePublicService_UpdateOrganizationPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaUpdateOrganizationPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: release.name_1
          description: |-
            The name of the release, defined by its owner and ID.
            - Format: `users/{user.id}/pipelines/{pipeline.id}/releases/{release.id}
          in: path
          required: true
          type: string
          pattern: organizationsr/[^/]+/pipelines/[^/]+/releases/[^/]+
        - name: release
          description: |-
            The pipeline release fields that will replace the existing ones.
            A pipeline release resource to update
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Release UUID.
                readOnly: true
              id:
                type: string
                description: |-
                  Release resource ID (used in `name` as the last segment). It must be a
                  sematic version vX.Y.Z.
              description:
                type: string
                description: Release description.
              recipe:
                $ref: '#/definitions/v1betaRecipe'
                description: Recipe of the versioned pipeline.
                readOnly: true
              create_time:
                type: string
                format: date-time
                description: Pipeline creation time.
                readOnly: true
              update_time:
                type: string
                format: date-time
                description: Pipeline update time.
                readOnly: true
              openapi_schema:
                type: object
                description: OpenAPI schema.
                readOnly: true
              delete_time:
                type: string
                format: date-time
                description: Pipeline deletion time.
                readOnly: true
              alias:
                type: string
                description: Alias.
                readOnly: true
              metadata:
                type: object
                description: |-
                  Key-value object with console-related data such as the pipeline builder
                  layout.
              readme:
                type: string
                description: README.
            title: |-
              The pipeline release fields that will replace the existing ones.
              A pipeline release resource to update
      tags:
        - PipelinePublicService
  /v1beta/{release.name}:
    patch:
      summary: Update a release in a pipeline owned by a user
      description: |-
        Updates the details of a pipeline release, where the pipeline is
        identified by its resource name, formed by its parent user and ID.

        The authenticated user must be the parent of the pipeline in order to
        perform this action.
      operationId: PipelinePublicService_UpdateUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaUpdateUserPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: release.name
          description: |-
            The name of the release, defined by its owner and ID.
            - Format: `users/{user.id}/pipelines/{pipeline.id}/releases/{release.id}
          in: path
          required: true
          type: string
          pattern: usersr/[^/]+/pipelines/[^/]+/releases/[^/]+
        - name: release
          description: |-
            The pipeline release fields that will replace the existing ones.
            A pipeline release resource to update
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Release UUID.
                readOnly: true
              id:
                type: string
                description: |-
                  Release resource ID (used in `name` as the last segment). It must be a
                  sematic version vX.Y.Z.
              description:
                type: string
                description: Release description.
              recipe:
                $ref: '#/definitions/v1betaRecipe'
                description: Recipe of the versioned pipeline.
                readOnly: true
              create_time:
                type: string
                format: date-time
                description: Pipeline creation time.
                readOnly: true
              update_time:
                type: string
                format: date-time
                description: Pipeline update time.
                readOnly: true
              openapi_schema:
                type: object
                description: OpenAPI schema.
                readOnly: true
              delete_time:
                type: string
                format: date-time
                description: Pipeline deletion time.
                readOnly: true
              alias:
                type: string
                description: Alias.
                readOnly: true
              metadata:
                type: object
                description: |-
                  Key-value object with console-related data such as the pipeline builder
                  layout.
              readme:
                type: string
                description: README.
            title: |-
              The pipeline release fields that will replace the existing ones.
              A pipeline release resource to update
      tags:
        - PipelinePublicService
  /v1beta/{token.name}:
    get:
      summary: Get an API token
      description: Returns the details of an API token.
      operationId: MgmtPublicService_GetToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetTokenResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: token.name
          description: |-
            The resource name of the token, which allows its access by ID.
            - Format: `tokens/{token.id}`.
          in: path
          required: true
          type: string
          pattern: tokens/[^/]+
      tags:
        - MgmtPublicService
    delete:
      summary: Delete an API token
      description: Deletes an API token.
      operationId: MgmtPublicService_DeleteToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaDeleteTokenResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: token.name
          description: |-
            The resource name of the token, which allows its access by ID.
            - Format: `tokens/{token.id}`.
          in: path
          required: true
          type: string
          pattern: tokens/[^/]+
      tags:
        - MgmtPublicService
  /v1beta/{user.name}:
    get:
      summary: Get a user
      description: Returns the details of a user by their ID.
      operationId: MgmtPublicService_GetUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetUserResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user.name
          description: |-
            The resource name of the user, which allows its access by ID.
            - Format: `users/{user.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: view
          description: |-
            View allows clients to specify the desired resource view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
      tags:
        - MgmtPublicService
  /v1beta/{user.name}/connectors:
    get:
      summary: List user connectors
      description: Returns a paginated list of connectors that belong to the specified user.
      operationId: PipelinePublicService_ListUserConnectors
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListUserConnectorsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user.name
          description: |-
            The parent resource, i.e., the user that created the connectors.
            - Format: `users/{user.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: page_size
          description: |-
            The maximum number of connectors to return. If this parameter is
            unspecified, at most 10 connectors will be returned. The cap value for this
            parameter is 100 (i.e. any value above that will be coerced to 100).
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token.
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View allows clients to specify the desired resource view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_CONFIGURATION: Contains the connector configuration.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_CONFIGURATION
        - name: filter
          description: Filter expression to list connectors
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Include soft-deleted connectors in the result.
          in: query
          required: false
          type: boolean
      tags:
        - PipelinePublicService
    post:
      summary: Create a new user connector
      description: |-
        Creates a new connector under the parenthood of a user. Users can only
        create a connector parents of that resource (i.e. the authenticated user
        must match the `parent` path parameter).
      operationId: PipelinePublicService_CreateUserConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaCreateUserConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user.name
          description: |-
            The parent resource, i.e., the user that creates the connector.
            - Format: `users/{user.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: connector
          description: The properties of the connector to be created.
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1betaConnector'
            required:
              - connector
      tags:
        - PipelinePublicService
  /v1beta/{user.name}/memberships:
    get:
      summary: List user memberships
      description: Returns the memberships of a user.
      operationId: MgmtPublicService_ListUserMemberships
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListUserMembershipsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user.name
          description: |-
            The parent resource, i.e., the user to which the memberships belong.
            Format: `users/{user.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+
      tags:
        - MgmtPublicService
  /v1beta/{user.name}/pipelines:
    get:
      summary: List user pipelines
      description: |-
        Returns a paginated list of pipelines that belong to the specified user.
        The parent user may be different from the authenticated user, in which
        case the results will contain the pipelines that are visible to the
        latter.
      operationId: PipelinePublicService_ListUserPipelines
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListUserPipelinesResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user.name
          description: |-
            The parent resource, i.e., the user that created the pipelines.
            - Format: `users/{user.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: page_size
          description: |-
            The maximum number of pipelines to return. If this parameter is
            unspecified, at most 10 pipelines will be returned. The cap value for this
            parameter is 100 (i.e. any value above that will be coerced to 100).
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token.
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View allows clients to specify the desired pipeline view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_RECIPE: Contains the recipe of the resource.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
        - name: filter
          description: |-
            Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
            expression.
            - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
            - Example:
            `recipe.components.definition_name:"operator-definitions/2ac8be70-0f7a-4b61-a33d-098b8acfa6f3"`.
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Include soft-deleted pipelines in the result.
          in: query
          required: false
          type: boolean
      tags:
        - PipelinePublicService
    post:
      summary: Create a new user pipeline
      description: |-
        Creates a new pipeline under the parenthood of a user. Users can only
        create a pipeline as the parent of that resource (i.e. the authenticated
        user must match the `parent` path parameter).
      operationId: PipelinePublicService_CreateUserPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaCreateUserPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user.name
          description: |-
            The parent resource, i.e., the user that creates the pipeline.
            - Format: `users/{user.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: pipeline
          description: The properties of the pipeline to be created.
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1betaPipeline'
            required:
              - pipeline
      tags:
        - PipelinePublicService
  /v1beta/{user.name}/releases:
    get:
      summary: List the releases in a pipeline owned by a user
      description: |-
        Lists the commited versions of a pipeline, identified by its resource
        name, which is formed by the parent user and ID of the pipeline.
      operationId: PipelinePublicService_ListUserPipelineReleases
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListUserPipelineReleasesResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user.name
          description: |-
            The parent resource where this pipeline release will be created.
            Format: `users/{user.id}/pipelines/{pipeline.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
        - name: page_size
          description: |-
            The maximum number of releases to return. If this parameter is
            unspecified, at most 10 pipelines will be returned. The cap value for this
            parameter is 100 (i.e. any value above that will be coerced to 100).
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token.
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View allows clients to specify the desired pipeline view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_RECIPE: Contains the recipe of the resource.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
        - name: filter
          description: |-
            Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
            expression.
            - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Include soft-deleted pipelines in the result.
          in: query
          required: false
          type: boolean
      tags:
        - PipelinePublicService
    post:
      summary: Release a version of a pipeline owned by a user
      description: |-
        Commits the version of a pipeline, identified by its resource name, which
        is formed by the parent user and ID of the pipeline.

        The authenticated user must be the parent of the pipeline in order to
        perform this action.
      operationId: PipelinePublicService_CreateUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaCreateUserPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user.name
          description: |-
            Name of the pipeline for which the release will be created.
            Format: `users/{user.id}/pipelines/{pipeline.id}`
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
        - name: release
          description: The release information.
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1betaPipelineRelease'
            required:
              - release
      tags:
        - PipelinePublicService
  /v1beta/{user.name}/subscription:
    get:
      summary: Get a user subscription
      description: Returns the subscription details of a user.
      operationId: MgmtPublicService_GetUserSubscription
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetUserSubscriptionResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user.name
          description: |-
            The parent resource, i.e., the user to which the subscription refers.
            Format: `users/{user.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+
      tags:
        - MgmtPublicService
  /v1beta/{user_connector.name}:
    get:
      summary: Get a connector owned by a user.
      description: Returns the details of a user-owned connector.
      operationId: PipelinePublicService_GetUserConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetUserConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user_connector.name
          description: |-
            The resource name of the connector, which allows its access by parent user
            and ID.
            - Format: `users/{user.id}/connectors/{connector.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connectors/[^/]+
        - name: view
          description: |-
            View allows clients to specify the desired resource view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_CONFIGURATION: Contains the connector configuration.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_CONFIGURATION
      tags:
        - PipelinePublicService
    delete:
      summary: Delete a connector owned by a user
      description: |-
        Deletes a connector. The authenticated user must be the parent of the
        connector in order to delete it.
      operationId: PipelinePublicService_DeleteUserConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaDeleteUserConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user_connector.name
          description: |-
            The resource name of the connector, which allows its access by parent user
            and ID.
            - Format: `users/{user.id}/connectors/{connector.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connectors/[^/]+
      tags:
        - PipelinePublicService
  /v1beta/{user_connector.name}/connect:
    post:
      summary: Connect a connector owned by a user
      description: |-
        Transitions the state of a connector from `DISCONNECTED` to `CONNECTED`. If
        the state of the connector is different when the request is made, an error
        is returned.
      operationId: PipelinePublicService_ConnectUserConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaConnectUserConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user_connector.name
          description: |-
            The resource name of the connector, which allows its access by parent user
            and ID.
            - Format: `users/{user.id}/connectors/{connector.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connectors/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            description: |-
              ConnectUserConnectorRequest represents a request to connect a connector
              owned by a user.
      tags:
        - PipelinePublicService
  /v1beta/{user_connector.name}/disconnect:
    post:
      summary: Disconnect a connector owned by a user
      description: |-
        Transitions the state of a connector from `CONNECTED` to `DISCONNECTED`. If
        the state of the connector is different when the request is made, an error
        is returned.
      operationId: PipelinePublicService_DisconnectUserConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaDisconnectUserConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user_connector.name
          description: |-
            The resource name of the connector, which allows its access by parent user
            and ID.
            - Format: `users/{user.id}/connectors/{connector.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connectors/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            description: |-
              DisconnectUserConnectorRequest represents a request to disconnect a
              connector owned by a user.
      tags:
        - PipelinePublicService
  /v1beta/{user_connector.name}/execute:
    post:
      summary: Execute a connector owned by a user
      description: Executes a task in a user-owned connector.
      operationId: PipelinePublicService_ExecuteUserConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaExecuteUserConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user_connector.name
          description: |-
            The resource name of the connector, which allows its access by parent user
            and ID.
            - Format: `users/{user.id}/connectors/{connector.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connectors/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              inputs:
                type: array
                items:
                  type: object
                description: Connector input parameters.
              task:
                type: string
                description: Task to be passed to the connector (e.g. `TASK_TEXT_GENERATION`).
            description: |-
              ExecuteUserConnectorRequest represents a request to execute a connector
              owned by a user.
      tags:
        - PipelinePublicService
  /v1beta/{user_connector.name}/rename:
    post:
      summary: Rename a connector owned by a user
      description: |-
        Updates the ID of a connector. Since this is an output-only field, a custom
        method is required to modify it.

        The connector name will be updated accordingly, as it is  composed by the
        parent user and ID of the connector (e.g.
        `users/indiana-jones/connector/whip`).

        The authenticated user must be the parent of the connector in order to
        perform this action.
      operationId: PipelinePublicService_RenameUserConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaRenameUserConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user_connector.name
          description: |-
            The resource name of the connector, which allows its access by parent user
            and ID.
            - Format: `users/{user.id}/connectors/{connector.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connectors/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              new_connector_id:
                type: string
                description: |-
                  The new resource ID. This will transform the resource name into
                  `users/{user.id}/connectors/{new_connector_id}`.
            description: |-
              RenameUserConnectorRequest represents a request to rename the name of a
              connector owned by a user.
            required:
              - new_connector_id
      tags:
        - PipelinePublicService
  /v1beta/{user_connector.name}/testConnection:
    post:
      summary: Test a connector owned by a user
      description: Tests the connection on a user-owned connector.
      operationId: PipelinePublicService_TestUserConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaTestUserConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user_connector.name
          description: |-
            The resource name of the connector, which allows its access by parent user
            and ID.
            - Format: `users/{user.id}/connectors/{connector.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connectors/[^/]+
      tags:
        - PipelinePublicService
  /v1beta/{user_connector.name}/watch:
    get:
      summary: Get the state of a connector owned by a user
      description: Gets the state of a user-owned connector.
      operationId: PipelinePublicService_WatchUserConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaWatchUserConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user_connector.name
          description: |-
            The resource name of the connector, which allows its access by parent
            connector and ID.
            - Format: `users/{user.id}/connectors/{connector.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connectors/[^/]+
      tags:
        - PipelinePublicService
  /v1beta/{user_membership.name}:
    get:
      summary: Get a user membership
      description: |-
        Returns the details of the relationship between a user and an
        organization. The authenticated must match the membership parent.
      operationId: MgmtPublicService_GetUserMembership
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetUserMembershipResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user_membership.name
          description: |-
            The resource name of the membership, which allows its access by user and
            organization ID.
            - Format: `users/{user.id}/memberships/{organization.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/memberships/[^/]+
        - name: view
          description: |-
            View allows clients to specify the desired resource view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
      tags:
        - MgmtPublicService
    delete:
      summary: Delete a user membership
      description: Accesses and deletes a user membership by parent and membership IDs.
      operationId: MgmtPublicService_DeleteUserMembership
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaDeleteUserMembershipResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user_membership.name
          description: |-
            The resource name of the membership, which allows its access by user and
            organization ID.
            - Format: `users/{user.id}/memberships/{organization.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/memberships/[^/]+
      tags:
        - MgmtPublicService
  /v1beta/{user_pipeline.name}:
    get:
      summary: Get a pipeline owned by a user
      description: |-
        Returns the details of a user-owned pipeline by its resource name, which is defined
        by the parent user and the ID of the pipeline.
      operationId: PipelinePublicService_GetUserPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetUserPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user_pipeline.name
          description: |-
            The resource name of the pipeline, which allows its access by parent user
            and ID.
            - Format: `users/{user.id}/pipelines/{pipeline.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
        - name: view
          description: |-
            View allows clients to specify the desired pipeline view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_RECIPE: Contains the recipe of the resource.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
      tags:
        - PipelinePublicService
    delete:
      summary: Delete a pipeline owned by a user
      description: |-
        Deletes a pipeline, accesing it by its resource name, which is defined by
        the parent user and the ID of the pipeline. The authenticated user must be
        the parent of the pipeline in order to delete it.
      operationId: PipelinePublicService_DeleteUserPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaDeleteUserPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user_pipeline.name
          description: |-
            The resource name of the pipeline, which allows its access by parent user
            and ID.
            - Format: `users/{user.id}/pipelines/{pipeline.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
      tags:
        - PipelinePublicService
  /v1beta/{user_pipeline.name}/rename:
    post:
      summary: Rename a pipeline owned by a user
      description: |-
        Updates the ID of a pipeline. Since this is an output-only field, a custom
        method is required to modify it.

        The pipeline name will be updated accordingly, as it is  composed by the
        parent user and ID of the pipeline (e.g.
        `users/luigi/pipelines/pizza-recipe-generator`).

        The authenticated user must be the parent of the pipeline in order to
        perform this action.
      operationId: PipelinePublicService_RenameUserPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaRenameUserPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user_pipeline.name
          description: |-
            The resource name of the pipeline, which allows its access by parent user
            and ID.
            - Format: `users/{user.id}/pipelines/{pipeline.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              new_pipeline_id:
                type: string
                description: |-
                  The new resource ID. This will transform the resource name into
                  `users/{user.id}/pipelines/{new_pipeline_id}`.
            description: |-
              RenameUserPipelineRequest represents a request to rename the name of a
              pipeline owned by a user.
            required:
              - new_pipeline_id
      tags:
        - PipelinePublicService
  /v1beta/{user_pipeline.name}/trigger:
    post:
      summary: Trigger a pipeline owned by a user
      description: |-
        Triggers the execution of a pipeline synchronously, i.e., the result is
        sent back to the user right after the data is processed. This method is
        intended for real-time inference when low latency is of concern.

        The pipeline is identified by its resource name, formed by the parent user
        and ID of the pipeline.

        For more information, see [Trigger
        Pipeline](https://www.instill.tech/docs/latest/core/concepts/pipeline#trigger-pipeline).
      operationId: PipelinePublicService_TriggerUserPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaTriggerUserPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user_pipeline.name
          description: |-
            The resource name of the pipeline, which allows its access by parent user
            and ID.
            - Format: `users/{user.id}/pipelines/{pipeline.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              inputs:
                type: array
                items:
                  type: object
                description: Pipeline input parameters.
            description: |-
              TriggerUserPipelineRequest represents a request to trigger a user-owned
              pipeline synchronously.
            required:
              - inputs
      tags:
        - PipelinePublicService
  /v1beta/{user_pipeline.name}/triggerAsync:
    post:
      summary: Trigger a pipeline owned by a user asynchronously
      description: |-
        Triggers the execution of a pipeline asynchronously, i.e., the result
        contains the necessary information to access the result and status of the
        operation. This method is intended for cases that require long-running
        workloads.

        The pipeline is identified by its resource name, formed by the parent user
        and ID of the pipeline.

        For more information, see [Trigger
        Pipeline](https://www.instill.tech/docs/latest/core/concepts/pipeline#trigger-pipeline).
      operationId: PipelinePublicService_TriggerAsyncUserPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaTriggerAsyncUserPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user_pipeline.name
          description: |-
            The resource name of the pipeline, which allows its access by parent user
            and ID.
            - Format: `users/{user.id}/pipelines/{pipeline.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              inputs:
                type: array
                items:
                  type: object
                description: Pipeline input parameters.
            description: |-
              TriggerUserPipelineRequest represents a request to trigger a user-owned
              pipeline synchronously.
            required:
              - inputs
      tags:
        - PipelinePublicService
  /v1beta/{user_pipeline.name}/validate:
    post:
      summary: Validate a pipeline a pipeline owned by a user
      description: |-
        Validates a pipeline by its resource name, which is defined by the parent
        user and the ID of the pipeline.

        Validation checks the recipe of the pipeline and the status of its components.
      operationId: PipelinePublicService_ValidateUserPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaValidateUserPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user_pipeline.name
          description: |-
            The resource name of the pipeline, which allows its access by parent user
            and ID.
            - Format: `users/{user.id}/pipelines/{pipeline.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            description: |-
              ValidateUserPipelineRequest represents a request to validate a pipeline
              owned by a user.
      tags:
        - PipelinePublicService
  /v1beta/{user_pipeline_release.name}:
    get:
      summary: Get a release in a pipeline owned by a user
      description: |-
        Gets the details of a pipeline release, where the pipeline is identified
        by its resource name, formed by its parent user and ID.
      operationId: PipelinePublicService_GetUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetUserPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user_pipeline_release.name
          description: |-
            The resource name of the pipeline release, which allows its access by
            parent pipeline and ID.
            - Format: `users/{user.id}/pipelines/{pipeline.id}/releases/{release.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+/releases/[^/]+
        - name: view
          description: |-
            View allows clients to specify the desired pipeline view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_RECIPE: Contains the recipe of the resource.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
      tags:
        - PipelinePublicService
    delete:
      summary: Delete a release in a pipeline owned by a user
      description: |-
        Deletes a pipeline release, where the pipeline is identified by its
        resource name, formed by its parent user and ID.

        The authenticated user must be the parent of the pipeline in order to
        perform this action.
      operationId: PipelinePublicService_DeleteUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaDeleteUserPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user_pipeline_release.name
          description: |-
            The resource name of the pipeline release, which allows its access by
            parent pipeline and ID.
            - Format: `users/{user.id}/pipelines/{pipeline.id}/releases/{release.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+/releases/[^/]+
      tags:
        - PipelinePublicService
  /v1beta/{user_pipeline_release.name}/rename:
    post:
      summary: Rename a release in a pipeline owned by a user
      description: |-
        Updates the ID of a pipeline release, where the pipeline is identified by
        its resource name, formed by the parent user and ID. Since this is an
        output-only field, a custom method is required to modify it.

        The pipeline release name will be updated accordingly, as it is  composed
        by the pipeline name and the ID of the release (e.g.
        `users/luigi/pipelines/pizza-recipe-generator/releases/v0.2.1`).

        The authenticated user must be the parent of the pipeline in order to
        perform this action.
      operationId: PipelinePublicService_RenameUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaRenameUserPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user_pipeline_release.name
          description: |-
            The resource name of the pipeline release, which allows its access by
            parent pipeline and ID.
            - Format: `users/{user.id}/pipelines/{pipeline.id}/releases/{release.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+/releases/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              new_pipeline_release_id:
                type: string
                description: |-
                  The new resource ID. This will transform the resource name into
                  `users/{user.id}/pipelines/{pipeline.id}/releases{new_release_id}`.
            description: |-
              RenameUserPipelineReleaseRequest represents a request to rename a release in
              a user-owned pipeline.
            required:
              - new_pipeline_release_id
      tags:
        - PipelinePublicService
  /v1beta/{user_pipeline_release.name}/restore:
    post:
      summary: Set the version of a pipeline owned by a user to a pinned release
      description: |-
        Sets the pipeline configuration to a pinned version defined by a release.

        The pipeline is identified by its resource name, formed by its parent user
        and ID.

        The authenticated user must be the parent of the pipeline in order to
        perform this action.
      operationId: PipelinePublicService_RestoreUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaRestoreUserPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user_pipeline_release.name
          description: |-
            The resource name of the pipeline release, which allows its access by
            parent pipeline and ID.
            - Format: `users/{user.id}/pipelines/{pipeline.id}/releases/{release.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+/releases/[^/]+
      tags:
        - PipelinePublicService
  /v1beta/{user_pipeline_release.name}/trigger:
    post:
      summary: Trigger a version of a pipeline owned by a user
      description: |-
        Triggers the synchronous execution of of a pipeline. While the trigger
        endpoint (where the release version isn't specified) triggers the pipeline
        at its latest release, this method allows the client to specified any
        committed release.

        The pipeline is identified by its resource name, formed by its parent user
        and ID.
      operationId: PipelinePublicService_TriggerUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaTriggerUserPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user_pipeline_release.name
          description: |-
            The resource name of the pipeline release, which allows its access by
            parent pipeline and ID.
            - Format: `users/{user.id}/pipelines/{pipeline.id}/releases/{release.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+/releases/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              inputs:
                type: array
                items:
                  type: object
                description: Pipeline input parameters.
            description: |-
              TriggerUserPipelineReleaseRequest represents a request to trigger a pinned
              release of a user-owned pipeline.
            required:
              - inputs
      tags:
        - PipelinePublicService
  /v1beta/{user_pipeline_release.name}/triggerAsync:
    post:
      summary: Trigger a version of a pipeline owned by a user asynchronously
      description: |-
        Triggers the asynchronous execution of of a pipeline. While the trigger
        endpoint (where the release version isn't specified) triggers the pipeline
        at its latest release, this method allows the client to specified any
        committed release.

        The pipeline is identified by its resource name, formed by its parent user
        and ID.
      operationId: PipelinePublicService_TriggerAsyncUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaTriggerAsyncUserPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user_pipeline_release.name
          description: |-
            The resource name of the pipeline release, which allows its access by
            parent pipeline and ID.
            - Format: `users/{user.id}/pipelines/{pipeline.id}/releases/{release.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+/releases/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              inputs:
                type: array
                items:
                  type: object
                description: Pipeline input parameters.
            description: |-
              TriggerUserPipelineReleaseRequest represents a request to trigger a pinned
              release of a user-owned pipeline asynchronously.
            required:
              - inputs
      tags:
        - PipelinePublicService
  /v1beta/{user_pipeline_release.name}/watch:
    get:
      summary: Get the state of a release in a pipeline owned by a user
      description: |-
        Gets the state of a pipeline release, where the pipeline is identified by
        its resource name, formed by the parent user and ID of the pipeline.
      operationId: PipelinePublicService_WatchUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaWatchUserPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user_pipeline_release.name
          description: |-
            The resource name of the pipeline release, which allows its access by
            parent pipeline and ID.
            - Format: `users/{user.id}/pipelines/{pipeline.id}/releases/{release.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+/releases/[^/]+
      tags:
        - PipelinePublicService
  /v1beta/auth/change_password:
    post:
      summary: Change password
      description: Updates the password of a user.
      operationId: MgmtPublicService_AuthChangePassword
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaAuthChangePasswordResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          description: AuthChangePasswordRequest represents a request to update a user's password.
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1betaAuthChangePasswordRequest'
      tags:
        - MgmtPublicService
  /v1beta/auth/login:
    post:
      summary: Log in a user
      description: Authenticates a user and returns an access token.
      operationId: MgmtPublicService_AuthLogin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaAuthLoginResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: username
          description: Username.
          in: query
          required: true
          type: string
        - name: password
          description: Password.
          in: query
          required: true
          type: string
      tags:
        - MgmtPublicService
  /v1beta/auth/logout:
    post:
      summary: Log out a user
      description: Logs out an authenticated user.
      operationId: MgmtPublicService_AuthLogout
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaAuthLogoutResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      tags:
        - MgmtPublicService
  /v1beta/auth/token_issuer:
    post:
      summary: Get Auth token issuer
      description: Returns the auth token issuer details. This operation requires admin permissions.
      operationId: MgmtPublicService_AuthTokenIssuer
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaAuthTokenIssuerResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          description: |-
            AuthTokenIssuerRequest represents a request to fetch the issuer details of a
            token.
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1betaAuthTokenIssuerRequest'
      tags:
        - MgmtPublicService
  /v1beta/auth/validate_access_token:
    post:
      summary: Validate an access token
      description: Checks the validity of an access token.
      operationId: MgmtPublicService_AuthValidateAccessToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaAuthValidateAccessTokenResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      tags:
        - MgmtPublicService
  /v1beta/check-namespace:
    post:
      summary: Check if a namespace is in use
      description: |-
        Returns the availability of a namespace or, alternatively, the type of
        resource that is using it.
      operationId: MgmtPublicService_CheckNamespace
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaCheckNamespaceResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          description: |-
            CheckNamespaceRequest represents a request to verify if a namespace is
            available.
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1betaCheckNamespaceRequest'
      tags:
        - MgmtPublicService
  /v1beta/connector-definitions:
    get:
      summary: List connector definitions
      description: Returns a paginated list of connector definitions.
      operationId: PipelinePublicService_ListConnectorDefinitions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListConnectorDefinitionsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of connector definitions to return. If this parameter
            is unspecified, at most 10 pipelines will be returned. The cap value for
            this parameter is 100 (i.e. any value above that will be coerced to 100).
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token.
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View allows clients to specify the desired resource view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
        - name: filter
          description: |-
            Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
            expression.
            - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
          in: query
          required: false
          type: string
      tags:
        - PipelinePublicService
  /v1beta/connectors:
    get:
      summary: List connectors
      description: Returns all the connectors that are visible to the authenticated user.
      operationId: PipelinePublicService_ListConnectors
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListConnectorsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of connectors to return. The service may return fewer
            than this value. If unspecified, at most 10 connectors will be returned.
            The maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token.
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View allows clients to specify the desired resource view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_CONFIGURATION: Contains the connector configuration.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_CONFIGURATION
        - name: filter
          description: |-
            Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
            expression.
            - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Include soft-deleted connectors in the result.
          in: query
          required: false
          type: boolean
      tags:
        - PipelinePublicService
  /v1beta/metrics/vdp/connector/charts:
    get:
      summary: List connector execution computation time charts
      description: |-
        Returns a paginated list with connector execution times, aggregated by
        connector and time frames.
      operationId: MgmtPublicService_ListConnectorExecuteChartRecords
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListConnectorExecuteChartRecordsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: aggregation_window
          description: Aggregation window in nanoseconds.
          in: query
          required: false
          type: integer
          format: int32
        - name: filter
          description: |-
            Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
            expression.
            - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1beta/metrics/vdp/connector/executes:
    get:
      summary: List connector executions
      description: Returns a paginated list of connector executions.
      operationId: MgmtPublicService_ListConnectorExecuteRecords
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListConnectorExecuteRecordsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of executions to return. If this parameter is
            unspecified, at most 100 pipelines will be returned. The cap value for
            this parameter is 1000 (i.e. any value above that will be coerced to
            1000).
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token.
          in: query
          required: false
          type: string
        - name: filter
          description: |-
            Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
            expression.
            - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1beta/metrics/vdp/connector/tables:
    get:
      summary: List connector execution metrics
      description: Returns a paginated list of connector executions aggregated by connector.
      operationId: MgmtPublicService_ListConnectorExecuteTableRecords
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListConnectorExecuteTableRecordsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of results to return. If this parameter is unspecified,
            at most 100 pipelines will be returned. The cap value for this parameter
            is 1000 (i.e. any value above that will be coerced to 1000).
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token.
          in: query
          required: false
          type: string
        - name: filter
          description: |-
            Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
            expression.
            - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1beta/metrics/vdp/pipeline/charts:
    get:
      summary: List pipeline trigger computation time charts
      description: |-
        Returns a paginated list with pipeline trigger execution times, aggregated
        by pipeline and time frames.
      operationId: MgmtPublicService_ListPipelineTriggerChartRecords
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListPipelineTriggerChartRecordsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: aggregation_window
          description: Aggregation window in nanoseconds.
          in: query
          required: false
          type: integer
          format: int32
        - name: filter
          description: |-
            Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
            expression.
            - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1beta/metrics/vdp/pipeline/tables:
    get:
      summary: List pipeline trigger metrics
      description: Returns a paginated list of pipeline executions aggregated by pipeline ID.
      operationId: MgmtPublicService_ListPipelineTriggerTableRecords
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListPipelineTriggerTableRecordsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of results to return. If this parameter is unspecified,
            at most 100 pipelines will be returned. The cap value for this parameter
            is 1000 (i.e. any value above that will be coerced to 1000).
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token.
          in: query
          required: false
          type: string
        - name: filter
          description: |-
            Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
            expression.
            - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1beta/metrics/vdp/pipeline/triggers:
    get:
      summary: List pipeline triggers
      description: Returns a paginated list of pipeline executions.
      operationId: MgmtPublicService_ListPipelineTriggerRecords
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListPipelineTriggerRecordsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of triggers to return. If this parameter is unspecified,
            at most 100 pipelines will be returned. The cap value for this parameter is
            1000 (i.e. any value above that will be coerced to 100).
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token.
          in: query
          required: false
          type: string
        - name: filter
          description: |-
            Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
            expression.
            - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1beta/operator-definitions:
    get:
      summary: List operator definitions
      description: Returns a paginated list of operator definitions.
      operationId: PipelinePublicService_ListOperatorDefinitions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListOperatorDefinitionsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of OperatorDefinitions to return. The
            service may return fewer than this value. If unspecified, at most 10
            OperatorDefinitions will be returned. The maximum value is 100;
            values above 100 will be coerced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token.
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View allows clients to specify the desired resource view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
        - name: filter
          description: |-
            Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
            expression.
            - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
          in: query
          required: false
          type: string
      tags:
        - PipelinePublicService
  /v1beta/organizations:
    get:
      summary: List organizations
      description: Returns a paginated list of organizations.
      operationId: MgmtPublicService_ListOrganizations
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListOrganizationsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of organizations to return. If this parameter is
            unspecified, at most 10 pipelines will be returned. The cap value for this
            parameter is 100 (i.e. any value above that will be coerced to 100).
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token.
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View allows clients to specify the desired resource view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
        - name: filter
          description: |-
            Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
            expression.
            - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
    post:
      summary: Create an organization
      description: Creates an organization.
      operationId: MgmtPublicService_CreateOrganization
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaCreateOrganizationResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization
          description: The properties of the organization to be created.
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1betaOrganization'
            required:
              - organization
      tags:
        - MgmtPublicService
  /v1beta/pipelines:
    get:
      summary: List accessible pipelines
      description: Returns a paginated list of pipelines that are visible to the requester.
      operationId: PipelinePublicService_ListPipelines
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListPipelinesResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of pipelines to return. If this parameter is
            unspecified, at most 10 pipelines will be returned. The cap value for this
            parameter is 100 (i.e. any value above that will be coerced to 100).
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token.
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View allows clients to specify the desired pipeline view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_RECIPE: Contains the recipe of the resource.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
        - name: filter
          description: |-
            Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
            expression.
            - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
            - Example:
            `recipe.components.definition_name:"operator-definitions/2ac8be70-0f7a-4b61-a33d-098b8acfa6f3"`.
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Include soft-deleted pipelines in the result.
          in: query
          required: false
          type: boolean
      tags:
        - PipelinePublicService
  /v1beta/tokens:
    get:
      summary: List API tokens
      description: Returns a paginated list of the API tokens of the authenticated user.
      operationId: MgmtPublicService_ListTokens
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListTokensResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of tokens to return. If this parameter is unspecified,
            at most 10 pipelines will be returned. The cap value for this parameter is
            100 (i.e. any value above that will be coerced to 100).
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token.
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
    post:
      summary: Create an API token
      description: Creates an API token for the authenticated user.
      operationId: MgmtPublicService_CreateToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaCreateTokenResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: token
          description: The properties of the token to be created.
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1betaApiToken'
            required:
              - token
      tags:
        - MgmtPublicService
  /v1beta/users:
    get:
      summary: List users
      description: Returns a paginated list of users.
      operationId: MgmtPublicService_ListUsers
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListUsersResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of users to return. If this parameter is unspecified,
            at most 10 pipelines will be returned. The cap value for this parameter is
            100 (i.e. any value above that will be coerced to 100).
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token.
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View allows clients to specify the desired resource view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
        - name: filter
          description: |-
            Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
            expression.
            - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1beta/users/me:
    patch:
      summary: Update a user
      description: |-
        Accesses and updates a user by ID. The authenticated user must match the
        target in order to modify it.

        In REST requests, only the supplied user fields will be taken into account
        when updating the resource.
      operationId: MgmtPublicService_PatchAuthenticatedUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaPatchAuthenticatedUserResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user
          description: The user fields that will replace the existing ones.
          in: body
          required: true
          schema:
            $ref: '#/definitions/mgmtv1betaUser'
            required:
              - user
      tags:
        - MgmtPublicService
  /v1beta/validate_token:
    post:
      summary: Validate an API token.
      description: Validates an API token.
      operationId: MgmtPublicService_ValidateToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaValidateTokenResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      tags:
        - MgmtPublicService
definitions:
  AuthTokenIssuerResponseUnsignedAccessToken:
    type: object
    properties:
      aud:
        type: string
        description: Audience.
      iss:
        type: string
        description: Issuer.
      sub:
        type: string
        description: Subject.
      jti:
        type: string
        description: Unique identifier of the user.
      exp:
        type: integer
        format: int32
        description: Expiration date.
    description: UnsignedAccessToken contains the token issuer information.
  CheckNamespaceResponseNamespace:
    type: string
    enum:
      - NAMESPACE_AVAILABLE
      - NAMESPACE_USER
      - NAMESPACE_ORGANIZATION
      - NAMESPACE_RESERVED
    description: |-
      Namespace contains information about the availability of a namespace.

       - NAMESPACE_UNSPECIFIED: Unspecified.
       - NAMESPACE_AVAILABLE: Available.
       - NAMESPACE_USER: Namespace belongs to a user.
       - NAMESPACE_ORGANIZATION: Namespace belongs to an organization.
       - NAMESPACE_RESERVED: Reserved.
  HealthCheckResponseServingStatus:
    type: string
    enum:
      - SERVING_STATUS_SERVING
      - SERVING_STATUS_NOT_SERVING
    description: |-
      - SERVING_STATUS_UNSPECIFIED: Serving status: UNSPECIFIED
       - SERVING_STATUS_SERVING: Serving status: SERVING
       - SERVING_STATUS_NOT_SERVING: Serving status: NOT SERVING
    title: ServingStatus enumerates the status of a queried service
  SessionService:
    type: string
    enum:
      - SERVICE_MGMT
      - SERVICE_CONNECTOR
      - SERVICE_MODEL
      - SERVICE_PIPELINE
    description: |-
      - SERVICE_UNSPECIFIED: Service: UNSPECIFIED
       - SERVICE_MGMT: Service: MGMT
       - SERVICE_CONNECTOR: Service: CONNECTOR
       - SERVICE_MODEL: Service: MODEL
       - SERVICE_PIPELINE: Service: PIPELINE
    title: Service enumerates the services to collect data from
  SharingShareCode:
    type: object
    properties:
      user:
        type: string
        description: |-
          Defines which users will be able to access the resource through the
          code. This is a pattern that will be checked against user names.

          For now, the only accepted value is `*/*`.
      code:
        type: string
        description: The public URL that allows users to access the resource.
      enabled:
        type: boolean
        description: Defines whether the sharing option via link is enabled.
      role:
        $ref: '#/definitions/v1betaRole'
        description: Defines the role users will have over the resource.
    description: ShareCode describes a sharing configuration through a link.
  UserUsageDataConnectorExecuteData:
    type: object
    properties:
      connector_uid:
        type: string
        title: UID for the executed connector
      execute_uid:
        type: string
        title: UID for the execute log
      execute_time:
        type: string
        format: date-time
        title: Timestamp for the execution
      connector_definition_uid:
        type: string
        title: Definition UID of the connector
      status:
        $ref: '#/definitions/mgmtv1betaStatus'
        title: Final status of the execution
      user_uid:
        type: string
        title: UUID of the user who execute the connector
      user_type:
        $ref: '#/definitions/v1betaOwnerType'
        title: Type of the user who execute the connector
    title: Per execute usage metadata
    required:
      - connector_uid
      - execute_uid
      - execute_time
      - connector_definition_uid
      - status
      - user_uid
      - user_type
  UserUsageDataModelTriggerData:
    type: object
    properties:
      model_uid:
        type: string
        title: UID for the trigged model
      trigger_uid:
        type: string
        title: UID for the trigger log
      trigger_time:
        type: string
        format: date-time
        title: Timestamp for the trigger
      model_definition_uid:
        type: string
        title: Definition UID of the model
      model_task:
        $ref: '#/definitions/v1alphaTask'
        title: Task of the model
      status:
        $ref: '#/definitions/mgmtv1betaStatus'
        title: Final status of the execution
      user_uid:
        type: string
        title: UUID of the user who trigger the model
      user_type:
        $ref: '#/definitions/v1betaOwnerType'
        title: Type of the user who trigger the model
    title: Per trigger usage metadata
    required:
      - model_uid
      - trigger_uid
      - trigger_time
      - model_definition_uid
      - model_task
      - status
      - user_uid
      - user_type
  UserUsageDataPipelineTriggerData:
    type: object
    properties:
      pipeline_uid:
        type: string
        title: UID for the triggered pipeline
      trigger_uid:
        type: string
        title: UID for the trigger log
      trigger_time:
        type: string
        format: date-time
        title: Timestamp for the trigger
      trigger_mode:
        $ref: '#/definitions/v1betaMode'
        title: Trigger mode
      status:
        $ref: '#/definitions/mgmtv1betaStatus'
        title: Final status of the execution
      pipeline_release_id:
        type: string
        title: Version for the triggered release pipeline, empty string if not release
      pipeline_release_uid:
        type: string
        title: UID for the triggered release pipeline, empty string if not release
      user_uid:
        type: string
        title: UUID of the user who trigger the pipeline
      user_type:
        $ref: '#/definitions/v1betaOwnerType'
        title: Type of the user who trigger the pipeline
    title: Per trigger usage metadata
    required:
      - pipeline_uid
      - trigger_uid
      - trigger_time
      - trigger_mode
      - status
      - pipeline_release_id
      - pipeline_release_uid
      - user_uid
      - user_type
  controllerv1alphaDeleteResourceResponse:
    type: object
    title: DeleteResourceResponse represents an empty response
  controllerv1alphaGetResourceResponse:
    type: object
    properties:
      resource:
        $ref: '#/definitions/controllerv1alphaResource'
        title: Retrieved resource state
    title: GetResourceResponse represents a response to fetch a resource's state
  controllerv1alphaResource:
    type: object
    properties:
      resource_permalink:
        type: string
        title: |-
          Permalink of a resource. For example:
          "resources/{resource_uuid}/types/{type}"
      model_state:
        $ref: '#/definitions/v1alphaModelState'
        title: Model state
      backend_state:
        $ref: '#/definitions/HealthCheckResponseServingStatus'
        title: Backend service state
      progress:
        type: integer
        format: int32
        title: Resource longrunning progress
    title: Resource represents the current information of a resource
    required:
      - resource_permalink
  controllerv1alphaUpdateResourceResponse:
    type: object
    properties:
      resource:
        $ref: '#/definitions/controllerv1alphaResource'
        title: Updated resource state
    title: UpdateResourceResponse represents a response to update a resource's state
  controllerv1betaDeleteResourceResponse:
    type: object
    title: DeleteResourceResponse represents an empty response
  controllerv1betaGetResourceResponse:
    type: object
    properties:
      resource:
        $ref: '#/definitions/controllerv1betaResource'
        title: Retrieved resource state
    title: GetResourceResponse represents a response to fetch a resource's state
  controllerv1betaResource:
    type: object
    properties:
      resource_permalink:
        type: string
        title: |-
          Permalink of a resouce. For example:
          "resources/{resource_uuid}/types/{type}"
      pipeline_state:
        $ref: '#/definitions/pipelinev1betaState'
        title: Pipeline state
      connector_state:
        $ref: '#/definitions/v1betaConnectorState'
        title: Connector state
      backend_state:
        $ref: '#/definitions/HealthCheckResponseServingStatus'
        title: Backend service state
      progress:
        type: integer
        format: int32
        title: Resource longrunning progress
    title: Resource represents the current information of a resource
    required:
      - resource_permalink
  controllerv1betaUpdateResourceResponse:
    type: object
    properties:
      resource:
        $ref: '#/definitions/controllerv1betaResource'
        title: Updated resource state
    title: UpdateResourceResponse represents a response to update a resource's state
  coreusagev1betaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1betaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  coreusagev1betaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1betaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  googlelongrunningOperation:
    type: object
    properties:
      name:
        type: string
        description: |-
          The server-assigned name, which is only unique within the same service that
          originally returns it. If you use the default HTTP mapping, the
          `name` should be a resource name ending with `operations/{unique_id}`.
      metadata:
        $ref: '#/definitions/protobufAny'
        description: |-
          Service-specific metadata associated with the operation.  It typically
          contains progress information and common metadata such as create time.
          Some services might not provide such metadata.  Any method that returns a
          long-running operation should document the metadata type, if any.
      done:
        type: boolean
        description: |-
          If the value is `false`, it means the operation is still in progress.
          If `true`, the operation is completed, and either `error` or `response` is
          available.
      error:
        $ref: '#/definitions/googlerpcStatus'
        description: The error result of the operation in case of failure or cancellation.
      response:
        $ref: '#/definitions/protobufAny'
        description: |-
          The normal response of the operation in case of success.  If the original
          method returns no data on success, such as `Delete`, the response is
          `google.protobuf.Empty`.  If the original method is standard
          `Get`/`Create`/`Update`, the response should be the resource.  For other
          methods, the response should have the type `XxxResponse`, where `Xxx`
          is the original method name.  For example, if the original method name
          is `TakeSnapshot()`, the inferred response type is
          `TakeSnapshotResponse`.
    description: |-
      This resource represents a long-running operation that is the result of a
      network API call.
  googlerpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
        description: |-
          The status code, which should be an enum value of
          [google.rpc.Code][google.rpc.Code].
      message:
        type: string
        description: |-
          A developer-facing error message, which should be in English. Any
          user-facing error message should be localized and sent in the
          [google.rpc.Status.details][google.rpc.Status.details] field, or localized
          by the client.
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
        description: |-
          A list of messages that carry the error details.  There is a common set of
          message types for APIs to use.
    description: |-
      The `Status` type defines a logical error model that is suitable for
      different programming environments, including REST APIs and RPC APIs. It is
      used by [gRPC](https://github.com/grpc). Each `Status` message contains
      three pieces of data: error code, error message, and error details.

      You can find out more about this error model and how to work with it in the
      [API Design Guide](https://cloud.google.com/apis/design/errors).
  mgmtv1betaStatus:
    type: string
    enum:
      - STATUS_COMPLETED
      - STATUS_ERRORED
    description: |-
      Status describes the output of an execution.

       - STATUS_UNSPECIFIED: Unspecified.
       - STATUS_COMPLETED: Successfully completed.
       - STATUS_ERRORED: Finished with error.
  mgmtv1betaUser:
    type: object
    properties:
      name:
        type: string
        description: |-
          The name of the user, defined by its ID.
          - Format: `users/{user.id}`.
        readOnly: true
      uid:
        type: string
        description: |-
          User UUID. This field is optionally set by users on creation (it will be
          server-generated if unspecified).
      id:
        type: string
        description: |-
          Resource ID (used in `name` as the last segment). This conforms to
          RFC-1034, which restricts to letters, numbers, and hyphen, with the first
          character a letter, the last a letter or a number, and a 63 character
          maximum.

          Note that the ID can be updated.
      create_time:
        type: string
        format: date-time
        description: Creation time.
        readOnly: true
      update_time:
        type: string
        format: date-time
        description: Update time.
        readOnly: true
      email:
        type: string
        description: Email.
      customer_id:
        type: string
        description: Stripe customer ID. This field is used in Instill Cloud.
        readOnly: true
      first_name:
        type: string
        description: First name.
      last_name:
        type: string
        description: Last name.
      org_name:
        type: string
        description: Company or institution name.
      role:
        type: string
        description: |-
          Role.

          It must be one of the following allowed roles:
          - `manager`
          - `ai-researcher`
          - `ai-engineer`
          - `data-engineer`
          - `data-scientist`
          - `analytics-engineer`
          - `hobbyist`
      newsletter_subscription:
        type: boolean
        description: This defines whether the user is subscribed to Instill AI's newsletter.
      cookie_token:
        type: string
        description: Console cookie token.
      profile_avatar:
        type: string
        description: Profile Avatar in base64.
      profile_data:
        type: object
        description: Profile Data.
    description: User describes an individual that interacts with Instill AI.
    required:
      - id
      - email
      - newsletter_subscription
  mgmtv1betaView:
    type: string
    enum:
      - VIEW_BASIC
      - VIEW_FULL
    description: |-
      View defines how a resource is presented. It can be used as a parameter in a
      method request to allow clients to select the amount of information they
      want in the response.

       - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
       - VIEW_BASIC: Default view, only includes basic information.
       - VIEW_FULL: Full representation.
  modelcontrollerv1alphaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1betaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  modelcontrollerv1alphaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1betaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  modelmodelv1alphaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1betaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  modelmodelv1alphaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1betaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  modelv1alphaView:
    type: string
    enum:
      - VIEW_BASIC
      - VIEW_FULL
    description: |-
      View represents a view of any resource. The resource view is implemented by
      adding a parameter to the method request which allows the client to specify
      which view of the resource it wants to receive in the response.

       - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
       - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
       - VIEW_FULL: View: FULL, full representation of the resource
  pipelinev1betaState:
    type: string
    enum:
      - STATE_INACTIVE
      - STATE_ACTIVE
      - STATE_ERROR
    description: |-
      State describes the state of a pipeline.

       - STATE_UNSPECIFIED: Unspecified.
       - STATE_INACTIVE: Inactive.
       - STATE_ACTIVE: Active.
       - STATE_ERROR: The pipeline has an error.
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
        description: |-
          A URL/resource name that uniquely identifies the type of the serialized
          protocol buffer message. This string must contain at least
          one "/" character. The last segment of the URL's path must represent
          the fully qualified name of the type (as in
          `path/google.protobuf.Duration`). The name should be in a canonical form
          (e.g., leading "." is not accepted).

          In practice, teams usually precompile into the binary all types that they
          expect it to use in the context of Any. However, for URLs which use the
          scheme `http`, `https`, or no scheme, one can optionally set up a type
          server that maps type URLs to message definitions as follows:

          * If no scheme is provided, `https` is assumed.
          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
            value in binary format, or produce an error.
          * Applications are allowed to cache lookup results based on the
            URL, or have them precompiled into a binary to avoid any
            lookup. Therefore, binary compatibility needs to be preserved
            on changes to types. (Use versioned type names to manage
            breaking changes.)

          Note: this functionality is not currently available in the official
          protobuf release, and it is not used for type URLs beginning with
          type.googleapis.com. As of May 2023, there are no widely used type server
          implementations and no plans to implement one.

          Schemes other than `http`, `https` (or the empty scheme) might be
          used with implementation specific semantics.
    additionalProperties: {}
    description: |-
      `Any` contains an arbitrary serialized protocol buffer message along with a
      URL that describes the type of the serialized message.

      Protobuf library provides support to pack/unpack Any values in the form
      of utility functions or additional generated methods of the Any type.

      Example 1: Pack and unpack a message in C++.

          Foo foo = ...;
          Any any;
          any.PackFrom(foo);
          ...
          if (any.UnpackTo(&foo)) {
            ...
          }

      Example 2: Pack and unpack a message in Java.

          Foo foo = ...;
          Any any = Any.pack(foo);
          ...
          if (any.is(Foo.class)) {
            foo = any.unpack(Foo.class);
          }
          // or ...
          if (any.isSameTypeAs(Foo.getDefaultInstance())) {
            foo = any.unpack(Foo.getDefaultInstance());
          }

       Example 3: Pack and unpack a message in Python.

          foo = Foo(...)
          any = Any()
          any.Pack(foo)
          ...
          if any.Is(Foo.DESCRIPTOR):
            any.Unpack(foo)
            ...

       Example 4: Pack and unpack a message in Go

           foo := &pb.Foo{...}
           any, err := anypb.New(foo)
           if err != nil {
             ...
           }
           ...
           foo := &pb.Foo{}
           if err := any.UnmarshalTo(foo); err != nil {
             ...
           }

      The pack methods provided by protobuf library will by default use
      'type.googleapis.com/full.type.name' as the type URL and the unpack
      methods only use the fully qualified type name after the last '/'
      in the type URL, for example "foo.bar.com/x/y.z" will yield type
      name "y.z".

      JSON
      ====
      The JSON representation of an `Any` value uses the regular
      representation of the deserialized, embedded message, with an
      additional field `@type` which contains the type URL. Example:

          package google.profile;
          message Person {
            string first_name = 1;
            string last_name = 2;
          }

          {
            "@type": "type.googleapis.com/google.profile.Person",
            "firstName": <string>,
            "lastName": <string>
          }

      If the embedded message type is well-known and has a custom JSON
      representation, that representation will be embedded adding a field
      `value` which holds the custom JSON in addition to the `@type`
      field. Example (for message [google.protobuf.Duration][]):

          {
            "@type": "type.googleapis.com/google.protobuf.Duration",
            "value": "1.212s"
          }
  protobufNullValue:
    type: string
    description: |-
      `NullValue` is a singleton enumeration to represent the null value for the
      `Value` type union.

      The JSON representation for `NullValue` is JSON `null`.

       - NULL_VALUE: Null value.
  v1alphaBoundingBox:
    type: object
    properties:
      top:
        type: number
        format: float
        title: Bounding box top y-axis value
        readOnly: true
      left:
        type: number
        format: float
        title: Bounding box left x-axis value
        readOnly: true
      width:
        type: number
        format: float
        title: Bounding box width value
        readOnly: true
      height:
        type: number
        format: float
        title: Bounding box height value
        readOnly: true
    title: BoundingBox represents the bounding box data structure
  v1alphaCheckModelAdminResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1alphaModelState'
        title: Retrieved model state
    title: |-
      CheckModelAdminResponse represents a response to fetch a model's
      current state and longrunning progress
  v1alphaClassificationInput:
    type: object
    properties:
      image_url:
        type: string
        title: Image type URL
      image_base64:
        type: string
        title: Image type base64
    title: ClassificationInput represents the input of classification task
  v1alphaClassificationInputStream:
    type: object
    properties:
      file_lengths:
        type: array
        items:
          type: integer
          format: int64
        title: The list of file length for each uploaded binary file
      content:
        type: string
        format: byte
        title: Content of images in bytes
    title: |-
      ClassificationInputStream represents the input of classification task when
      using stream method
    required:
      - file_lengths
      - content
  v1alphaClassificationOutput:
    type: object
    properties:
      category:
        type: string
        title: Classification category
        readOnly: true
      score:
        type: number
        format: float
        title: Classification score
        readOnly: true
    title: ClassificationOutput represents the output of classification task
  v1alphaContent:
    type: object
    properties:
      type:
        type: string
        title: Type of Content
      content:
        type: string
        title: Content of Text Message
      prompt_image:
        $ref: '#/definitions/v1alphaPromptImage'
        title: Content of Image
    title: Content used for chat history in text generation model
  v1alphaCreateUserModelBinaryFileUploadResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: Create model operation message
        readOnly: true
    title: CreateUserModelBinaryFileUploadResponse represents a response for a model
  v1alphaCreateUserModelResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: Create model operation message
        readOnly: true
    title: CreateUserModelResponse represents a response for a model
  v1alphaDeleteUserModelResponse:
    type: object
    title: DeleteUserModelResponse represents an empty response
  v1alphaDeployModelAdminResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: Deploy operation message
    title: DeployModelAdminResponse represents a response for a deployed model
  v1alphaDeployUserModelResponse:
    type: object
    properties:
      model_id:
        type: string
        title: |-
          Deployed model's id
          Format: users/{user}/models/{model}
    title: DeployUserModelResponse represents a response for a deployed model
  v1alphaDetectionInput:
    type: object
    properties:
      image_url:
        type: string
        title: Image type URL
      image_base64:
        type: string
        title: Image type base64
    title: DetectionInput represents the input of detection task
  v1alphaDetectionInputStream:
    type: object
    properties:
      file_lengths:
        type: array
        items:
          type: integer
          format: int64
        title: The list of file length for each uploaded binary file
      content:
        type: string
        format: byte
        title: Content of images in bytes
    title: |-
      DetectionInputStream represents the input of detection task when using stream
      method
    required:
      - file_lengths
      - content
  v1alphaDetectionObject:
    type: object
    properties:
      category:
        type: string
        title: Detection object category
        readOnly: true
      score:
        type: number
        format: float
        title: Detection object score
        readOnly: true
      bounding_box:
        $ref: '#/definitions/v1alphaBoundingBox'
        title: Detection bounding box
        readOnly: true
    title: DetectionObject represents a predicted object
  v1alphaDetectionOutput:
    type: object
    properties:
      objects:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaDetectionObject'
        title: A list of detection objects
        readOnly: true
    title: DetectionOutput represents the output of detection task
  v1alphaGetModelDefinitionResponse:
    type: object
    properties:
      model_definition:
        $ref: '#/definitions/v1alphaModelDefinition'
        title: A model definition instance
    title: GetModelDefinitionResponse represents a response for a model definition
  v1alphaGetModelOperationResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: The retrieved model operation
    title: GetModelOperationResponse represents a response for a model operation
  v1alphaGetUserModelCardResponse:
    type: object
    properties:
      readme:
        $ref: '#/definitions/v1alphaModelCard'
        title: Retrieved model card
    title: GetUserModelCardResponse represents a response to fetch a model's README card
  v1alphaGetUserModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: The retrieved model
    title: GetUserModelResponse represents a response for a model
  v1alphaImageToImageInput:
    type: object
    properties:
      prompt_image_url:
        type: string
        title: Image type URL
      prompt_image_base64:
        type: string
        title: Image type base64
      prompt:
        type: string
        title: The prompt text
      steps:
        type: integer
        format: int32
        title: The steps, default is 5
      cfg_scale:
        type: number
        format: float
        title: The guidance scale, default is 7.5
      seed:
        type: integer
        format: int32
        title: The seed, default is 0
      samples:
        type: integer
        format: int32
        title: The number of generated samples, default is 1
      extra_params:
        type: object
        title: The extra parameters
    title: ImageToImageInput represents the input of image to image task
    required:
      - prompt
  v1alphaImageToImageOutput:
    type: object
    properties:
      images:
        type: array
        items:
          type: string
        title: List of generated images
        readOnly: true
    title: ImageToImageOutput represents the output of image to image task
  v1alphaInstanceSegmentationInput:
    type: object
    properties:
      image_url:
        type: string
        title: Image type URL
      image_base64:
        type: string
        title: Image type base64
    title: InstanceSegmentationInput represents the input of instance segmentation task
  v1alphaInstanceSegmentationInputStream:
    type: object
    properties:
      file_lengths:
        type: array
        items:
          type: integer
          format: int64
        title: The list of file length for each uploaded binary file
      content:
        type: string
        format: byte
        title: Content of images in bytes
    title: |-
      InstanceSegmentationInputStream represents the input of instance segmentation
      task when using stream method
    required:
      - file_lengths
      - content
  v1alphaInstanceSegmentationObject:
    type: object
    properties:
      rle:
        type: string
        title: Instance RLE segmentation mask
        readOnly: true
      category:
        type: string
        title: Instance category
        readOnly: true
      score:
        type: number
        format: float
        title: Instance score
        readOnly: true
      bounding_box:
        $ref: '#/definitions/v1alphaBoundingBox'
        title: Instance bounding box
        readOnly: true
    title: InstanceSegmentationObject corresponding to a instance segmentation object
  v1alphaInstanceSegmentationOutput:
    type: object
    properties:
      objects:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaInstanceSegmentationObject'
        title: A list of instance segmentation objects
        readOnly: true
    title: |-
      InstanceSegmentationOutput represents the output of instance segmentation
      task
  v1alphaKeypoint:
    type: object
    properties:
      x:
        type: number
        format: float
        title: x coordinate
        readOnly: true
      "y":
        type: number
        format: float
        title: y coordinate
        readOnly: true
      v:
        type: number
        format: float
        title: visibility
        readOnly: true
    title: Keypoint structure which include coordinate and keypoint visibility
  v1alphaKeypointInput:
    type: object
    properties:
      image_url:
        type: string
        title: Image type URL
      image_base64:
        type: string
        title: Image type base64
    title: KeypointInput represents the input of keypoint detection task
  v1alphaKeypointInputStream:
    type: object
    properties:
      file_lengths:
        type: array
        items:
          type: integer
          format: int64
        title: The list of file length for each uploaded binary file
      content:
        type: string
        format: byte
        title: Content of images in bytes
    title: |-
      KeypointInputStream represents the input of keypoint detection task when
      using stream method
    required:
      - file_lengths
      - content
  v1alphaKeypointObject:
    type: object
    properties:
      keypoints:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaKeypoint'
        title: Keypoints
        readOnly: true
      score:
        type: number
        format: float
        title: Keypoint score
        readOnly: true
      bounding_box:
        $ref: '#/definitions/v1alphaBoundingBox'
        title: Bounding box object
        readOnly: true
    title: KeypointObject corresponding to a person object
  v1alphaKeypointOutput:
    type: object
    properties:
      objects:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaKeypointObject'
        title: A list of keypoint objects
        readOnly: true
    title: KeypointOutput represents the output of keypoint detection task
  v1alphaListModelDefinitionsResponse:
    type: object
    properties:
      model_definitions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaModelDefinition'
        title: a list of ModelDefinition instances
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of model definitions
    title: |-
      ListModelDefinitionsResponse represents a response to list all supported
      model definitions
  v1alphaListModelsAdminResponse:
    type: object
    properties:
      models:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaModel'
        title: a list of Models
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of models
    title: ListModelsAdminResponse represents a response for a list of models
  v1alphaListModelsResponse:
    type: object
    properties:
      models:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaModel'
        title: a list of Models
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of models
    title: ListModelsResponse represents a response for a list of models
  v1alphaListUserModelsResponse:
    type: object
    properties:
      models:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaModel'
        title: a list of Models
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of models
    title: ListUserModelsResponse represents a response for a list of models
  v1alphaLookUpModelAdminResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: A model resource
    title: LookUpModelResponse represents a response for a model
  v1alphaLookUpModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: A model resource
    title: LookUpModelResponse represents a response for a model
  v1alphaModel:
    type: object
    properties:
      name:
        type: string
        title: |-
          Resource name. It must have the format of "users/{user}/models/{model}".
          For example: "users/instill-ai/models/yolov4"
        readOnly: true
      uid:
        type: string
        title: Model ID in UUIDv4
        readOnly: true
      id:
        type: string
        description: |-
          Resource ID (the last segment of the resource name) used to construct the
          resource name. This conforms to RFC-1034, which restricts to letters,
          numbers, and hyphen, with the first character a letter, the last a letter
          or a number, and a 63 character maximum.
      description:
        type: string
        title: Model description
      model_definition:
        type: string
        title: Model definition resource name
      configuration:
        type: object
        title: |-
          Model configuration represents the configuration JSON that has been
          validated using the `model_spec` JSON schema of a ModelDefinition
      task:
        $ref: '#/definitions/v1alphaTask'
        title: Model task
        readOnly: true
      state:
        $ref: '#/definitions/v1alphaModelState'
        title: Model state
        readOnly: true
      visibility:
        $ref: '#/definitions/v1alphaModelVisibility'
        title: Model visibility including public or private
        readOnly: true
      create_time:
        type: string
        format: date-time
        title: Model create time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: Model update time
        readOnly: true
      delete_time:
        type: string
        format: date-time
        title: Model delete time
        readOnly: true
      owner_name:
        type: string
        title: Owner Name
        readOnly: true
      owner:
        type: object
        title: Owner details
        readOnly: true
    title: Model represents a model
  v1alphaModelCard:
    type: object
    properties:
      name:
        type: string
        title: |-
          Resource name. It must have the format of
          "users/{user}/models/{model}/readme"
        readOnly: true
      size:
        type: integer
        format: int32
        title: Size of the file
        readOnly: true
      type:
        type: string
        description: Type of the resource. Fixed to "file".
        readOnly: true
      content:
        type: string
        format: byte
        title: Content of the README file in bytes and base64 format
        readOnly: true
      encoding:
        type: string
        description: Encoding type of the content. Fixed to "base64".
        readOnly: true
    description: |-
      ModelCard represents the README card for a model. There
      exists one and exactly one README card per model.
  v1alphaModelDefinition:
    type: object
    properties:
      name:
        type: string
        title: |-
          ModelDefinition resource name. It must have the format of
          "model-definitions/{model-definition}"
        readOnly: true
      uid:
        type: string
        title: ModelDefinition ID in UUIDv4
        readOnly: true
      id:
        type: string
        description: |-
          ModelDefinition resource ID (the last segment of the resource name) used to
          construct the resource name.
        readOnly: true
      title:
        type: string
        title: ModelDefinition display official title
        readOnly: true
      documentation_url:
        type: string
        title: ModelDefinition documentation url
        readOnly: true
      icon:
        type: string
        title: ModelDefinition icon
        readOnly: true
      release_stage:
        $ref: '#/definitions/v1alphaReleaseStage'
        title: ModelDefinition release stage
        readOnly: true
      model_spec:
        type: object
        description: |-
          ModelDefinition model specification represents the JSON schema used to
          validate the JSON configurations of a model created from a specific model
          source. Must be a valid JSON that includes what fields are needed to
          create/display a model.
        readOnly: true
      create_time:
        type: string
        format: date-time
        title: ModelDefinition create time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: ModelDefinition update time
        readOnly: true
    title: |-
      /////////////////////////////////////////////////////////////////
      ModelDefinition represents the definition of a model
  v1alphaModelState:
    type: string
    enum:
      - STATE_OFFLINE
      - STATE_ONLINE
      - STATE_ERROR
    description: |-
      - STATE_UNSPECIFIED: State: UNSPECIFIED
       - STATE_OFFLINE: State: OFFLINE
       - STATE_ONLINE: State: ONLINE
       - STATE_ERROR: State: ERROR
    title: State enumerates a model state
  v1alphaModelVisibility:
    type: string
    enum:
      - VISIBILITY_PRIVATE
      - VISIBILITY_PUBLIC
    description: |-
      - VISIBILITY_UNSPECIFIED: Visibility: UNSPECIFIED, equivalent to PRIVATE.
       - VISIBILITY_PRIVATE: Visibility: PRIVATE
       - VISIBILITY_PUBLIC: Visibility: PUBLIC
    title: Model visibility including public or private
  v1alphaOcrInput:
    type: object
    properties:
      image_url:
        type: string
        title: Image type URL
      image_base64:
        type: string
        title: Image type base64
    title: OcrInput represents the input of ocr task
  v1alphaOcrInputStream:
    type: object
    properties:
      file_lengths:
        type: array
        items:
          type: integer
          format: int64
        title: The list of file length for each uploaded binary file
      content:
        type: string
        format: byte
        title: Content of images in bytes
    title: OcrInputStream represents the input of ocr task when using stream method
    required:
      - file_lengths
      - content
  v1alphaOcrObject:
    type: object
    properties:
      text:
        type: string
        title: OCR text
        readOnly: true
      score:
        type: number
        format: float
        title: OCR text score
        readOnly: true
      bounding_box:
        $ref: '#/definitions/v1alphaBoundingBox'
        title: OCR bounding box
        readOnly: true
    title: OcrObject represents a predicted ocr object
  v1alphaOcrOutput:
    type: object
    properties:
      objects:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaOcrObject'
        title: A list of OCR objects
        readOnly: true
    title: OcrOutput represents the output of ocr task
  v1alphaPromptImage:
    type: object
    properties:
      prompt_image_url:
        type: string
        title: Image URL
      prompt_image_base64:
        type: string
        title: Base64 encoded Image
    title: Prompt Image for text generation model
  v1alphaPublishUserModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: Published model
    title: PublishUserModelResponse represents a response for the published model
  v1alphaReleaseStage:
    type: string
    enum:
      - RELEASE_STAGE_ALPHA
      - RELEASE_STAGE_BETA
      - RELEASE_STAGE_GENERALLY_AVAILABLE
      - RELEASE_STAGE_CUSTOM
    description: |-
      - RELEASE_STAGE_UNSPECIFIED: ReleaseStage: UNSPECIFIED
       - RELEASE_STAGE_ALPHA: ReleaseStage: ALPHA
       - RELEASE_STAGE_BETA: ReleaseStage: BETA
       - RELEASE_STAGE_GENERALLY_AVAILABLE: ReleaseStage: GENERALLY_AVAILABLE
       - RELEASE_STAGE_CUSTOM: ReleaseStage: CUSTOM
    title: ReleaseStage enumerates the release stages
  v1alphaRenameUserModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: Renamed model
    title: RenameUserModelResponse represents a response for a model
  v1alphaSemanticSegmentationInput:
    type: object
    properties:
      image_url:
        type: string
        title: Image type URL
      image_base64:
        type: string
        title: Image type base64
    title: SemanticSegmentationInput represents the input of semantic segmentation task
  v1alphaSemanticSegmentationInputStream:
    type: object
    properties:
      file_lengths:
        type: array
        items:
          type: integer
          format: int64
        title: The list of file length for each uploaded binary file
      content:
        type: string
        format: byte
        title: Content of images in bytes
    title: |-
      SemanticSegmentationInputStream represents the input of semantic segmentation
      task when using stream method
    required:
      - file_lengths
      - content
  v1alphaSemanticSegmentationOutput:
    type: object
    properties:
      stuffs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaSemanticSegmentationStuff'
        title: A list of semantic segmentation stuffs
        readOnly: true
    title: |-
      SemanticSegmentationOutput represents the output of semantic segmentation
      task
  v1alphaSemanticSegmentationStuff:
    type: object
    properties:
      rle:
        type: string
        title: RLE segmentation mask
        readOnly: true
      category:
        type: string
        title: Stuff category
        readOnly: true
    title: SemanticSegmentationStuff corresponding to a semantic segmentation stuff
  v1alphaTask:
    type: string
    enum:
      - TASK_CLASSIFICATION
      - TASK_DETECTION
      - TASK_KEYPOINT
      - TASK_OCR
      - TASK_INSTANCE_SEGMENTATION
      - TASK_SEMANTIC_SEGMENTATION
      - TASK_TEXT_TO_IMAGE
      - TASK_TEXT_GENERATION
      - TASK_TEXT_GENERATION_CHAT
      - TASK_VISUAL_QUESTION_ANSWERING
      - TASK_IMAGE_TO_IMAGE
      - TASK_TEXT_EMBEDDINGS
      - TASK_SPEECH_RECOGNITION
    description: |-
      - TASK_UNSPECIFIED: Task: UNSPECIFIED
       - TASK_CLASSIFICATION: Task: CLASSIFICATION
       - TASK_DETECTION: Task: DETECTION
       - TASK_KEYPOINT: Task: KEYPOINT
       - TASK_OCR: Task: OCR
       - TASK_INSTANCE_SEGMENTATION: Task: INSTANCE SEGMENTATION
       - TASK_SEMANTIC_SEGMENTATION: Task: SEMANTIC SEGMENTATION
       - TASK_TEXT_TO_IMAGE: Task: TEXT TO IMAGE
       - TASK_TEXT_GENERATION: Task: TEXT GENERATION
       - TASK_TEXT_GENERATION_CHAT: Task: TEXT GENERATION CHAT
       - TASK_VISUAL_QUESTION_ANSWERING: Task: VISUAL QUESTION ANSWERING
       - TASK_IMAGE_TO_IMAGE: Task: IMAGE TO IMAGE
       - TASK_TEXT_EMBEDDINGS: Task: TEXT EMBEDDINGS
       - TASK_SPEECH_RECOGNITION: Task: SPEECH RECOGNITION
    title: Task enumerates the AI task type
  v1alphaTaskInput:
    type: object
    properties:
      classification:
        $ref: '#/definitions/v1alphaClassificationInput'
        title: The classification input
      detection:
        $ref: '#/definitions/v1alphaDetectionInput'
        title: The detection input
      keypoint:
        $ref: '#/definitions/v1alphaKeypointInput'
        title: The keypoint input
      ocr:
        $ref: '#/definitions/v1alphaOcrInput'
        title: The ocr input
      instance_segmentation:
        $ref: '#/definitions/v1alphaInstanceSegmentationInput'
        title: The instance segmentation input
      semantic_segmentation:
        $ref: '#/definitions/v1alphaSemanticSegmentationInput'
        title: The semantic segmentation input
      text_to_image:
        $ref: '#/definitions/v1alphaTextToImageInput'
        title: The text to image input
      image_to_image:
        $ref: '#/definitions/v1alphaImageToImageInput'
        title: The image to image input
      text_generation:
        $ref: '#/definitions/v1alphaTextGenerationInput'
        title: The text generation input
      text_generation_chat:
        $ref: '#/definitions/v1alphaTextGenerationChatInput'
        title: The text generation chat input
      visual_question_answering:
        $ref: '#/definitions/v1alphaVisualQuestionAnsweringInput'
        title: The visual question answering input
      unspecified:
        $ref: '#/definitions/v1alphaUnspecifiedInput'
        title: The unspecified task input
    title: Input represents the input to trigger a model
  v1alphaTaskInputStream:
    type: object
    properties:
      classification:
        $ref: '#/definitions/v1alphaClassificationInputStream'
        title: The classification input
      detection:
        $ref: '#/definitions/v1alphaDetectionInputStream'
        title: The detection input
      keypoint:
        $ref: '#/definitions/v1alphaKeypointInputStream'
        title: The keypoint input
      ocr:
        $ref: '#/definitions/v1alphaOcrInputStream'
        title: The ocr input
      instance_segmentation:
        $ref: '#/definitions/v1alphaInstanceSegmentationInputStream'
        title: The instance segmentation input
      semantic_segmentation:
        $ref: '#/definitions/v1alphaSemanticSegmentationInputStream'
        title: The semantic segmentation input
      text_to_image:
        $ref: '#/definitions/v1alphaTextToImageInput'
        title: The text to image input
      image_to_image:
        $ref: '#/definitions/v1alphaImageToImageInput'
        title: The image to image input
      text_generation:
        $ref: '#/definitions/v1alphaTextGenerationInput'
        title: The text generation input
      text_generation_chat:
        $ref: '#/definitions/v1alphaTextGenerationChatInput'
        title: The text generation chat input
      visual_question_answering:
        $ref: '#/definitions/v1alphaVisualQuestionAnsweringInput'
        title: The visual question answering input
      unspecified:
        $ref: '#/definitions/v1alphaUnspecifiedInput'
        title: The unspecified task input
    title: TaskInputStream represents the input to trigger a model with stream method
  v1alphaTaskOutput:
    type: object
    properties:
      classification:
        $ref: '#/definitions/v1alphaClassificationOutput'
        title: The classification output
        readOnly: true
      detection:
        $ref: '#/definitions/v1alphaDetectionOutput'
        title: The detection output
        readOnly: true
      keypoint:
        $ref: '#/definitions/v1alphaKeypointOutput'
        title: The keypoint output
        readOnly: true
      ocr:
        $ref: '#/definitions/v1alphaOcrOutput'
        title: The ocr output
        readOnly: true
      instance_segmentation:
        $ref: '#/definitions/v1alphaInstanceSegmentationOutput'
        title: The instance segmentation output
        readOnly: true
      semantic_segmentation:
        $ref: '#/definitions/v1alphaSemanticSegmentationOutput'
        title: The semantic segmentation output
        readOnly: true
      text_to_image:
        $ref: '#/definitions/v1alphaTextToImageOutput'
        title: The text to image output
        readOnly: true
      image_to_image:
        $ref: '#/definitions/v1alphaImageToImageOutput'
        title: The image to image output
        readOnly: true
      text_generation:
        $ref: '#/definitions/v1alphaTextGenerationOutput'
        title: The text generation output
        readOnly: true
      text_generation_chat:
        $ref: '#/definitions/v1alphaTextGenerationChatOutput'
        title: The text generation output
        readOnly: true
      visual_question_answering:
        $ref: '#/definitions/v1alphaVisualQuestionAnsweringOutput'
        title: The text generation output
        readOnly: true
      unspecified:
        $ref: '#/definitions/v1alphaUnspecifiedOutput'
        title: The unspecified task output
        readOnly: true
    title: TaskOutput represents the output of a CV Task result from a model
  v1alphaTestUserModelBinaryFileUploadResponse:
    type: object
    properties:
      task:
        $ref: '#/definitions/v1alphaTask'
        title: The task type
      task_outputs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaTaskOutput'
        title: The task output from a model
    title: |-
      TestUserModelBinaryFileUploadResponse represents a response for the
      output for testing a model
    required:
      - task
      - task_outputs
  v1alphaTestUserModelResponse:
    type: object
    properties:
      task:
        $ref: '#/definitions/v1alphaTask'
        title: The task type
      task_outputs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaTaskOutput'
        title: The task output from a model
    title: |-
      TestUserModelResponse represents a response for the output for
      testing a model
    required:
      - task
      - task_outputs
  v1alphaTextGenerationChatInput:
    type: object
    properties:
      prompt:
        type: string
        title: The prompt text
      prompt_images:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPromptImage'
        title: The prompt images
      chat_history:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaContent'
        title: The chat history
      system_message:
        type: string
        title: The system message
      max_new_tokens:
        type: integer
        format: int32
        title: The maximum number of tokens for model to generate
      temperature:
        type: number
        format: float
        title: The temperature for sampling
      top_k:
        type: integer
        format: int32
        title: Top k for sampling
      seed:
        type: integer
        format: int32
        title: The seed
      extra_params:
        type: object
        title: The extra parameters
    title: TextGenerationChatInput represents the input of text generation chat task
    required:
      - prompt
  v1alphaTextGenerationChatOutput:
    type: object
    properties:
      text:
        type: string
        title: The text generated by the model
        readOnly: true
    title: TextGenerationChatOutput represents the output of text generation chat task
  v1alphaTextGenerationInput:
    type: object
    properties:
      prompt:
        type: string
        title: The prompt text
      prompt_images:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPromptImage'
        title: The prompt images
      chat_history:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaContent'
        title: The chat history
      system_message:
        type: string
        title: The system message
      max_new_tokens:
        type: integer
        format: int32
        title: The maximum number of tokens for model to generate
      temperature:
        type: number
        format: float
        title: The temperature for sampling
      top_k:
        type: integer
        format: int32
        title: Top k for sampling
      seed:
        type: integer
        format: int32
        title: The seed
      extra_params:
        type: object
        title: The extra parameters
    title: TextGenerationInput represents the input of text generation task
    required:
      - prompt
  v1alphaTextGenerationOutput:
    type: object
    properties:
      text:
        type: string
        title: The text generated by the model
        readOnly: true
    title: TextGenerationOutput represents the output of text generation task
  v1alphaTextToImageInput:
    type: object
    properties:
      prompt:
        type: string
        title: The prompt text
      prompt_image_url:
        type: string
        title: Image type URL
      prompt_image_base64:
        type: string
        title: Image type base64
      steps:
        type: integer
        format: int32
        title: The steps, default is 5
      cfg_scale:
        type: number
        format: float
        title: The guidance scale, default is 7.5
      seed:
        type: integer
        format: int32
        title: The seed, default is 0
      samples:
        type: integer
        format: int32
        title: The number of generated samples, default is 1
      extra_params:
        type: object
        title: The extra parameters
    title: TextToImageInput represents the input of text to image task
    required:
      - prompt
  v1alphaTextToImageOutput:
    type: object
    properties:
      images:
        type: array
        items:
          type: string
        title: List of generated images
        readOnly: true
    title: TextToImageOutput represents the output of text to image task
  v1alphaTriggerUserModelBinaryFileUploadResponse:
    type: object
    properties:
      task:
        $ref: '#/definitions/v1alphaTask'
        title: The task type
      task_outputs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaTaskOutput'
        title: The task output from a model
    title: |-
      TriggerUserModelBinaryFileUploadResponse represents a response for the
      output for testing a model
    required:
      - task
      - task_outputs
  v1alphaTriggerUserModelResponse:
    type: object
    properties:
      task:
        $ref: '#/definitions/v1alphaTask'
        title: The task type
      task_outputs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaTaskOutput'
        title: The task output from a model
    title: |-
      TriggerUserModelResponse represents a response for the output for
      triggering a model
  v1alphaUndeployModelAdminResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: Undeploy operation message
    title: UndeployModelAdminResponse represents a response for a undeployed model
  v1alphaUndeployUserModelResponse:
    type: object
    properties:
      model_id:
        type: string
        title: |-
          Undeployed model's id
          Format: users/{user}/models/{model}
    title: UndeployUserModelResponse represents a response for a undeployed model
  v1alphaUnpublishUserModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: Unpublished model
    title: UnpublishUserModelResponse represents a response for the unpublished model
  v1alphaUnspecifiedInput:
    type: object
    properties:
      raw_inputs:
        type: array
        items:
          type: object
        title: A list of unspecified task inputs
    title: UnspecifiedInput represents the input of unspecified task
  v1alphaUnspecifiedOutput:
    type: object
    properties:
      raw_outputs:
        type: array
        items:
          type: object
        title: A list of unspecified task outputs
        readOnly: true
    title: UnspecifiedOutput represents the output of unspecified task
  v1alphaUpdateUserModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: The updated model
    title: UpdateUserModelResponse represents a response for a model
  v1alphaVisualQuestionAnsweringInput:
    type: object
    properties:
      prompt:
        type: string
        title: The prompt text
      prompt_images:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPromptImage'
        title: The prompt images
      chat_history:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaContent'
        title: The chat history
      system_message:
        type: string
        title: The system message
      max_new_tokens:
        type: integer
        format: int32
        title: The maximum number of tokens for model to generate
      temperature:
        type: number
        format: float
        title: The temperature for sampling
      top_k:
        type: integer
        format: int32
        title: Top k for sampling
      seed:
        type: integer
        format: int32
        title: The seed
      extra_params:
        type: object
        title: The extra parameters
    title: VisualQuestionAnsweringInput represents the input of visaul question answering task
    required:
      - prompt
  v1alphaVisualQuestionAnsweringOutput:
    type: object
    properties:
      text:
        type: string
        title: The text generated by the model
        readOnly: true
    title: VisualQuestionAnsweringOutput represents the output of visaul question answering task
  v1alphaWatchUserModelResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1alphaModelState'
        title: Retrieved model state
      progress:
        type: integer
        format: int32
        title: Retrieved model logrunning progress
    title: |-
      WatchUserModelResponse represents a public response to
      fetch a model current state and longrunning progress
  v1betaApiToken:
    type: object
    properties:
      name:
        type: string
        description: |-
          The name of the token, define by its ID.
          - Format: `tokens/{token.id}`.
        readOnly: true
      uid:
        type: string
        description: API token UUID.
        readOnly: true
      id:
        type: string
        description: |-
          API token resource ID (used in `name` as the last segment). This conforms
          to RFC-1034, which restricts to letters, numbers, and hyphen, with the
          first character a letter, the last a letter or a number, and a 63
          character maximum.

          This field can reflect the client(s) that will use the token.
      create_time:
        type: string
        format: date-time
        description: Creation time.
        readOnly: true
      update_time:
        type: string
        format: date-time
        description: Update time.
        readOnly: true
      access_token:
        type: string
        description: |-
          An opaque access token representing the API token string.

          To validate the token, the recipient of the token needs to call the server
          that issued the token.
        readOnly: true
      state:
        $ref: '#/definitions/v1betaApiTokenState'
        description: State.
        readOnly: true
      token_type:
        type: string
        description: Token type. Value is fixed to "Bearer".
        readOnly: true
      ttl:
        type: integer
        format: int32
        description: The time-to-live in seconds for this resource.
      expire_time:
        type: string
        format: date-time
        description: Expiration time.
    description: API tokens allow users to make requests to the Instill AI API.
  v1betaApiTokenState:
    type: string
    enum:
      - STATE_INACTIVE
      - STATE_ACTIVE
      - STATE_EXPIRED
    description: |-
      State describes the state of an API token.

       - STATE_UNSPECIFIED: Unspecified.
       - STATE_INACTIVE: Inactive.
       - STATE_ACTIVE: Active.
       - STATE_EXPIRED: Expired.
  v1betaAuthChangePasswordRequest:
    type: object
    properties:
      old_password:
        type: string
        description: Old password.
      new_password:
        type: string
        description: New password.
    description: AuthChangePasswordRequest represents a request to update a user's password.
  v1betaAuthChangePasswordResponse:
    type: object
    description: AuthChangePasswordResponse is an empty response.
  v1betaAuthLoginResponse:
    type: object
    properties:
      access_token:
        type: string
        description: User access token.
    description: AuthLoginResponse contains the access token of the authenticated user.
  v1betaAuthLogoutResponse:
    type: object
    description: AuthLogoutResponse is an empty response.
  v1betaAuthTokenIssuerRequest:
    type: object
    properties:
      username:
        type: string
        description: Username.
      password:
        type: string
        description: Password.
    description: |-
      AuthTokenIssuerRequest represents a request to fetch the issuer details of a
      token.
    required:
      - username
      - password
  v1betaAuthTokenIssuerResponse:
    type: object
    properties:
      access_token:
        $ref: '#/definitions/AuthTokenIssuerResponseUnsignedAccessToken'
        description: Access token information.
    description: AuthTokenIssuerResponse contains the token issuer details.
  v1betaAuthValidateAccessTokenResponse:
    type: object
    description: AuthValidateAccessTokenResponse is an empty response.
  v1betaCheckConnectorResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1betaConnectorState'
        description: Connector state.
    description: CheckConnectorResponse contains the connector's current state.
  v1betaCheckNamespaceRequest:
    type: object
    properties:
      id:
        type: string
        description: The namespace ID to be checked.
    description: |-
      CheckNamespaceRequest represents a request to verify if a namespace is
      available.
    required:
      - id
  v1betaCheckNamespaceResponse:
    type: object
    properties:
      type:
        $ref: '#/definitions/CheckNamespaceResponseNamespace'
        description: Namespace type.
    description: |-
      CheckNamespaceResponse contains the availability of a namespace or the type
      of resource that's using it.
  v1betaComponent:
    type: object
    properties:
      id:
        type: string
        description: Component ID, provided by the user on creation.
      resource_name:
        type: string
        description: Resource name.
      resource:
        $ref: '#/definitions/v1betaConnector'
        description: |-
          If the component is a connector, describes the connector details (e.g. the
          configuration to connect with an AI model).
        readOnly: true
      configuration:
        type: object
        description: Describes the component configuration.
      type:
        $ref: '#/definitions/v1betaComponentType'
        description: Defines the type of task the component will perform.
        readOnly: true
      definition_name:
        type: string
        description: |-
          The name of the component definition. It references the connector or
          operator definition on top of which a connector is built.
      operator_definition:
        $ref: '#/definitions/v1betaOperatorDefinition'
        title: operator definition detail
        readOnly: true
      connector_definition:
        $ref: '#/definitions/v1betaConnectorDefinition'
        title: connector definition detail
        readOnly: true
    description: |-
      Component is the fundamental building block in pipelines.

      For more information, see [Pipeline
      Component](https://www.instill.tech/docs/latest/core/concepts/pipeline#pipeline-component)
    required:
      - id
      - definition_name
  v1betaComponentType:
    type: string
    enum:
      - COMPONENT_TYPE_CONNECTOR_AI
      - COMPONENT_TYPE_CONNECTOR_DATA
      - COMPONENT_TYPE_CONNECTOR_BLOCKCHAIN
      - COMPONENT_TYPE_OPERATOR
    description: |-
      ComponentType defines the component type based on its task features.

       - COMPONENT_TYPE_UNSPECIFIED: Unspecified.
       - COMPONENT_TYPE_CONNECTOR_AI: Connect with an AI model.
       - COMPONENT_TYPE_CONNECTOR_DATA: Connect with a remote data source.
       - COMPONENT_TYPE_CONNECTOR_BLOCKCHAIN: Connect with a blockchain service.
       - COMPONENT_TYPE_OPERATOR: Manipulate data.
  v1betaConnectOrganizationConnectorResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        description: The connector resource.
    description: ConnectOrganizationConnectorResponse contains the connector details.
  v1betaConnectUserConnectorResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        description: The connector resource.
    description: ConnectUserConnectorResponse contains the connector details.
  v1betaConnector:
    type: object
    properties:
      name:
        type: string
        description: |-
          The name of the connector, defined by its ID.
          - Format: `connectors/{id}`.
        readOnly: true
      uid:
        type: string
        description: Connector UUID.
        readOnly: true
      id:
        type: string
        description: |-
          Connector resource ID (used in `name` as the last segment). This conforms
          to RFC-1034, which restricts to letters, numbers, and hyphen, with the
          first character a letter, the last a letter or a number, and a 63
          character maximum.
      connector_definition_name:
        type: string
        description: Connector definition that describes the connector configuration.
      type:
        $ref: '#/definitions/v1betaConnectorType'
        description: Connector type.
        readOnly: true
      description:
        type: string
        description: Connector description.
      configuration:
        type: object
        description: Connector configuration in JSON format.
      state:
        $ref: '#/definitions/v1betaConnectorState'
        description: Connector state.
        readOnly: true
      tombstone:
        type: boolean
        description: |-
          Connector tombstone. If true, this configuration is permanently off.
          Otherwise, the configuration is active.
        readOnly: true
      create_time:
        type: string
        format: date-time
        description: Connector creation time.
        readOnly: true
      update_time:
        type: string
        format: date-time
        description: Connector update time.
        readOnly: true
      visibility:
        $ref: '#/definitions/v1betaConnectorVisibility'
        description: Connector visibility.
        readOnly: true
      connector_definition:
        $ref: '#/definitions/v1betaConnectorDefinition'
        description: Embed content of the ConnectorDefinition.
        readOnly: true
      delete_time:
        type: string
        format: date-time
        description: Connector deletion time.
        readOnly: true
      owner_name:
        type: string
        description: Owner name.
        readOnly: true
      owner:
        type: object
        description: Owner details.
        readOnly: true
    description: |-
      A Connector is a type of pipeline component that queries, processes or sends
      the ingested unstructured data to a service or app. Users need to configure
      their connectors (e.g. by providing an API token to a remote service).

      For more information, see
      [Component](https://www.instill.tech/docs/latest/core/concepts/pipeline#pipeline-component)
      in the official documentation.
    required:
      - configuration
  v1betaConnectorDefinition:
    type: object
    properties:
      name:
        type: string
        description: |-
          The name of the connector definition.
          - Format: `connector-definitions/*`.
        readOnly: true
      uid:
        type: string
        description: Connector definition UUID.
        readOnly: true
      id:
        type: string
        description: |-
          Connector definition resource ID (used in `name` as the last segment). This
          conforms to RFC-1034, which restricts to letters, numbers, and hyphen,
          with the first character a letter, the last a letter or a number, and a 63
          character maximum.
      title:
        type: string
        description: Connector definition title.
        readOnly: true
      documentation_url:
        type: string
        description: Connector definition documentation URL.
        readOnly: true
      icon:
        type: string
        description: Connector definition icon.
        readOnly: true
      spec:
        $ref: '#/definitions/v1betaConnectorSpec'
        description: Connector definition specification.
        readOnly: true
      type:
        $ref: '#/definitions/v1betaConnectorType'
        description: Connector definition type.
        readOnly: true
      tombstone:
        type: boolean
        description: |-
          Connector definition tombstone. If true, this configuration is permanently
          off. Otherwise, the configuration is active.
        readOnly: true
      public:
        type: boolean
        description: |-
          The public flag determines whether this connector definition is available
          to all workspaces.
        readOnly: true
      custom:
        type: boolean
        description: |-
          Connector definition custom flag, i.e., whether this is a custom
          connector definition.
        readOnly: true
      icon_url:
        type: string
        description: Connector definition icon URL.
        readOnly: true
      vendor:
        type: string
        description: Connector definition vendor name.
        readOnly: true
      vendor_attributes:
        type: object
        description: Vendor-specific attributes.
        readOnly: true
    description: |-
      A Connector is a type of pipeline component that queries, processes or sends
      the ingested unstructured data to a service or app. Users need to configure
      their connectors (e.g. by providing an API token to a remote service). A
      ConnectorDefinition describes a certain type of Connector.

      For more information, see
      [Component](https://www.instill.tech/docs/latest/core/concepts/pipeline#pipeline-component)
      in the official documentation.
  v1betaConnectorDefinitionView:
    type: string
    enum:
      - VIEW_BASIC
      - VIEW_FULL
    description: |-
      View defines how a connector definition is presented.

       - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
       - VIEW_BASIC: Default view, only includes basic information.
       - VIEW_FULL: Full representation.
  v1betaConnectorExecuteChartRecord:
    type: object
    properties:
      connector_id:
        type: string
        description: Connector ID.
      connector_uid:
        type: string
        description: Connector UUID.
      status:
        $ref: '#/definitions/mgmtv1betaStatus'
        description: Final status.
        readOnly: true
      time_buckets:
        type: array
        items:
          type: string
          format: date-time
        description: Time buckets.
        readOnly: true
      execute_counts:
        type: array
        items:
          type: integer
          format: int32
        description: Aggregated execution count in each time bucket.
        readOnly: true
      compute_time_duration:
        type: array
        items:
          type: number
          format: float
        description: Total computation time duration in each time bucket.
        readOnly: true
    description: |-
      ConnectorExecuteChartRecord contains connector execution metrics,
      agggregated by connector ID and time frame.
  v1betaConnectorExecuteRecord:
    type: object
    properties:
      execute_time:
        type: string
        format: date-time
        description: The moment when the connector was executed.
      connector_execute_id:
        type: string
        description: UUID of the execution.
      connector_id:
        type: string
        description: Connector ID.
      connector_uid:
        type: string
        description: Connector UUID.
      connector_definition_uid:
        type: string
        description: Connector definition UUID.
      pipeline_id:
        type: string
        description: Pipeline ID.
      pipeline_uid:
        type: string
        description: Pipeline UUID.
      pipeline_trigger_id:
        type: string
        description: UUID of the pipeline trigger.
      compute_time_duration:
        type: number
        format: float
        description: Total execution time.
        readOnly: true
      status:
        $ref: '#/definitions/mgmtv1betaStatus'
        description: Final status for the connector execution.
        readOnly: true
    description: ConnectorExecuteRecord represents a connector execution event.
  v1betaConnectorExecuteTableRecord:
    type: object
    properties:
      connector_id:
        type: string
        description: Connector ID.
      connector_uid:
        type: string
        description: Connector UUID.
      execute_count_completed:
        type: integer
        format: int32
        description: Number of executions with `STATUS_COMPLETED`.
        readOnly: true
      execute_count_errored:
        type: integer
        format: int32
        description: Number of executions with `STATUS_ERRORED`.
        readOnly: true
    description: ConnectorExecuteTableRecord contains connector execution metrics, a aggregated by connector ID.
  v1betaConnectorSpec:
    type: object
    properties:
      resource_specification:
        type: object
        description: Resource specification.
      component_specification:
        type: object
        description: Component specification.
      openapi_specifications:
        type: object
        description: OpenAPI specification.
    description: ConnectorSpec represents a specification data model.
    required:
      - resource_specification
      - component_specification
      - openapi_specifications
  v1betaConnectorState:
    type: string
    enum:
      - STATE_DISCONNECTED
      - STATE_CONNECTED
      - STATE_ERROR
    description: |-
      State describes the state of the connector.

       - STATE_UNSPECIFIED: Unspecified.
       - STATE_DISCONNECTED: Disconnected.
       - STATE_CONNECTED: Connected.
       - STATE_ERROR: The connector suffered an error.
  v1betaConnectorType:
    type: string
    enum:
      - CONNECTOR_TYPE_SOURCE
      - CONNECTOR_TYPE_DESTINATION
      - CONNECTOR_TYPE_AI
      - CONNECTOR_TYPE_BLOCKCHAIN
      - CONNECTOR_TYPE_DATA
      - CONNECTOR_TYPE_OPERATOR
    description: |-
      ConnectorType defines the connector type based on its task features.

       - CONNECTOR_TYPE_UNSPECIFIED: Unspecified.
       - CONNECTOR_TYPE_SOURCE: Source connector.
       - CONNECTOR_TYPE_DESTINATION: Destination connector.
       - CONNECTOR_TYPE_AI: AI connector.
       - CONNECTOR_TYPE_BLOCKCHAIN: Blockchain connector.
       - CONNECTOR_TYPE_DATA: Data connector.
       - CONNECTOR_TYPE_OPERATOR: Operator connector.
  v1betaConnectorUsageData:
    type: object
    properties:
      usages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaConnectorUsageDataUserUsageData'
        title: Usage data of all users in the connector service
    title: Connector service usage data
  v1betaConnectorUsageDataUserUsageData:
    type: object
    properties:
      owner_uid:
        type: string
        title: Owner UUID
      connector_execute_data:
        type: array
        items:
          type: object
          $ref: '#/definitions/UserUsageDataConnectorExecuteData'
        title: Execution data for each user
      owner_type:
        $ref: '#/definitions/v1betaOwnerType'
        title: Owner type
    title: Per user usage data in the connector service
    required:
      - owner_uid
      - connector_execute_data
      - owner_type
  v1betaConnectorView:
    type: string
    enum:
      - VIEW_BASIC
      - VIEW_FULL
      - VIEW_CONFIGURATION
    description: |-
      View defines how a connector is presented.

       - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
       - VIEW_BASIC: Default view, only includes basic information.
       - VIEW_FULL: Full representation.
       - VIEW_CONFIGURATION: Contains the connector configuration.
  v1betaConnectorVisibility:
    type: string
    enum:
      - VISIBILITY_PRIVATE
      - VISIBILITY_PUBLIC
    description: |-
      Visibility defines who can access the connector.

       - VISIBILITY_UNSPECIFIED: Unspecified, equivalent to PRIVATE.
       - VISIBILITY_PRIVATE: Only the user can see the connector.
       - VISIBILITY_PUBLIC: Other users can see the connector.
  v1betaCreateOrganizationConnectorResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        description: The created connector resource.
    description: CreateOrganizationConnectorResponse contains the created connector.
  v1betaCreateOrganizationPipelineReleaseResponse:
    type: object
    properties:
      release:
        $ref: '#/definitions/v1betaPipelineRelease'
        description: The created pipeline release object.
    description: CreateOrganizationPipelineReleaseResponse contains the created release.
  v1betaCreateOrganizationPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1betaPipeline'
        description: The created pipeline resource.
    description: CreateOrganizationPipelineResponse contains the created pipeline.
  v1betaCreateOrganizationResponse:
    type: object
    properties:
      organization:
        $ref: '#/definitions/v1betaOrganization'
        description: The organization resource.
    description: CreateOrganizationResponse contains the created organization.
  v1betaCreateSessionResponse:
    type: object
    properties:
      session:
        $ref: '#/definitions/v1betaSession'
        title: A session resource
    title: CreateSessionResponse represents a response for a session response
  v1betaCreateTokenResponse:
    type: object
    properties:
      token:
        $ref: '#/definitions/v1betaApiToken'
        description: The created API token resource.
    description: CreateTokenResponse contains the created token.
  v1betaCreateUserConnectorResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        description: The created connector resource.
    description: CreateUserConnectorResponse contains the created connector.
  v1betaCreateUserPipelineReleaseResponse:
    type: object
    properties:
      release:
        $ref: '#/definitions/v1betaPipelineRelease'
        description: The created pipeline release object.
    description: CreateUserPipelineReleaseResponse contains the created release.
  v1betaCreateUserPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1betaPipeline'
        description: The created pipeline resource.
    description: CreateUserPipelineResponse contains the created pipeline.
  v1betaDeleteOrganizationConnectorResponse:
    type: object
    description: DeleteOrganizationConnectorResponse is an empty response.
  v1betaDeleteOrganizationMembershipResponse:
    type: object
    description: DeleteOrganizationMembershipResponse is an empty response.
  v1betaDeleteOrganizationPipelineReleaseResponse:
    type: object
    description: DeleteOrganizationPipelineReleaseResponse is an empty response.
  v1betaDeleteOrganizationPipelineResponse:
    type: object
    description: DeleteOrganizationPipelineResponse is an empty response.
  v1betaDeleteOrganizationResponse:
    type: object
    description: DeleteOrganizationResponse is an empty response.
  v1betaDeleteTokenResponse:
    type: object
    description: DeleteTokenResponse is an empty response.
  v1betaDeleteUserConnectorResponse:
    type: object
    description: DeleteUserConnectorResponse is an empty response.
  v1betaDeleteUserMembershipResponse:
    type: object
    description: DeleteUserMembershipResponse is an empty response.
  v1betaDeleteUserPipelineReleaseResponse:
    type: object
    description: DeleteUserPipelineReleaseResponse is an empty response.
  v1betaDeleteUserPipelineResponse:
    type: object
    description: DeleteUserPipelineResponse is an empty response.
  v1betaDisconnectOrganizationConnectorResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        title: A connector
    description: DisconnectOrganizationConnectorResponse contains the connector details.
  v1betaDisconnectUserConnectorResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        title: A connector
    description: DisconnectUserConnectorResponse contains the connector details.
  v1betaExecuteOrganizationConnectorResponse:
    type: object
    properties:
      outputs:
        type: array
        items:
          type: object
        description: The execution outputs.
    description: ExecuteOrganizationConnectorResponse contains the outcome of the execution.
  v1betaExecuteUserConnectorResponse:
    type: object
    properties:
      outputs:
        type: array
        items:
          type: object
        description: The execution outputs.
    description: ExecuteUserConnectorResponse contains the outcome of the execution.
  v1betaGetBulkCumulativeModelOnlineRecordsResponse:
    type: object
    properties:
      bulk_cumulative_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaGetCumulativeModelOnlineRecordsResponse'
        title: A list of cumulative model online record lists
    title: |-
      GetBulkCumulativeModelOnlineRecordsResponse represents a response to
      GetBulkCumulativeModelOnlineRecordsRequest
    required:
      - bulk_cumulative_records
  v1betaGetBulkCumulativePipelineTriggerRecordsResponse:
    type: object
    properties:
      bulk_cumulative_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaGetCumulativePipelineTriggerRecordsResponse'
        title: A list of cumulative pipeline trigger record lists
    title: |-
      GetBulkCumulativePipelineTriggerRecordsResponse represents a response to
      GetBulkCumulativePipelineTriggerRecordsRequest
    required:
      - bulk_cumulative_records
  v1betaGetBulkModelOnlinePriceResponse:
    type: object
    properties:
      bulk_prices:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaGetModelOnlinePriceResponse'
        title: A list of model online price lists
    title: |-
      GetBulkModelOnlinePriceResponse represents a response to
      GetBulkModelOnlinePriceRequest
    required:
      - bulk_prices
  v1betaGetBulkModelOnlineRecordsResponse:
    type: object
    properties:
      bulk_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaGetModelOnlineRecordsResponse'
        title: A list of model online record lists
    title: |-
      GetBulkModelOnlineRecordsResponse represents a response to
      GetBulkModelOnlineRecordsRequest
    required:
      - bulk_records
  v1betaGetBulkModelOnlineSummaryResponse:
    type: object
    properties:
      bulk_summaries:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaGetModelOnlineSummaryResponse'
        title: A list of model online usage summaries
    title: |-
      GetBulkModelOnlineSummaryResponse represents a response to
      GetBulkModelOnlineSummaryRequest
    required:
      - bulk_summaries
  v1betaGetBulkPipelineTriggerPriceResponse:
    type: object
    properties:
      bulk_prices:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaGetPipelineTriggerPriceResponse'
        title: A list of pipeline trigger price lists
    title: |-
      GetBulkPipelineTriggerPriceResponse represents a response to
      GetBulkPipelineTriggerPriceRequest
    required:
      - bulk_prices
  v1betaGetBulkPipelineTriggerRecordsResponse:
    type: object
    properties:
      bulk_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaGetPipelineTriggerRecordsResponse'
        title: A list of pipeline trigger record lists
    title: |-
      GetBulkPipelineTriggerRecordsResponse represents a response to
      GetBulkPipelineTriggerRecordsRequest
    required:
      - bulk_records
  v1betaGetBulkPipelineTriggerSummariesResponse:
    type: object
    properties:
      bulk_summaries:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaGetPipelineTriggerSummaryResponse'
        title: A list of pipeline trigger usage summaries
    title: |-
      GetBulkPipelineTriggerSummariesResponse represents a response to
      GetBulkPipelineTriggerSummariesRequest
    required:
      - bulk_summaries
  v1betaGetConnectorDefinitionResponse:
    type: object
    properties:
      connector_definition:
        $ref: '#/definitions/v1betaConnectorDefinition'
        description: The connector definition resource.
    description: GetConnectorDefinitionResponse contains the requested connector definition.
  v1betaGetCumulativeModelOnlineRecordsRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      model:
        $ref: '#/definitions/v1betaModelData'
        title: Model information
      time_interval:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time interval
    title: |-
      GetCumulativeModelOnlineRecordsRequest represents a query for cumulative
      model online records
    required:
      - user
      - model
      - time_interval
  v1betaGetCumulativeModelOnlineRecordsResponse:
    type: object
    properties:
      cumulative_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaModelUsageRecord'
        title: A list of model online records in cumulative format
    title: |-
      GetCumulativeModelOnlineRecordsResponse represents a response to
      GetCumulativeModelOnlineRecordsRequest
    required:
      - cumulative_records
  v1betaGetCumulativePipelineTriggerRecordsRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      pipeline:
        $ref: '#/definitions/v1betaPipelineData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time interval
    title: |-
      GetCumulativePipelineTriggerRecordsRequest represents a query for cumulative
      pipeline trigger records
    required:
      - user
      - pipeline
  v1betaGetCumulativePipelineTriggerRecordsResponse:
    type: object
    properties:
      cumulative_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipelineUsageRecord'
        title: Pipeline trigger records where values are in cumulative formats
    title: |-
      GetCumulativePipelineTriggerRecordsResponse represents a response to
      GetCumulativePipelineTriggerRecordsRequest
    required:
      - cumulative_records
  v1betaGetModelOnlinePriceRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      model:
        $ref: '#/definitions/v1betaModelData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time interval
    title: |-
      GetPipelineTriggerPriceRequest represents a query for price data of the
      billing periods covered by the time interval
    required:
      - user
      - model
      - time_interval
  v1betaGetModelOnlinePriceResponse:
    type: object
    properties:
      price:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPriceData'
        title: |-
          A list of model online prices given the billing periods covered by the time
          interval
    title: |-
      GetModelOnlinePriceResponse represents a response to
      GetModelOnlinePriceRequest
    required:
      - price
  v1betaGetModelOnlineRecordsRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      model:
        $ref: '#/definitions/v1betaModelData'
        title: Model information
      time_interval:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time interval
    title: GetModelOnlineRecordsRequest represent a query for model online records
    required:
      - user
      - model
      - time_interval
  v1betaGetModelOnlineRecordsResponse:
    type: object
    properties:
      records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaModelUsageRecord'
        title: A list of model trigger records
    title: |-
      GetModelOnlineRecordsResponse represents a response to
      GetModelOnlineRecordsRequest
    required:
      - records
  v1betaGetModelOnlineSummaryRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      model:
        $ref: '#/definitions/v1betaModelData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time interval
    title: GetModelOnlineSummaryRequest represents a query for model online summary
    required:
      - user
      - model
      - time_interval
  v1betaGetModelOnlineSummaryResponse:
    type: object
    properties:
      summary:
        $ref: '#/definitions/v1betaUsageSummary'
        title: The total model online usage in the time interval
    title: |-
      GetModelOnlineSummaryResponse represents a response to
      GetModelOnlineSummaryRequest
    required:
      - summary
  v1betaGetModelsResponse:
    type: object
    properties:
      models:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaModelData'
        title: A list of model informations
    title: GetPipelinesResponse represents a respond to GetModelsRequest
    required:
      - models
  v1betaGetOperationResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        description: The long-running operation.
        readOnly: true
    description: GetOperationResponse contains the long-running operation details.
  v1betaGetOperatorDefinitionResponse:
    type: object
    properties:
      operator_definition:
        $ref: '#/definitions/v1betaOperatorDefinition'
        description: The operator definition resource.
    description: GetOperatorDefinitionResponse contains the requested operator definition.
  v1betaGetOrganizationAdminResponse:
    type: object
    properties:
      organization:
        $ref: '#/definitions/v1betaOrganization'
        title: A organization resource
    title: GetOrganizationAdminResponse represents a response for a organization resource
  v1betaGetOrganizationConnectorResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        description: The connector resource.
    description: GetOrganizationConnectorResponse contains the requested connector.
  v1betaGetOrganizationMembershipResponse:
    type: object
    properties:
      membership:
        $ref: '#/definitions/v1betaOrganizationMembership'
        description: The requested organization membership.
    description: GetOrganizationMembershipResponse contains the organization membership.
  v1betaGetOrganizationPipelineReleaseResponse:
    type: object
    properties:
      release:
        $ref: '#/definitions/v1betaPipelineRelease'
        description: The pipeline release resource.
    description: GetOrganizationPipelineReleaseResponse contains the requested pipeline release.
  v1betaGetOrganizationPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1betaPipeline'
        description: The pipeline resource.
    description: GetOrganizationPipelineResponse contains the requested pipeline.
  v1betaGetOrganizationResponse:
    type: object
    properties:
      organization:
        $ref: '#/definitions/v1betaOrganization'
        description: The organization resource.
    description: GetOrganizationResponse contains the requested organization.
  v1betaGetOrganizationSubscriptionAdminResponse:
    type: object
    properties:
      subscription:
        $ref: '#/definitions/v1betaSubscription'
        title: Subscription
    title: GetOrganizationSubscriptionAdminResponse
  v1betaGetOrganizationSubscriptionResponse:
    type: object
    properties:
      subscription:
        $ref: '#/definitions/v1betaSubscription'
        description: The subscription resource.
    description: GetOrganizationSubscriptionResponse contains the requested subscription.
  v1betaGetPipelineTriggerPriceRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      pipeline:
        $ref: '#/definitions/v1betaPipelineData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time interval
    title: |-
      GetPipelineTriggerPriceRequest represents a query for pipeline trigger prices
      given the billing periods covered by the time interval
    required:
      - user
      - pipeline
      - time_interval
  v1betaGetPipelineTriggerPriceResponse:
    type: object
    properties:
      price:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPriceData'
        title: |-
          A list of pipeline trigger prices given the billing periods covered by the
          time interval
    title: |-
      GetPipelineTriggerPriceResponse represents a response to
      GetPipelineTriggerPriceRequest
    required:
      - price
  v1betaGetPipelineTriggerRecordsRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      pipeline:
        $ref: '#/definitions/v1betaPipelineData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time interval
    title: |-
      GetPipelineTriggerRecordsRequest represents a query for pipeline trigger
      records
    required:
      - user
      - pipeline
  v1betaGetPipelineTriggerRecordsResponse:
    type: object
    properties:
      records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipelineUsageRecord'
        title: A list of pipeline trigger records
    title: |-
      GetPipelineTriggerRecordsResponse represents a response to
      GetPipelineTriggerRecordsRequest
    required:
      - records
  v1betaGetPipelineTriggerSummaryRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      pipeline:
        $ref: '#/definitions/v1betaPipelineData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time interval
    title: |-
      GetPipelineTriggerSummaryRequest represents a query for pipeline trigger
      summary
    required:
      - user
      - pipeline
  v1betaGetPipelineTriggerSummaryResponse:
    type: object
    properties:
      summaries:
        $ref: '#/definitions/v1betaUsageSummary'
        title: The total pipeline trigger usage in the time interval
    title: |-
      GetPipelineTriggerSummaryResponse represents a response to
      GetPipelineTriggerSummaryRequest
    required:
      - summaries
  v1betaGetPipelinesResponse:
    type: object
    properties:
      pipelines:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipelineData'
        title: A list of pipeline informations
    title: GetPipelinesResponse represents a respond to GetPipelineRequest
    required:
      - pipelines
  v1betaGetTokenResponse:
    type: object
    properties:
      token:
        $ref: '#/definitions/v1betaApiToken'
        description: The API token resource.
    description: GetTokenResponse contains the requested token.
  v1betaGetUserAdminResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/mgmtv1betaUser'
        title: A user resource
    title: GetUserAdminResponse represents a response for a user resource
  v1betaGetUserConnectorResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        description: The connector resource.
    description: GetUserConnectorResponse contains the requested connector.
  v1betaGetUserMembershipResponse:
    type: object
    properties:
      membership:
        $ref: '#/definitions/v1betaUserMembership'
        description: The requested user membership.
    description: GetUserMembershipResponse contains the user membership.
  v1betaGetUserPipelineReleaseResponse:
    type: object
    properties:
      release:
        $ref: '#/definitions/v1betaPipelineRelease'
        description: The pipeline release resource.
    description: GetUserPipelineReleaseResponse contains the requested pipeline release.
  v1betaGetUserPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1betaPipeline'
        description: The pipeline resource.
    description: GetUserPipelineResponse contains the requested pipeline.
  v1betaGetUserResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/mgmtv1betaUser'
        description: The user resource.
    description: GetUserResponse contains the requested user.
  v1betaGetUserSubscriptionAdminResponse:
    type: object
    properties:
      subscription:
        $ref: '#/definitions/v1betaSubscription'
        title: Subscription
    title: GetUserSubscriptionAdminResponse
  v1betaGetUserSubscriptionResponse:
    type: object
    properties:
      subscription:
        $ref: '#/definitions/v1betaSubscription'
        description: The subscription resource.
    description: GetUserSubscriptionResponse contains the requested subscription.
  v1betaHealthCheckRequest:
    type: object
    properties:
      service:
        type: string
        title: Service name to check for its readiness status
    title: HealthCheckRequest represents a request to health check a service
  v1betaHealthCheckResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/HealthCheckResponseServingStatus'
        title: Status is the instance of the enum type ServingStatus
    title: HealthCheckResponse represents a response for a service heath status
  v1betaListConnectorDefinitionsResponse:
    type: object
    properties:
      connector_definitions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaConnectorDefinition'
        description: A list of connector definition resources.
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        description: Total number of connector definitions.
    description: ListConnectorDefinitionsResponse contains a list of connector definitions.
  v1betaListConnectorExecuteChartRecordsResponse:
    type: object
    properties:
      connector_execute_chart_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaConnectorExecuteChartRecord'
        description: A list of connector execution records.
    description: |-
      ListConnectorExecuteChartRecordsResponse contains a list of connector
      execution chart records.
  v1betaListConnectorExecuteRecordsResponse:
    type: object
    properties:
      connector_execute_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaConnectorExecuteRecord'
        title: A list of connector execute records
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        title: Total count of connector execute records
    title: |-
      ListConnectorExecuteRecordsResponse represents a response for a list
      of connector execute record
  v1betaListConnectorExecuteTableRecordsResponse:
    type: object
    properties:
      connector_execute_table_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaConnectorExecuteTableRecord'
        description: A list of connector execution records.
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        description: Total number of connector execution records.
    description: ListConnectorExecuteTableRecordsResponse contains the connector metrics.
  v1betaListConnectorsAdminResponse:
    type: object
    properties:
      connectors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaConnector'
        description: A list of connector resources.
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        description: Total number of connectors.
    description: |-
      ListConnectorsAdminResponse contains a list of connectors requested by an
      admin.
  v1betaListConnectorsResponse:
    type: object
    properties:
      connectors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaConnector'
        description: A list of connector resources.
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        description: Total number of connectors.
    title: |-
      ListConnectorsResponse represents a response for a list of
      connectors
  v1betaListOperatorDefinitionsResponse:
    type: object
    properties:
      operator_definitions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaOperatorDefinition'
        description: A list of operator definition resources.
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        description: Total number of operator definitions.
    description: ListOperatorDefinitionsResponse contains a list of operator definitions.
  v1betaListOrganizationConnectorsResponse:
    type: object
    properties:
      connectors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaConnector'
        description: A list of connector resources.
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        title: Total count of connectors
    description: ListOrganizationConnectorsResponse contains a list of connectors.
  v1betaListOrganizationMembershipsResponse:
    type: object
    properties:
      memberships:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaOrganizationMembership'
        description: |-
          The organization memberships, i.e., the users that belong to the
          organization.
    description: ListOrganizationMembershipsResponse contains a list of memberships.
  v1betaListOrganizationPipelineReleasesResponse:
    type: object
    properties:
      releases:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipelineRelease'
        description: A list of pipeline release resources.
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        description: Total number of pipeline releases.
    description: ListOrganizationPipelineReleasesResponse contains a list of pipeline releases.
  v1betaListOrganizationPipelinesResponse:
    type: object
    properties:
      pipelines:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipeline'
        description: A list of pipeline resources.
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        description: Total number of pipelines.
    description: ListOrganizationPipelinesResponse contains a list of pipelines.
  v1betaListOrganizationsAdminResponse:
    type: object
    properties:
      organizations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaOrganization'
        title: A list of organizations
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        description: Total number of organizations.
    title: ListOrganizationsAdminResponse represents a response for a list of organizations
  v1betaListOrganizationsResponse:
    type: object
    properties:
      organizations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaOrganization'
        title: A list of organizations
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        description: Total number of organizations.
    title: ListOrganizationsResponse represents a response for a list of organizations
  v1betaListPipelineReleasesAdminResponse:
    type: object
    properties:
      releases:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipelineRelease'
        description: A list of pipeline releases.
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        description: Total number of pipeline releases.
    description: |-
      ListPipelineReleasesAdminResponse contains a list of pipeline releases
      requested by an admin user.
      For the moment, the pipeline recipes will be UID-based (permalink) instead
      of name-based. This is a temporary solution.
  v1betaListPipelineTriggerChartRecordsResponse:
    type: object
    properties:
      pipeline_trigger_chart_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipelineTriggerChartRecord'
        description: A list of pipeline trigger records.
    description: |-
      ListPipelineTriggerChartRecordsResponse contains a list of pipeline trigger
      chart records.
  v1betaListPipelineTriggerRecordsResponse:
    type: object
    properties:
      pipeline_trigger_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipelineTriggerRecord'
        description: A list of pipeline triggers.
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        description: Total number of pipeline triggers.
    description: ListPipelineTriggerRecordsResponse contains a list of pipeline triggers.
  v1betaListPipelineTriggerTableRecordsResponse:
    type: object
    properties:
      pipeline_trigger_table_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipelineTriggerTableRecord'
        description: A list of pipeline trigger tables.
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        title: Total number of pipeline trigger records
    description: ListPipelineTriggerTableRecordsResponse contains the pipeline metrics.
  v1betaListPipelinesAdminResponse:
    type: object
    properties:
      pipelines:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipeline'
        description: A list of pipeline resources.
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        description: Total number of pipelines.
    description: |-
      ListPipelinesAdminResponse contains a list of pipelines requested by an
      admin user.
      For the moment, the pipeline recipes will be UID-based (permalink) instead
      of name-based. This is a temporary solution.
  v1betaListPipelinesResponse:
    type: object
    properties:
      pipelines:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipeline'
        description: A list of pipeline resources.
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        description: Total number of pipelines.
    description: ListPipelinesResponse contains a list of pipelines.
  v1betaListTokensResponse:
    type: object
    properties:
      tokens:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaApiToken'
        description: A list of API token resources.
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        description: Total number of API token resources.
    description: ListTokensResponse contains a list of API tokens.
  v1betaListUserConnectorsResponse:
    type: object
    properties:
      connectors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaConnector'
        description: A list of connector resources.
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        title: Total count of connectors
    description: ListUserConnectorsResponse contains a list of connectors.
  v1betaListUserMembershipsResponse:
    type: object
    properties:
      memberships:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaUserMembership'
        description: The user memberships, i.e., the organizations the user belongs to.
    description: ListUserMembershipsResponse contains a list of memberships.
  v1betaListUserPipelineReleasesResponse:
    type: object
    properties:
      releases:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipelineRelease'
        description: A list of pipeline release resources.
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        description: Total number of pipeline releases.
    description: ListUserPipelineReleasesResponse contains a list of pipeline releases.
  v1betaListUserPipelinesResponse:
    type: object
    properties:
      pipelines:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipeline'
        description: A list of pipeline resources.
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        description: Total number of pipelines.
    description: ListUserPipelinesResponse contains a list of pipelines.
  v1betaListUsersAdminResponse:
    type: object
    properties:
      users:
        type: array
        items:
          type: object
          $ref: '#/definitions/mgmtv1betaUser'
        title: A list of users
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        description: Total number of users.
    title: ListUsersAdminResponse represents a response for a list of users
  v1betaListUsersResponse:
    type: object
    properties:
      users:
        type: array
        items:
          type: object
          $ref: '#/definitions/mgmtv1betaUser'
        description: A list of user resources.
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        description: Total number of users.
    description: ListUsersResponse contains a list of users.
  v1betaLookUpConnectorAdminResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        title: connector
    description: |-
      LookUpConnectorAdminResponse represents a response for a
      connector.
  v1betaLookUpConnectorDefinitionAdminResponse:
    type: object
    properties:
      connector_definition:
        $ref: '#/definitions/v1betaConnectorDefinition'
        description: The requested connector.
    description: |-
      LookUpConnectorDefinitionAdminResponse represents a response for a
      connector definition.
  v1betaLookUpConnectorResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        description: The requested connector.
    description: LookUpConnectorResponse represents a response for a connector.
  v1betaLookUpOperatorDefinitionAdminResponse:
    type: object
    properties:
      operator_definition:
        $ref: '#/definitions/v1betaOperatorDefinition'
        description: The requested operator definition.
    description: |-
      LookUpOperatorDefinitionAdminResponse represents a response for an operator
      definition.
  v1betaLookUpOrganizationAdminResponse:
    type: object
    properties:
      organization:
        $ref: '#/definitions/v1betaOrganization'
        title: A organization resource
    title: LookUpOrganizationAdminResponse represents a response for a organization resource by admin
  v1betaLookUpPipelineAdminResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1betaPipeline'
        description: The requested pipeline.
    description: LookUpPipelineAdminResponse contains the requested pipeline.
  v1betaLookUpPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1betaPipeline'
        description: The requested pipeline.
    description: LookUpPipelineResponse contains the requested pipeline.
  v1betaLookUpUserAdminResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/mgmtv1betaUser'
        title: A user resource
    title: LookUpUserAdminResponse represents a response for a user resource by admin
  v1betaMembershipState:
    type: string
    enum:
      - MEMBERSHIP_STATE_ACTIVE
      - MEMBERSHIP_STATE_PENDING
    description: |-
      MembershipState describes the state of a user membership to an organization.

       - MEMBERSHIP_STATE_UNSPECIFIED: Unspecified.
       - MEMBERSHIP_STATE_ACTIVE: Active.
       - MEMBERSHIP_STATE_PENDING: Pending, i.e., a request has been sent to the user to join an
      organization.
  v1betaMgmtUsageData:
    type: object
    properties:
      usages:
        type: array
        items:
          type: object
          $ref: '#/definitions/mgmtv1betaUser'
        title: Repeated user usage data
    title: Management service usage data
  v1betaMode:
    type: string
    enum:
      - MODE_SYNC
      - MODE_ASYNC
    description: |-
      Mode describes the execution mode of the pipeline (sync or async).

       - MODE_UNSPECIFIED: Unspecified.
       - MODE_SYNC: Synchronous (result is returned in the response).
       - MODE_ASYNC: Asynchronous (response only contains acknowledgement).
  v1betaModelData:
    type: object
    properties:
      uid:
        type: string
        title: Model unique id that is auto generated
      id:
        type: string
        title: Model id that is given by the users
      instance_id:
        type: string
        title: The id of the model instance that is deployed
      task:
        type: string
        title: The AI task supported by this model
    title: Pipeline records definition
    required:
      - uid
      - id
      - instance_id
      - task
  v1betaModelUsageData:
    type: object
    properties:
      usages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaModelUsageDataUserUsageData'
        title: Usage data of all users in the model service
    title: Model service usage data
  v1betaModelUsageDataUserUsageData:
    type: object
    properties:
      owner_uid:
        type: string
        title: Owner UUID
      model_trigger_data:
        type: array
        items:
          type: object
          $ref: '#/definitions/UserUsageDataModelTriggerData'
        title: Trigger data for each user
      owner_type:
        $ref: '#/definitions/v1betaOwnerType'
        title: Owner type
    title: Per user usage data in the model service
    required:
      - owner_uid
      - model_trigger_data
      - owner_type
  v1betaModelUsageRecord:
    type: object
    properties:
      deploy_time:
        type: string
        format: date-time
        title: Time when the model is ONLINE
      record_time:
        type: string
        format: date-time
        title: Time when model online usage is recorded
      value:
        type: integer
        format: int32
        title: |-
          The model online usage record that is logged in cumulative manner. This
          value records the cumulative usage since model is online in the current
          billing period
    title: Model online usage record definition
    required:
      - deploy_time
      - record_time
      - value
  v1betaNullMessage:
    type: object
    title: Nul Message for gRPC REQ/RES
  v1betaOperatorDefinition:
    type: object
    properties:
      name:
        type: string
        title: |-
          The name of the operator definition.
          - Format: `operator-definitions/*`
        readOnly: true
      uid:
        type: string
        description: Operator definition UUID.
        readOnly: true
      id:
        type: string
        description: |-
          Operator definition resource ID (used in `name` as the last segment).
          This conforms to RFC-1034, which restricts to letters, numbers, and
          hyphen, with the first character a letter, the last a letter or a number,
          and a 63 character maximum.
      title:
        type: string
        description: Operator definition title.
        readOnly: true
      documentation_url:
        type: string
        description: Operator definition documentation URL.
        readOnly: true
      icon:
        type: string
        description: Operator definition icon.
        readOnly: true
      spec:
        $ref: '#/definitions/v1betaOperatorSpec'
        description: Operator definition specification.
        readOnly: true
      tombstone:
        type: boolean
        description: |-
          Operator definition tombstone. If true, this configuration is permanently
          off. Otherwise, the configuration is active.
        readOnly: true
      public:
        type: boolean
        description: |-
          The public flag determines whether this operator definition is available
          to all workspaces.
        readOnly: true
      custom:
        type: boolean
        description: The custom flag determines whether this is a custom operator definition.
        readOnly: true
      icon_url:
        type: string
        description: Operator definition icon URL.
        readOnly: true
    description: |-
      An Operator is a type of pipeline component that performs data injection and
      manipulation. OperatorDefinition describes a certain type of operator.

      For more information, see
      [Component](https://www.instill.tech/docs/latest/core/concepts/pipeline#pipeline-component)
      in the official documentation.
  v1betaOperatorDefinitionView:
    type: string
    enum:
      - VIEW_BASIC
      - VIEW_FULL
    description: |-
      View defines how an operator definition is presented.

       - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
       - VIEW_BASIC: Default view, only includes basic information.
       - VIEW_FULL: Full representation.
  v1betaOperatorSpec:
    type: object
    properties:
      component_specification:
        type: object
        description: Component specification.
      openapi_specifications:
        type: object
        description: OpenAPI specification.
    description: OperatorSpec represents a specification data model.
    required:
      - component_specification
      - openapi_specifications
  v1betaOrganization:
    type: object
    properties:
      name:
        type: string
        description: |-
          The name of the organization, defined by its ID.
          - Format: `organization/{organization.id}`.
        readOnly: true
      uid:
        type: string
        description: Organization UUID.
        readOnly: true
      id:
        type: string
        description: |-
          Resource ID (used in `name` as the last segment). This conforms to
          RFC-1034, which restricts to letters, numbers, and hyphen, with the first
          character a letter, the last a letter or a number, and a 63 character
          maximum.

          Note that the ID can be updated.
      create_time:
        type: string
        format: date-time
        description: Creation time.
        readOnly: true
      update_time:
        type: string
        format: date-time
        description: Update time.
        readOnly: true
      org_name:
        type: string
        description: Company or institution name.
      customer_id:
        type: string
        description: Stripe customer ID. This field is used in Instill Cloud.
        readOnly: true
      profile_avatar:
        type: string
        description: Profile Avatar in base64.
      profile_data:
        type: object
        description: Profile Data.
      owner:
        $ref: '#/definitions/mgmtv1betaUser'
        description: The user that owns the organization.
        readOnly: true
    description: |-
      Organizations group several users. As entities, they can own resources such
      as pipelines or releases.
    required:
      - id
  v1betaOrganizationMembership:
    type: object
    properties:
      name:
        type: string
        description: |-
          The resource name of the membership, which allows its access by
          organization and user ID.
          - Format: `organizations/{organization.id}/memberships/{user.id}`.
        readOnly: true
      role:
        type: string
        description: Role of the user in the organization.
      state:
        $ref: '#/definitions/v1betaMembershipState'
        description: State of the membership.
        readOnly: true
      user:
        $ref: '#/definitions/mgmtv1betaUser'
        description: User information.
        readOnly: true
      organization:
        $ref: '#/definitions/v1betaOrganization'
        description: Organization information.
        readOnly: true
    description: |-
      An organization membership defines the relationship between an organization
      and a user that is attached to it.
    required:
      - role
  v1betaOwnerType:
    type: string
    enum:
      - OWNER_TYPE_USER
      - OWNER_TYPE_ORGANIZATION
    description: |-
      - OWNER_TYPE_UNSPECIFIED: OwnerType: UNSPECIFIED
       - OWNER_TYPE_USER: OwnerType: USER
       - OWNER_TYPE_ORGANIZATION: OwnerType: ORGANIZATION
    title: OwnerType enumerates the owner type of any resource
  v1betaPatchAuthenticatedUserResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/mgmtv1betaUser'
        description: The updated user resource.
    title: |-
      PatchAuthenticatedUserResponse contains the updated user.
      the authenticated user resource
  v1betaPermission:
    type: object
    properties:
      can_edit:
        type: boolean
        description: Defines whether the resource can be modified.
      can_trigger:
        type: boolean
        description: Defines whether the resource can be executed.
    description: Permission defines how a resource can be used.
  v1betaPipeline:
    type: object
    properties:
      name:
        type: string
        description: |-
          The name of the pipeline, defined by its owner and ID.
          - Format: `users/{user.id}/pipelines/{pipeline.id}`.
        readOnly: true
      uid:
        type: string
        description: Pipeline UUID.
        readOnly: true
      id:
        type: string
        description: |-
          Pipeline resource ID (used in `name` as the last segment). This conforms
          to RFC-1034, which restricts to letters, numbers, and hyphen, with the
          first character a letter, the last a letter or a number, and a 63
          character maximum.
      description:
        type: string
        description: Pipeline description.
      recipe:
        $ref: '#/definitions/v1betaRecipe'
        description: Recipe describes the components of a Pipeline and how they are connected.
      create_time:
        type: string
        format: date-time
        description: Pipeline creation time.
        readOnly: true
      update_time:
        type: string
        format: date-time
        description: Pipeline update time.
        readOnly: true
      openapi_schema:
        type: object
        description: OpenAPI schema.
        readOnly: true
      delete_time:
        type: string
        format: date-time
        description: Pipeline delete time.
        readOnly: true
      sharing:
        $ref: '#/definitions/v1betaSharing'
        description: Pipeline sharing information.
      metadata:
        type: object
        description: Metadata holds console-related data such as the pipeline builder layout.
      owner_name:
        type: string
        description: Owner Name.
        readOnly: true
      owner:
        type: object
        description: Owner details.
        readOnly: true
      releases:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipelineRelease'
        description: Releases holds the history of pipeline versions.
        readOnly: true
      readme:
        type: string
        description: README holds the pipeline documentation.
      permission:
        $ref: '#/definitions/v1betaPermission'
        description: Permission defines how a pipeline can be used.
        readOnly: true
    description: |-
      A Pipeline is an end-to-end workflow that automates a sequence of components
      to process data.

      For more information, see
      [Pipeline](https://www.instill.tech/docs/latest/core/concepts/pipeline) in
      the official documentation.
  v1betaPipelineData:
    type: object
    properties:
      uid:
        type: string
        title: Pipeline unique id that is auto generated
      id:
        type: string
        title: Pipeline id assigned by users
      task:
        type: string
        title: Pipeline task indicate the AI task this pipeline supports
    title: Pipeline records definition
    required:
      - uid
      - id
      - task
  v1betaPipelineRelease:
    type: object
    properties:
      name:
        type: string
        title: |-
          The name of the release, defined by its owner and ID.
          - Format: `users/{user.id}/pipelines/{pipeline.id}/releases/{release.id}
        readOnly: true
      uid:
        type: string
        description: Release UUID.
        readOnly: true
      id:
        type: string
        description: |-
          Release resource ID (used in `name` as the last segment). It must be a
          sematic version vX.Y.Z.
      description:
        type: string
        description: Release description.
      recipe:
        $ref: '#/definitions/v1betaRecipe'
        description: Recipe of the versioned pipeline.
        readOnly: true
      create_time:
        type: string
        format: date-time
        description: Pipeline creation time.
        readOnly: true
      update_time:
        type: string
        format: date-time
        description: Pipeline update time.
        readOnly: true
      openapi_schema:
        type: object
        description: OpenAPI schema.
        readOnly: true
      delete_time:
        type: string
        format: date-time
        description: Pipeline deletion time.
        readOnly: true
      alias:
        type: string
        description: Alias.
        readOnly: true
      metadata:
        type: object
        description: |-
          Key-value object with console-related data such as the pipeline builder
          layout.
      readme:
        type: string
        description: README.
    description: |-
      Pipeline releases contain the version control information of a pipeline.
      This allows users to track changes in the pipeline over time.
  v1betaPipelineTriggerChartRecord:
    type: object
    properties:
      pipeline_id:
        type: string
        description: Pipeline ID.
      pipeline_uid:
        type: string
        description: Pipeline UUID.
      trigger_mode:
        $ref: '#/definitions/v1betaMode'
        description: Trigger mode.
      status:
        $ref: '#/definitions/mgmtv1betaStatus'
        description: Final status.
        readOnly: true
      time_buckets:
        type: array
        items:
          type: string
          format: date-time
        description: Time buckets.
        readOnly: true
      trigger_counts:
        type: array
        items:
          type: integer
          format: int32
        description: Aggregated trigger count in each time bucket.
        readOnly: true
      compute_time_duration:
        type: array
        items:
          type: number
          format: float
        description: Total computation time duration in each time bucket.
        readOnly: true
      pipeline_release_id:
        type: string
        description: Version for the triggered pipeline if it is a release pipeline.
        readOnly: true
      pipeline_release_uid:
        type: string
        description: Release UUID for the triggered pipeline if it is a release pipeline.
        readOnly: true
    description: |-
      PipelineTriggerChartRecord contains pipeline trigger metrics, aggregated by
      pipeline ID and time frame.
  v1betaPipelineTriggerRecord:
    type: object
    properties:
      trigger_time:
        type: string
        format: date-time
        description: The moment when the pipeline was triggered.
      pipeline_trigger_id:
        type: string
        description: UUID of the trigger.
      pipeline_id:
        type: string
        description: Pipeline ID.
      pipeline_uid:
        type: string
        description: Pipeline UUID.
      trigger_mode:
        $ref: '#/definitions/v1betaMode'
        description: Trigger mode.
      compute_time_duration:
        type: number
        format: float
        description: Total execution duration.
        readOnly: true
      status:
        $ref: '#/definitions/mgmtv1betaStatus'
        description: Final status.
        readOnly: true
      pipeline_release_id:
        type: string
        description: If a release of the pipeline was triggered, pipeline version.
        readOnly: true
      pipeline_release_uid:
        type: string
        description: If a release of the pipeline was triggered, release UUID.
        readOnly: true
    description: PipelineTriggerRecord represents a pipeline execution event.
  v1betaPipelineTriggerTableRecord:
    type: object
    properties:
      pipeline_id:
        type: string
        description: Pipeline ID.
      pipeline_uid:
        type: string
        description: Pipeline UUID.
      trigger_count_completed:
        type: integer
        format: int32
        description: Number of triggers with `STATUS_COMPLETED`.
        readOnly: true
      trigger_count_errored:
        type: integer
        format: int32
        description: Number of triggers with `STATUS_ERRORED`.
        readOnly: true
      pipeline_release_id:
        type: string
        description: Version for the triggered pipeline if it is a release pipeline.
        readOnly: true
      pipeline_release_uid:
        type: string
        description: Release UUID for the triggered pipeline if it is a release pipeline.
        readOnly: true
    description: |-
      PipelineTriggerTableRecord contains pipeline trigger metrics, aggregated by
      pipeline ID.
  v1betaPipelineUsageData:
    type: object
    properties:
      usages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipelineUsageDataUserUsageData'
        title: Usage data of all users in the pipeline service
    title: Pipeline service usage data
  v1betaPipelineUsageDataUserUsageData:
    type: object
    properties:
      owner_uid:
        type: string
        title: Owner UUID
      pipeline_trigger_data:
        type: array
        items:
          type: object
          $ref: '#/definitions/UserUsageDataPipelineTriggerData'
        title: Trigger data for each user
      owner_type:
        $ref: '#/definitions/v1betaOwnerType'
        title: Owner type
    title: Per user usage data in the pipeline service
    required:
      - owner_uid
      - pipeline_trigger_data
      - owner_type
  v1betaPipelineUsageRecord:
    type: object
    properties:
      request_id:
        type: string
        description: A unique request id given by vdp when trigger the pipeline.
      operation_id:
        type: string
        title: A unique operation id given by vdp
      status:
        type: string
        title: The HTTP status received when user trigger the pipeline
      trigger_time:
        type: string
        format: date-time
        title: Time when the pipeline is triggered
      record_time:
        type: string
        format: date-time
        title: Time when the pipeline trigger usage is recorded
      value:
        type: integer
        format: int32
        title: |-
          The pipeline trigger usage record. The unit of the usage should be
          consistent with Stripe
    title: Pipeline trigger usage record definition
    required:
      - request_id
      - operation_id
      - status
      - trigger_time
      - record_time
      - value
  v1betaPipelineView:
    type: string
    enum:
      - VIEW_BASIC
      - VIEW_FULL
      - VIEW_RECIPE
    description: |-
      View defines how a Pipeline is presented.

       - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
       - VIEW_BASIC: Default view, only includes basic information.
       - VIEW_FULL: Full representation.
       - VIEW_RECIPE: Contains the recipe of the resource.
  v1betaPriceData:
    type: object
    properties:
      time:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time when the price record is generated
      currency:
        type: string
        title: The currency of the price
        readOnly: true
      amount:
        type: number
        format: float
        title: The price of the query usage in the current billing period
        readOnly: true
    title: Pricing information
    required:
      - time
  v1betaRecipe:
    type: object
    properties:
      version:
        type: string
        description: Recipe schema version.
      components:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaComponent'
        description: List of pipeline components.
    description: Recipe describes the components of a Pipeline and how they are connected.
  v1betaRenameOrganizationConnectorResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        description: The renamed connector resource.
    description: RenameOrganizationConnectorResponse contains a renamed connector.
  v1betaRenameOrganizationPipelineReleaseResponse:
    type: object
    properties:
      release:
        $ref: '#/definitions/v1betaPipelineRelease'
        description: The renamed pipeline release.
    description: RenameOrganizationPipelineReleaseResponse contains a renamed pipeline release.
  v1betaRenameOrganizationPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1betaPipeline'
        description: The renamed pipeline resource.
    description: RenameOrganizationPipelineResponse contains a renamed pipeline.
  v1betaRenameUserConnectorResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        description: The renamed connector resource.
    description: RenameUserConnectorResponse contains a renamed connector.
  v1betaRenameUserPipelineReleaseResponse:
    type: object
    properties:
      release:
        $ref: '#/definitions/v1betaPipelineRelease'
        description: The renamed pipeline release.
    description: RenameUserPipelineReleaseResponse contains a renamed pipeline release.
  v1betaRenameUserPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1betaPipeline'
        description: The renamed pipeline resource.
    description: RenameUserPipelineResponse contains a renamed pipeline.
  v1betaReportModelOnlineRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      model:
        $ref: '#/definitions/v1betaModelData'
        title: Model information
      cum_usage_record:
        $ref: '#/definitions/v1betaModelUsageRecord'
        title: Model online record
    title: |-
      ReportModelOnlineRequest represents a request for reporting a model-online
      record
    required:
      - user
      - model
      - cum_usage_record
  v1betaReportModelOnlineResponse:
    type: object
    properties:
      "null":
        $ref: '#/definitions/v1betaNullMessage'
        title: Null message for empty response
    title: |-
      ReportModelOnlineResponse represents a respond to a model-online-record
      report request
  v1betaReportModelOnlinesResponse:
    type: object
    properties:
      "null":
        $ref: '#/definitions/v1betaNullMessage'
        title: Null message for empty response
    title: |-
      ReportModelOnlinesResponse represents a respond to a model-online-records
      reporting bulk request
  v1betaReportPipelineTriggerRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      pipeline:
        $ref: '#/definitions/v1betaPipelineData'
        title: Pipeline information
      usage_record:
        $ref: '#/definitions/v1betaPipelineUsageRecord'
        title: Pipeline trigger record
    title: |-
      ReportPipelineTriggerRequest represents a request for reporting a
      pipeline-trigger record
    required:
      - user
      - pipeline
      - usage_record
  v1betaReportPipelineTriggerResponse:
    type: object
    properties:
      "null":
        $ref: '#/definitions/v1betaNullMessage'
        title: Null message for empty response
    title: |-
      ReportPipelineTriggerResponse represents a respond to a
      pipeline-trigger-record report request
  v1betaReportPipelineTriggersResponse:
    type: object
    properties:
      "null":
        $ref: '#/definitions/v1betaNullMessage'
        title: Null message for empty response
    title: |-
      ReportPipelineTriggersResponse represents a respond to a
      pipeline-trigger-records reporting bulk request
  v1betaRestoreOrganizationPipelineReleaseResponse:
    type: object
    properties:
      release:
        $ref: '#/definitions/v1betaPipelineRelease'
        description: The pipeline release resource.
    description: |-
      RestoreOrganizationPipelineReleaseResponse contains the requested pipeline
      release.
  v1betaRestoreUserPipelineReleaseResponse:
    type: object
    properties:
      release:
        $ref: '#/definitions/v1betaPipelineRelease'
        description: The pipeline release resource.
    description: RestoreUserPipelineReleaseResponse contains the requested pipeline release.
  v1betaRole:
    type: string
    enum:
      - ROLE_VIEWER
      - ROLE_EXECUTOR
    description: |-
      Role describes the permissions a user has over a resource.

       - ROLE_UNSPECIFIED: Unspecified, equivalent to VIEWER.
       - ROLE_VIEWER: Viewers can see the resource properties.
       - ROLE_EXECUTOR: Executors can execute the resource (e.g. trigger a pipeline).
  v1betaSendSessionReportResponse:
    type: object
    title: SendReportResponse represents an empty response
  v1betaSession:
    type: object
    properties:
      name:
        type: string
        title: Resource name in the format of 'sessions/uid'
        readOnly: true
      uid:
        type: string
        title: Resource UUID
        readOnly: true
      service:
        $ref: '#/definitions/SessionService'
        title: name of the service to collect data from
      edition:
        type: string
        title: 'Session edition, allowed values include: ''local-ce'' and ''local-ce:dev'''
      version:
        type: string
        title: Version of the service
      arch:
        type: string
        title: Architecture of the system
      os:
        type: string
        title: Operating system
      uptime:
        type: string
        format: int64
        title: Session service uptime
      report_time:
        type: string
        format: date-time
        title: Report time
      token:
        type: string
        description: |-
          Token to send report. The token is generated by the server and sent to
          the client. Client needs to use the token to send report to the server.
        readOnly: true
      create_time:
        type: string
        format: date-time
        title: Session creation time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: Session update time
        readOnly: true
      owner_uid:
        type: string
        title: Owner UUID of the instance, can also be considered as instance UUID
    title: |-
      Session represents a unique session whenever a new instance of VDP service
      gets started. The usage server returns a token that should be used as part of
      the challenge when sending a report with data collected from this session
    required:
      - service
      - edition
      - version
      - arch
      - os
      - uptime
      - report_time
      - owner_uid
  v1betaSessionReport:
    type: object
    properties:
      session_uid:
        type: string
        title: Session uid
      token:
        type: string
        title: Session token
      pow:
        type: string
        title: Proof-of-work See https://en.wikipedia.org/wiki/Proof_of_work
      session:
        $ref: '#/definitions/v1betaSession'
        title: Session
      mgmt_usage_data:
        $ref: '#/definitions/v1betaMgmtUsageData'
        title: Management service usage data
      connector_usage_data:
        $ref: '#/definitions/v1betaConnectorUsageData'
        title: Connector service usage data
      model_usage_data:
        $ref: '#/definitions/v1betaModelUsageData'
        title: Model service usage data
      pipeline_usage_data:
        $ref: '#/definitions/v1betaPipelineUsageData'
        title: Pipeline service usage data
    title: |-
      SessionReport represents a report to be sent to the server that includes the
      usage data of a session
    required:
      - session_uid
      - token
      - pow
      - session
  v1betaSharing:
    type: object
    properties:
      users:
        type: object
        additionalProperties:
          $ref: '#/definitions/v1betaSharingUser'
        description: |-
          Defines sharing rules for a set of user resource names.

          Each key in this object should contain a pattern that can be matched
          against user names.

          Each value is a user sharing configuration.

          **NOTE**: For now, the only accepted key is `*/*`.
      share_code:
        $ref: '#/definitions/SharingShareCode'
        description: Defines the configuration to share a resource via link.
    description: |-
      Sharing contains the information to share a resource with other users.

      For more information, see [Share Pipelines](https://www.instill.tech/docs/latest/vdp/share).
  v1betaSharingUser:
    type: object
    properties:
      enabled:
        type: boolean
        description: Defines whether the sharing option with this user is enabled.
      role:
        $ref: '#/definitions/v1betaRole'
        description: Defines the role the user will have over the resource.
    description: Describes the sharing configuration with a given user.
  v1betaSubscription:
    type: object
    properties:
      plan:
        type: string
        description: Plan identifier, e.g. `freemium`.
    description: Subscription details describe the plan (i.e. the features) a user has access to.
  v1betaTestOrganizationConnectorResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1betaConnectorState'
        description: The connector state.
    description: TestOrganizationConnectorResponse contains the connection state.
  v1betaTestUserConnectorResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1betaConnectorState'
        description: The connector state.
    description: TestUserConnectorResponse contains the connection state.
  v1betaTimeInterval:
    type: object
    properties:
      start_time:
        type: string
        format: date-time
        title: Start time of the interval
      end_time:
        type: string
        format: date-time
        title: End time of the interval
    title: Time interval
    required:
      - start_time
      - end_time
  v1betaTrace:
    type: object
    properties:
      statuses:
        type: array
        items:
          $ref: '#/definitions/v1betaTraceStatus'
        description: Statuses contains an execution status per input.
      inputs:
        type: array
        items:
          type: object
        description: Component inputs.
      outputs:
        type: array
        items:
          type: object
        description: Component outputs.
      error:
        type: object
        description: Error details.
      compute_time_in_seconds:
        type: number
        format: float
        description: Computation time in seconds.
    description: Trace contains the execution details of a component.
  v1betaTraceStatus:
    type: string
    enum:
      - STATUS_COMPLETED
      - STATUS_SKIPPED
      - STATUS_ERROR
    description: |-
      Status holds the the component execution outcome.

       - STATUS_UNSPECIFIED: Unspecified.
       - STATUS_COMPLETED: Successfully completed.
       - STATUS_SKIPPED: Skipped.
       - STATUS_ERROR: Aborted with error.
  v1betaTriggerAsyncOrganizationPipelineReleaseResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        description: Long-running operation information.
        readOnly: true
    description: |-
      TriggerAsyncOrganizationPipelineReleaseResponse contains the information to
      access the status of an asynchronous pipeline execution.
  v1betaTriggerAsyncOrganizationPipelineResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        description: Long-running operation information.
        readOnly: true
    description: |-
      TriggerAsyncOrganizationPipelineResponse contains the information to access
      the status of an asynchronous pipeline execution.
  v1betaTriggerAsyncUserPipelineReleaseResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        description: Long-running operation information.
        readOnly: true
    description: |-
      TriggerAsyncUserPipelineReleaseResponse contains the information to access
      the status of an asynchronous pipeline execution.
  v1betaTriggerAsyncUserPipelineResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        description: Long-running operation information.
        readOnly: true
    description: |-
      TriggerAsyncUserPipelineResponse contains the information to access the
      status of an asynchronous pipeline execution.
  v1betaTriggerMetadata:
    type: object
    properties:
      traces:
        type: object
        additionalProperties:
          $ref: '#/definitions/v1betaTrace'
        description: |-
          Each key in the `traces` object is a component ID. The value is a Trace
          object containing the execution details.
    description: TriggerMetadata contains the traces of the pipeline inference.
  v1betaTriggerOrganizationPipelineReleaseResponse:
    type: object
    properties:
      outputs:
        type: array
        items:
          type: object
        description: Model inference outputs.
      metadata:
        $ref: '#/definitions/v1betaTriggerMetadata'
        description: Traces of the pipeline inference.
    description: |-
      TriggerOrganizationPipelineReleaseResponse contains the pipeline execution
      results, i.e., the multiple model inference outputs.
  v1betaTriggerOrganizationPipelineResponse:
    type: object
    properties:
      outputs:
        type: array
        items:
          type: object
        description: Model inference outputs.
      metadata:
        $ref: '#/definitions/v1betaTriggerMetadata'
        description: Traces of the pipeline inference.
    description: |-
      TriggerOrganizationPipelineResponse contains the pipeline execution results,
      i.e., the multiple model inference outputs.
  v1betaTriggerUserPipelineReleaseResponse:
    type: object
    properties:
      outputs:
        type: array
        items:
          type: object
        description: Model inference outputs.
      metadata:
        $ref: '#/definitions/v1betaTriggerMetadata'
        description: Traces of the pipeline inference.
    description: |-
      TriggerUserPipelineReleaseResponse contains the pipeline execution results,
      i.e., the multiple model inference outputs.
  v1betaTriggerUserPipelineResponse:
    type: object
    properties:
      outputs:
        type: array
        items:
          type: object
        description: Model inference outputs.
      metadata:
        $ref: '#/definitions/v1betaTriggerMetadata'
        description: Traces of the pipeline inference.
    description: |-
      TriggerUserPipelineResponse contains the pipeline execution results, i.e.,
      the multiple model inference outputs.
  v1betaUpdateOrganizationConnectorResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        description: The updated connector resource.
    description: UpdateOrganizationConnectorResponse contains the updated connector.
  v1betaUpdateOrganizationMembershipResponse:
    type: object
    properties:
      membership:
        $ref: '#/definitions/v1betaOrganizationMembership'
        description: The updated membership resource.
    description: UpdateOrganizationMembershipResponse contains the updated membership.
  v1betaUpdateOrganizationPipelineReleaseResponse:
    type: object
    properties:
      release:
        $ref: '#/definitions/v1betaPipelineRelease'
        description: The updated pipeline release resource.
    description: |-
      UpdateOrganizationPipelineReleaseResponse contains the updated pipeline
      release.
  v1betaUpdateOrganizationPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1betaPipeline'
        description: The updated pipeline resource.
    description: UpdateOrganizationPipelineResponse contains the updated pipeline.
  v1betaUpdateOrganizationResponse:
    type: object
    properties:
      organization:
        $ref: '#/definitions/v1betaOrganization'
        description: The organization resource.
    description: UpdateOrganizationResponse contains the updated organization.
  v1betaUpdateUserConnectorResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        description: The updated connector resource.
    description: UpdateUserConnectorResponse contains the updated connector.
  v1betaUpdateUserMembershipResponse:
    type: object
    properties:
      membership:
        $ref: '#/definitions/v1betaUserMembership'
        description: The updated membership resource.
    description: UpdateUserMembershipResponse contains the updated membership.
  v1betaUpdateUserPipelineReleaseResponse:
    type: object
    properties:
      release:
        $ref: '#/definitions/v1betaPipelineRelease'
        description: The updated pipeline release resource.
    description: UpdateUserPipelineReleaseResponse contains the updated pipeline release.
  v1betaUpdateUserPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1betaPipeline'
        description: The updated pipeline resource.
    description: UpdateUserPipelineResponse contains the updated pipeline.
  v1betaUsageSummary:
    type: object
    properties:
      time:
        type: string
        format: date-time
        title: Time when the summary is generated
      value:
        type: integer
        format: int32
        title: The total usage since the beginning of the current billing period
    title: Usage summary definition
    required:
      - time
      - value
  v1betaUserData:
    type: object
    properties:
      uid:
        type: string
        title: User unique id
      name:
        type: string
        title: User name, which is not necessary for service queries
    title: User records definition
    required:
      - uid
  v1betaUserMembership:
    type: object
    properties:
      name:
        type: string
        description: |-
          The resource name of the membership, which allows its access by user and
          organization ID.
          - Format: `users/{user.id}/memberships/{organization.id}`.
        readOnly: true
      role:
        type: string
        description: Role of the user in the organization.
        readOnly: true
      state:
        $ref: '#/definitions/v1betaMembershipState'
        description: State of the membership.
      user:
        $ref: '#/definitions/mgmtv1betaUser'
        description: User information.
        readOnly: true
      organization:
        $ref: '#/definitions/v1betaOrganization'
        description: Organization information.
        readOnly: true
    description: |-
      A user membership defines the relationship between a user and an
      organization they belong to.
    required:
      - state
  v1betaValidateOrganizationPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1betaPipeline'
        description: The validated pipeline resource.
    description: ValidateOrganizationPipelineResponse contains a validated pipeline.
  v1betaValidateTokenResponse:
    type: object
    properties:
      user_uid:
        type: string
        description: If token is valid, UUID of the user that owns it.
        readOnly: true
    description: ValidateTokenResponse contains the validation of a token.
  v1betaValidateUserPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1betaPipeline'
        description: The validated pipeline resource.
    description: ValidateUserPipelineResponse contains a validated pipeline.
  v1betaWatchOrganizationConnectorResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1betaConnectorState'
        description: The connector state.
    description: WatchOrganizationConnectorResponse contains the connector current state.
  v1betaWatchOrganizationPipelineReleaseResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/pipelinev1betaState'
        description: The pipeline release state.
    description: |-
      WatchOrganizationPipelineReleaseResponse contains the pipeline release
      current state.
  v1betaWatchUserConnectorResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1betaConnectorState'
        description: The connector state.
    description: WatchUserConnectorResponse contains the connector current state.
  v1betaWatchUserPipelineReleaseResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/pipelinev1betaState'
        description: The pipeline release state.
    description: |-
      WatchUserPipelineReleaseResponse contains the pipeline release current
      state.
  vdpcontrollerv1betaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1betaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  vdpcontrollerv1betaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1betaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
securityDefinitions:
  Bearer:
    type: apiKey
    description: Enter the token with the `Bearer ` prefix, e.g. `Bearer abcde12345`
    name: Authorization
    in: header
security:
  - Bearer: []
externalDocs:
  description: More about Instill AI
  url: https://www.instill.tech/docs
