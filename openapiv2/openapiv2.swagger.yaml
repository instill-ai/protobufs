swagger: "2.0"
info:
  title: base/metric/v1alpha/metric.proto
  version: version not set
tags:
  - name: PipelineService
  - name: ModelService
  - name: MgmtPrivateService
  - name: MgmtPublicService
  - name: UsageService
  - name: ControllerPrivateService
  - name: ModelPrivateService
  - name: ModelPublicService
  - name: ConnectorPrivateService
  - name: ConnectorPublicService
  - name: ControllerPrivateService
  - name: PipelinePrivateService
  - name: PipelinePublicService
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1alpha/__liveness:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: PipelinePublicService_Liveness
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/vdppipelinev1alphaLivenessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - PipelinePublicService
  /v1alpha/__readiness:
    get:
      summary: |-
        Readiness method receives a ReadinessRequest message and returns a
        ReadinessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: PipelinePublicService_Readiness
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/vdppipelinev1alphaReadinessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - PipelinePublicService
  /v1alpha/{destination_connector.name}:
    get:
      summary: |-
        GetDestinationConnector method receives a GetDestinationConnectorRequest
        message and returns a GetDestinationConnectorResponse message.
      operationId: ConnectorPublicService_GetDestinationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetDestinationConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: destination_connector.name
          description: |-
            DestinationConnectorConnector resource name. It must have the format of
            "destination-connectors/*"
          in: path
          required: true
          type: string
          pattern: destination-connectors/[^/]+
        - name: view
          description: |-
            DestinationConnector view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ConnectorPublicService
    delete:
      summary: |-
        DeleteDestinationConnector method receives a
        DeleteDestinationConnectorRequest message and returns a
        DeleteDestinationConnectorResponse message.
      operationId: ConnectorPublicService_DeleteDestinationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeleteDestinationConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: destination_connector.name
          description: |-
            DestinationConnector resource name. It must have the format of
            "destination-connectors/*"
          in: path
          required: true
          type: string
          pattern: destination-connectors/[^/]+
      tags:
        - ConnectorPublicService
    patch:
      summary: |-
        UpdateDestinationConnector method receives a
        UpdateDestinationConnectorRequest message and returns a
        UpdateDestinationConnectorResponse message.
      operationId: ConnectorPublicService_UpdateDestinationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUpdateDestinationConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: destination_connector.name
          description: |-
            DestinationConnector resource name. It must have the format of
            "destination-connectors/*"
          in: path
          required: true
          type: string
          pattern: destination-connectors/[^/]+
        - name: destination_connector
          description: DestinationConnector resource
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                title: DestinationConnector UUID
                readOnly: true
              id:
                type: string
                description: |-
                  DestinationConnector resource ID (the last segment of the resource name)
                  used to construct the resource name. This conforms to RFC-1034, which
                  restricts to letters, numbers, and hyphen, with the first character a
                  letter, the last a letter or a number, and a 63 character maximum.
              destination_connector_definition:
                type: string
                title: DestinationConnectorDefinition resource
              connector:
                $ref: '#/definitions/v1alphaConnector'
                title: DestinationConnector's connector data structure
            title: DestinationConnector resource
            required:
              - connector
      tags:
        - ConnectorPublicService
  /v1alpha/{destination_connector.name}/testConnection:
    post:
      summary: |-
        TestDestinationConnector method receives a TestDestinationConnectorRequest
        message and returns a TestDestinationConnectorResponse
      operationId: ConnectorPublicService_TestDestinationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaTestDestinationConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: destination_connector.name
          description: |-
            DestinationConnector resource name. It must have the format of
            "destination-connectors/*"
          in: path
          required: true
          type: string
          pattern: destination-connectors/[^/]+
      tags:
        - ConnectorPublicService
  /v1alpha/{destination_connector.name}/watch:
    get:
      summary: |-
        WatchDestinationConnector method receives a
        WatchDestinationConnectorRequest message and returns a
        WatchDestinationConnectorResponse
      operationId: ConnectorPublicService_WatchDestinationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaWatchDestinationConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: destination_connector.name
          description: |-
            SourceConnector resource name. It must have the format of
            "destination-connectors/*"
          in: path
          required: true
          type: string
          pattern: destination-connectors/[^/]+
      tags:
        - ConnectorPublicService
  /v1alpha/{destination_connector_definition.name}:
    get:
      summary: |-
        GetDestinationConnectorDefinition method receives a
        GetDestinationConnectorDefinitionRequest message and returns a
        GetGetDestinationConnectorDefinitionResponse message.
      operationId: ConnectorPublicService_GetDestinationConnectorDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetDestinationConnectorDefinitionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: destination_connector_definition.name
          description: |-
            DestinationConnectorDefinition resource name. It must have the format of
            "source-connector-definitions/*"
          in: path
          required: true
          type: string
          pattern: destination-connector-definitions/[^/]+
        - name: view
          description: |-
            DestinationConnectorDefinition resource view (default is
            DEFINITION_VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ConnectorPublicService
  /v1alpha/{model.name/readme}:
    get:
      summary: |-
        GetModelCard method receives a GetModelCardRequest message
        and returns a GetModelCardResponse
      operationId: ModelPublicService_GetModelCard
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetModelCardResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: model.name/readme
          description: |-
            Resource name of the model card.
            For example "models/{model}/readme"
          in: path
          required: true
          type: string
          pattern: models/[^/]+/readme
      tags:
        - ModelPublicService
  /v1alpha/{model.name/watch}/watch:
    get:
      summary: |-
        WatchModel method receives a WatchModelRequest message
        and returns a WatchModelResponse
      operationId: ModelPublicService_WatchModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaWatchModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: model.name/watch
          description: |-
            Resource name of the model.
            For example "models/{model}"
          in: path
          required: true
          type: string
          pattern: models/[^/]+
      tags:
        - ModelPublicService
  /v1alpha/{model.name}:
    get:
      summary: |-
        GetModel method receives a GetModelRequest message and returns a
        GetModelResponse
      operationId: ModelPublicService_GetModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: model.name
          description: |-
            Resource name of the model.
            For example "models/{model}"
          in: path
          required: true
          type: string
          pattern: models/[^/]+
        - name: view
          description: |-
            Model view (default is VIEW_BASIC)
            VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
            VIEW_FULL: show full information

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
             - VIEW_FULL: View: FULL, full representation of the resource
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ModelPublicService
    delete:
      summary: |-
        DeleteModel method receives a DeleteModelRequest message and returns a
        DeleteModelResponse
      operationId: ModelPublicService_DeleteModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeleteModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: model.name
          description: |-
            Resource name of the model.
            For example "models/{model}"
          in: path
          required: true
          type: string
          pattern: models/[^/]+
      tags:
        - ModelPublicService
    patch:
      summary: |-
        UpdateModel method receives a UpdateModelRequest message and returns a
        UpdateModelResponse
      operationId: ModelPublicService_UpdateModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUpdateModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: model.name
          description: |-
            Resource name. It must have the format of "models/{model}".
            For example: "models/yolov4"
          in: path
          required: true
          type: string
          pattern: models/[^/]+
        - name: model
          description: |-
            The model to update

            The model `name` field is used to identify the model to update.
            Format: models/{model}
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                title: Model ID in UUIDv4
                readOnly: true
              id:
                type: string
                description: |-
                  Resource ID (the last segment of the resource name) used to construct the
                  resource name. This conforms to RFC-1034, which restricts to letters,
                  numbers, and hyphen, with the first character a letter, the last a letter
                  or a number, and a 63 character maximum.
              description:
                type: string
                title: Model description
              model_definition:
                type: string
                title: Model definition resource name
              configuration:
                type: object
                title: |-
                  Model configuration represents the configuration JSON that has been
                  validated using the `model_spec` JSON schema of a ModelDefinition
              task:
                $ref: '#/definitions/ModelTask'
                title: Model task
                readOnly: true
              state:
                $ref: '#/definitions/v1alphaModelState'
                title: Model state
                readOnly: true
              visibility:
                $ref: '#/definitions/ModelVisibility'
                title: Model visibility including public or private
                readOnly: true
              user:
                type: string
                description: |-
                  The resource name with UUID of a user, e.g.,
                  "users/bfb978f8-78d3-4338-aa2b-a6c699cb07c5".
                readOnly: true
              org:
                type: string
                title: The resource name with UUID of an organization
                readOnly: true
              create_time:
                type: string
                format: date-time
                title: Model create time
                readOnly: true
              update_time:
                type: string
                format: date-time
                title: Model update time
                readOnly: true
            description: |-
              The model `name` field is used to identify the model to update.
              Format: models/{model}
            title: The model to update
      tags:
        - ModelPublicService
  /v1alpha/{model_definition.name}:
    get:
      summary: |-
        GetModelDefinition method receives a GetModelDefinitionRequest message and
        returns a GetModelDefinitionResponse
      operationId: ModelPublicService_GetModelDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetModelDefinitionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: model_definition.name
          description: |-
            Resource name of the model definition.
            For example "model-definitions/{uuid}"
          in: path
          required: true
          type: string
          pattern: model-definitions/[^/]+
        - name: view
          description: |-
            Definition view (default is VIEW_BASIC)
            VIEW_UNSPECIFIED/VIEW_BASIC: omit `ModelDefinition.model_spec` and
            `ModelDefinition.model_spec`
            VIEW_FULL: show full information

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
             - VIEW_FULL: View: FULL, full representation of the resource
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ModelPublicService
  /v1alpha/{name_1}:
    get:
      summary: |-
        GetTriggerAsyncOperation method receives a
        GetTriggerAsyncOperationRequest message and returns a
        GetTriggerAsyncOperationResponse message.
      operationId: PipelinePublicService_GetTriggerAsyncOperation
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetTriggerAsyncOperationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: name_1
          description: The name of the operation resource.
          in: path
          required: true
          type: string
          pattern: triggerAsyncOperations/[^/]+
      tags:
        - PipelinePublicService
  /v1alpha/{name_1}/connect:
    post:
      summary: |-
        Connect a destination connector.
        The "state" of the connector after connecting is "CONNECTED".
        ConnectDestinationConnector can be called on DestinationConnector in the
        state `DISCONNECTED`; DestinationConnector in a different state (including
        `CONNECTED`) returns an error.
      operationId: ConnectorPublicService_ConnectDestinationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaConnectDestinationConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: name_1
          description: |-
            DestinationConnector resource name. It must have the format of
            "destination-connectors/*"
          in: path
          required: true
          type: string
          pattern: destination-connectors/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: |-
              ConnectDestinationConnectorRequest represents a request to connect a
              destination connector
      tags:
        - ConnectorPublicService
  /v1alpha/{name_1}/disconnect:
    post:
      summary: |-
        Disconnect a destination connector.
        The "state" of the connector after disconnecting is "DISCONNECTED".
        DisconnectDestinationConnector can be called on DestinationConnector in the
        state `CONNECTED`; DestinationConnector in a different state (including
        `DISCONNECTED`) returns an error.
      operationId: ConnectorPublicService_DisconnectDestinationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDisconnectDestinationConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: name_1
          description: |-
            DestinationConnector resource name. It must have the format of
            "destination-connectors/*"
          in: path
          required: true
          type: string
          pattern: destination-connectors/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: |-
              DisconnectDestinationConnectorRequest represents a request to disconnect a
              destination connector
      tags:
        - ConnectorPublicService
  /v1alpha/{name_1}/execute:
    post:
      summary: |-
        ExecuteDestinationConnector method receives a
        ExecuteDestinationConnectorRequest message and returns a
        ExecuteDestinationConnectorResponse message.
      operationId: ConnectorPublicService_ExecuteDestinationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaExecuteDestinationConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: name_1
          description: |-
            Name of a destination connector. For example:
            "destination-connectors/{name}"
          in: path
          required: true
          type: string
          pattern: destination-connectors/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              input:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1alphaDataPayload'
                title: Input
            title: |-
              ExecuteDestinationConnectorRequest represents a private request to execution
              connector
      tags:
        - ConnectorPublicService
  /v1alpha/{name_1}/rename:
    post:
      summary: |-
        RenameSourceConnector method receives a RenameSourceConnectorRequest
        message and returns a RenameSourceConnectorResponse message.
      operationId: ConnectorPublicService_RenameSourceConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaRenameSourceConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: name_1
          description: |-
            SourceConnector resource name. It must have the format of
            "source-connectors/*"
          in: path
          required: true
          type: string
          pattern: source-connectors/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              new_source_connector_id:
                type: string
                title: |-
                  SourceConnector new resource id to replace with the
                  SourceConnector resource name to be
                  "source-connectors/{new_source_connector_id}"
            title: |-
              RenameSourceConnectorRequest represents a request to rename the
              SourceConnector resource name
            required:
              - new_source_connector_id
      tags:
        - ConnectorPublicService
  /v1alpha/{name_2}/rename:
    post:
      summary: |-
        RenameDestinationConnector method receives a
        RenameDestinationConnectorRequest message and returns a
        RenameDestinationConnectorResponse message.
      operationId: ConnectorPublicService_RenameDestinationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaRenameDestinationConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: name_2
          description: |-
            DestinationConnector resource name. It must have the format of
            "destination-connectors/*"
          in: path
          required: true
          type: string
          pattern: destination-connectors/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              new_destination_connector_id:
                type: string
                title: |-
                  DestinationConnector new resource id to replace with the
                  DestinationConnector resource name to be
                  "destination-connectors/{new_destination_connector_id}"
            title: |-
              RenameDestinationConnectorRequest represents a request to rename the
              DestinationConnector resource name
            required:
              - new_destination_connector_id
      tags:
        - ConnectorPublicService
  /v1alpha/{name_3}/rename:
    post:
      summary: |-
        RenamePipeline method receives a RenamePipelineRequest message and returns
        a RenamePipelineResponse message.
      operationId: PipelinePublicService_RenamePipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaRenamePipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: name_3
          description: Pipeline resource name. It must have the format of "pipelines/*"
          in: path
          required: true
          type: string
          pattern: pipelines/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              new_pipeline_id:
                type: string
                title: |-
                  Pipeline new resource id to replace with the pipeline resource name to be
                  "pipelines/{new_pipeline_id}"
            title: |-
              RenamePipelineRequest represents a request to rename the pipeline resource
              name
            required:
              - new_pipeline_id
      tags:
        - PipelinePublicService
  /v1alpha/{name}:
    get:
      summary: |-
        GetModelOperation method receives a
        GetModelOperationRequest message and returns a
        GetModelOperationResponse message.
      operationId: ModelPublicService_GetModelOperation
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetModelOperationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: name
          description: The name of the operation resource.
          in: path
          required: true
          type: string
          pattern: operations/[^/]+
        - name: view
          description: |-
            View (default is VIEW_BASIC)
            VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`,
            `Model.configuration` VIEW_FULL: show full information

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
             - VIEW_FULL: View: FULL, full representation of the resource
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ModelPublicService
  /v1alpha/{name}/activate:
    post:
      summary: |-
        Activate a pipeline.
        The "state" of the pipeline after activating is "ACTIVE".
        ActivatePipeline can be called on Pipelines in the state "INACTIVE";
        Pipelines in a different state (including "ACTIVE") returns an error.
      operationId: PipelinePublicService_ActivatePipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaActivatePipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: name
          description: Pipeline resource name. It must have the format of "pipelines/*"
          in: path
          required: true
          type: string
          pattern: pipelines/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: ActivatePipelineRequest represents a request to activate a pipeline
      tags:
        - PipelinePublicService
  /v1alpha/{name}/connect:
    post:
      summary: |-
        Connect a source connector.
        The "state" of the connector after connecting is "CONNECTED".
        ConnectSourceConnector can be called on SourceConnector in the state
        `DISCONNECTED`; SourceConnector in a different state (including
        `CONNECTED`) returns an error.
      operationId: ConnectorPublicService_ConnectSourceConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaConnectSourceConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: name
          description: |-
            SourceConnector resource name. It must have the format of
            "source-connectors/*"
          in: path
          required: true
          type: string
          pattern: source-connectors/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: |-
              ConnectSourceConnectorRequest represents a request to connect a
              source connector
      tags:
        - ConnectorPublicService
  /v1alpha/{name}/deactivate:
    post:
      summary: |-
        Deactivate a pipeline.
        The "state" of the pipeline after inactivating is "INACTIVE".
        DeactivatePipeline can be called on Pipelines in the state "ACTIVE";
        Pipelines in a different state (including "INACTIVE") returns an error.
      operationId: PipelinePublicService_DeactivatePipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeactivatePipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: name
          description: Pipeline resource name. It must have the format of "pipelines/*"
          in: path
          required: true
          type: string
          pattern: pipelines/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: DeactivatePipelineRequest represents a request to deactivate a pipeline
      tags:
        - PipelinePublicService
  /v1alpha/{name}/deploy:
    post:
      summary: DeployModel deploy a model to online state
      operationId: ModelPublicService_DeployModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeployModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: name
          description: |-
            Resource name for the model to be deployed.
            Format: models/{model}
          in: path
          required: true
          type: string
          pattern: models/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: DeployModelRequest represents a request to deploy a model to online state
      tags:
        - ModelPublicService
  /v1alpha/{name}/disconnect:
    post:
      summary: |-
        Disconnect a source connector.
        The "state" of the connector after disconnecting is "DISCONNECTED".
        DisconnectSourceConnector can be called on SourceConnector in the state
        `CONNECTED`; SourceConnector in a different state (including
        `DISCONNECTED`) returns an error.
      operationId: ConnectorPublicService_DisconnectSourceConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDisconnectSourceConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: name
          description: |-
            SourceConnector resource name. It must have the format of
            "source-connectors/*"
          in: path
          required: true
          type: string
          pattern: source-connectors/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: |-
              DisconnectSourceConnectorRequest represents a request to disconnect a
              source connector
      tags:
        - ConnectorPublicService
  /v1alpha/{name}/execute:
    post:
      summary: |-
        ExecuteSourceConnector method receives a ExecuteSourceConnectorRequest
        message and returns a ExecuteSourceConnectorResponse message.
      operationId: ConnectorPublicService_ExecuteSourceConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaExecuteSourceConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: name
          description: |-
            Name of a source connector. For example:
            "source-connectors/{name}"
          in: path
          required: true
          type: string
          pattern: source-connectors/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              input:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1alphaDataPayload'
                title: Input
            title: |-
              ExecuteSourceConnectorRequest represents a private request to execution
              connector
      tags:
        - ConnectorPublicService
  /v1alpha/{name}/publish:
    post:
      summary: |-
        PublishModel method receives a PublishModelRequest message and returns a
        PublishModelResponse
      operationId: ModelPublicService_PublishModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaPublishModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: name
          description: |-
            Resource name of the model.
            For example "models/{model}"
          in: path
          required: true
          type: string
          pattern: models/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: PublishModelRequest represents a request to publish a model
      tags:
        - ModelPublicService
  /v1alpha/{name}/rename:
    post:
      summary: RenameModel method rename a model
      operationId: ModelPublicService_RenameModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaRenameModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: name
          description: Resource name for the model to be renamed.
          in: path
          required: true
          type: string
          pattern: models/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              new_model_id:
                type: string
                title: New ID of this model
            title: RenameModelRequest represents a request to rename a model
            required:
              - new_model_id
      tags:
        - ModelPublicService
  /v1alpha/{name}/test:
    post:
      summary: |-
        TestModel method receives a TestModelRequest message
        and returns a TestModelResponse message.
      operationId: ModelPublicService_TestModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaTestModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: name
          description: |-
            The resource name of the model to trigger.
            For example "models/{model}"
          in: path
          required: true
          type: string
          pattern: models/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              task_inputs:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1alphaTaskInput'
                title: Input to trigger the model
            title: TestModelRequest represents a request to test a model
            required:
              - task_inputs
      tags:
        - ModelPublicService
  /v1alpha/{name}/trigger:
    post:
      summary: /////////////////////////////////////////////////////
      description: |-
        TriggerModel method receives a TriggerModelRequest message
        and returns a TriggerModelResponse message.
      operationId: ModelPublicService_TriggerModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaTriggerModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: name
          description: |-
            The resource name of the model to trigger.
            For example "models/{model}"
          in: path
          required: true
          type: string
          pattern: models/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              task_inputs:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1alphaTaskInput'
                title: Input to trigger the model
            title: TriggerModelRequest represents a request to trigger a model
            required:
              - task_inputs
      tags:
        - ModelPublicService
  /v1alpha/{name}/triggerAsync:
    post:
      summary: |-
        TriggerAsyncPipeline method receives a TriggerPipelineRequest message and
        returns a TriggerAsyncPipelineResponse.
      operationId: PipelinePublicService_TriggerAsyncPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaTriggerAsyncPipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: name
          description: Pipeline resource name. It must have the format of "pipelines/*"
          in: path
          required: true
          type: string
          pattern: pipelines/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              task_inputs:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1alphaTaskInput'
                title: Input to the pipeline
            title: TriggerAsyncPipelineRequest represents a request to trigger a async pipeline
            required:
              - task_inputs
      tags:
        - PipelinePublicService
  /v1alpha/{name}/triggerSync:
    post:
      summary: |-
        TriggerSyncPipeline method receives a TriggerSyncPipelineRequest message
        and returns a TriggerSyncPipelineResponse.
      operationId: PipelinePublicService_TriggerSyncPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaTriggerSyncPipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: name
          description: Pipeline resource name. It must have the format of "pipelines/*"
          in: path
          required: true
          type: string
          pattern: pipelines/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              task_inputs:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1alphaTaskInput'
                title: Input to the pipeline
            title: TriggerSyncPipelineRequest represents a request to trigger a pipeline
            required:
              - task_inputs
      tags:
        - PipelinePublicService
  /v1alpha/{name}/undeploy:
    post:
      summary: UndeployModel undeploy a model to offline state
      operationId: ModelPublicService_UndeployModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUndeployModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: name
          description: |-
            Resource name for the model to be undeployed.
            Format: models/{model}
          in: path
          required: true
          type: string
          pattern: models/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: |-
              UndeployModelRequest represents a request to undeploy a model to offline
              state
      tags:
        - ModelPublicService
  /v1alpha/{name}/unpublish:
    post:
      summary: |-
        UnpublishModel method receives a UnpublishModelRequest message and returns
        a UnpublishModelResponse
      operationId: ModelPublicService_UnpublishModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUnpublishModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: name
          description: |-
            Resource name of the model.
            For example "models/{model}"
          in: path
          required: true
          type: string
          pattern: models/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: UnpublishModelRequest represents a request to unpublish a model
      tags:
        - ModelPublicService
  /v1alpha/{permalink_1}/lookUp:
    get:
      summary: |-
        LookUpSourceConnector method receives a LookUpSourceConnectorRequest
        message and returns a LookUpSourceConnectorResponse
      operationId: ConnectorPublicService_LookUpSourceConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaLookUpSourceConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: permalink_1
          description: |-
            Permalink of a source connector. For example:
            "source-connectors/{uid}"
          in: path
          required: true
          type: string
          pattern: source-connectors/[^/]+
        - name: view
          description: |-
            SourceConnector view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ConnectorPublicService
  /v1alpha/{permalink_2}/lookUp:
    get:
      summary: |-
        LookUpDestinationConnector method receives a
        LookUpDestinationConnectorRequest message and returns a
        LookUpDestinationConnectorResponse
      operationId: ConnectorPublicService_LookUpDestinationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaLookUpDestinationConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: permalink_2
          description: |-
            Permalink of a destination connector. For example:
            "destination-connectors/{uid}"
          in: path
          required: true
          type: string
          pattern: destination-connectors/[^/]+
        - name: view
          description: |-
            SourceConnector view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ConnectorPublicService
  /v1alpha/{permalink_3}/lookUp:
    get:
      summary: |-
        LookUpPipeline method receives a LookUpPipelineRequest message and returns
        a LookUpPipelineResponse
      operationId: PipelinePublicService_LookUpPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaLookUpPipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: permalink_3
          description: |-
            Permalink of a pipeline. For example:
            "pipelines/{uid}"
          in: path
          required: true
          type: string
          pattern: pipelines/[^/]+
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - PipelinePublicService
  /v1alpha/{permalink}/lookUp:
    get:
      summary: |-
        LookUpModel method receives a LookUpModelRequest message and returns a
        LookUpModelResponse
      operationId: ModelPublicService_LookUpModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaLookUpModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: permalink
          description: |-
            Permalink of a model. For example:
            "models/{uid}"
          in: path
          required: true
          type: string
          pattern: models/[^/]+
        - name: view
          description: |-
            Model view (default is VIEW_BASIC)
            VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
            VIEW_FULL: show full information

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
             - VIEW_FULL: View: FULL, full representation of the resource
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ModelPublicService
  /v1alpha/{pipeline.name/watch}/watch:
    get:
      summary: |-
        WatchPipeline method receives a WatchPipelineRequest message
        and returns a WatchPipelineResponse
      operationId: PipelinePublicService_WatchPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaWatchPipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: pipeline.name/watch
          description: Pipeline resource name. It must have the format of "pipelines/*"
          in: path
          required: true
          type: string
          pattern: pipelines/[^/]+
      tags:
        - PipelinePublicService
  /v1alpha/{pipeline.name}:
    get:
      summary: |-
        GetPipeline method receives a GetPipelineRequest message and returns a
        GetPipelineResponse message.
      operationId: PipelinePublicService_GetPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetPipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: pipeline.name
          description: Pipeline resource name. It must have the format of "pipelines/*"
          in: path
          required: true
          type: string
          pattern: pipelines/[^/]+
        - name: view
          description: |-
            Pipeline resource view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - PipelinePublicService
    delete:
      summary: |-
        DeletePipeline method receives a DeletePipelineRequest message and returns
        a DeletePipelineResponse message.
      operationId: PipelinePublicService_DeletePipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeletePipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: pipeline.name
          description: Pipeline resource name. It must have the format of "pipelines/*"
          in: path
          required: true
          type: string
          pattern: pipelines/[^/]+
      tags:
        - PipelinePublicService
    patch:
      summary: |-
        UpdatePipeline method receives a UpdatePipelineRequest message and returns
        a UpdatePipelineResponse message.
      operationId: PipelinePublicService_UpdatePipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUpdatePipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: pipeline.name
          description: Pipeline resource name. It must have the format of "pipelines/*"
          in: path
          required: true
          type: string
          pattern: pipelines/[^/]+
        - name: pipeline
          description: A pipeline resource to update
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                title: Pipeline UUID
                readOnly: true
              id:
                type: string
                description: |-
                  Pipeline resource ID (the last segment of the resource name) used to
                  construct the resource name. This conforms to RFC-1034, which restricts to
                  letters, numbers, and hyphen, with the first character a letter, the last a
                  letter or a number, and a 63 character maximum.
              description:
                type: string
                title: Pipeline description
              recipe:
                $ref: '#/definitions/v1alphaRecipe'
                title: Pipeline recipe
              mode:
                $ref: '#/definitions/PipelineMode'
                title: Pipeline mode
                readOnly: true
              state:
                $ref: '#/definitions/v1alphaPipelineState'
                title: Pipeline state
                readOnly: true
              user:
                type: string
                description: |-
                  The resource name with UUID of a user, e.g.,
                  "users/bfb978f8-78d3-4338-aa2b-a6c699cb07c5".
                readOnly: true
              org:
                type: string
                title: The resource name with UUID of an organization
                readOnly: true
              create_time:
                type: string
                format: date-time
                title: Pipeline creation time
                readOnly: true
              update_time:
                type: string
                format: date-time
                title: Pipeline update time
                readOnly: true
            title: A pipeline resource to update
      tags:
        - PipelinePublicService
  /v1alpha/{resource.resource_permalink_1}:
    get:
      summary: |-
        GetResource method receives a GetResourceRequest message
        and returns a GetResourceResponse
      operationId: ControllerPrivateService_GetResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/vdpcontrollerv1alphaGetResourceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: resource.resource_permalink_1
          description: |-
            Permalink of a resouce. For example:
            "resources/{resource_uuid}/types/{type}"
          in: path
          required: true
          type: string
          pattern: resources/[^/]+/types/[^/]+
      tags:
        - ControllerPrivateService
    delete:
      summary: |-
        DeleteResource method receives a DeleteResourceRequest message
        and returns a DeleteResourceResponse
      operationId: ControllerPrivateService_DeleteResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/vdpcontrollerv1alphaDeleteResourceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: resource.resource_permalink_1
          description: |-
            Permalink of a resouce. For example:
            "resources/{resource_uuid}/types/{type}"
          in: path
          required: true
          type: string
          pattern: resources/[^/]+/types/[^/]+
      tags:
        - ControllerPrivateService
    patch:
      summary: |-
        UpdateResource method receives a UpdateResourceRequest message
        and returns a UpdateResourceResponse
      operationId: ControllerPrivateService_UpdateResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/vdpcontrollerv1alphaUpdateResourceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: resource.resource_permalink_1
          description: |-
            Permalink of a resouce. For example:
            "resources/{resource_uuid}/types/{type}"
          in: path
          required: true
          type: string
          pattern: resources/[^/]+/types/[^/]+
        - name: resource
          description: Resource state
          in: body
          required: true
          schema:
            type: object
            properties:
              pipeline_state:
                $ref: '#/definitions/v1alphaPipelineState'
                title: Pipeline state
              connector_state:
                $ref: '#/definitions/v1alphaConnectorState'
                title: Connector state
              backend_state:
                $ref: '#/definitions/HealthCheckResponseServingStatus'
                title: Backend service state
              progress:
                type: integer
                format: int32
                title: Resource longrunning progress
            title: Resource state
        - name: workflow_id
          description: Resource longrunnning workflow id
          in: query
          required: false
          type: string
      tags:
        - ControllerPrivateService
  /v1alpha/{resource.resource_permalink}:
    get:
      summary: |-
        GetResource method receives a GetResourceRequest message
        and returns a GetResourceResponse
      operationId: ControllerPrivateService_GetResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/modelcontrollerv1alphaGetResourceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: resource.resource_permalink
          description: |-
            Permalink of a resource. For example:
            "resources/{resource_uuid}/types/{type}"
          in: path
          required: true
          type: string
          pattern: resources/[^/]+/types/[^/]+
      tags:
        - ControllerPrivateService
    delete:
      summary: |-
        DeleteResource method receives a DeleteResourceRequest message
        and returns a DeleteResourceResponse
      operationId: ControllerPrivateService_DeleteResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/modelcontrollerv1alphaDeleteResourceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: resource.resource_permalink
          description: |-
            Permalink of a resource. For example:
            "resources/{resource_uuid}/types/{type}"
          in: path
          required: true
          type: string
          pattern: resources/[^/]+/types/[^/]+
      tags:
        - ControllerPrivateService
    patch:
      summary: |-
        UpdateResource method receives a UpdateResourceRequest message
        and returns a UpdateResourceResponse
      operationId: ControllerPrivateService_UpdateResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/modelcontrollerv1alphaUpdateResourceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: resource.resource_permalink
          description: |-
            Permalink of a resource. For example:
            "resources/{resource_uuid}/types/{type}"
          in: path
          required: true
          type: string
          pattern: resources/[^/]+/types/[^/]+
        - name: resource
          description: Resource state
          in: body
          required: true
          schema:
            type: object
            properties:
              model_state:
                $ref: '#/definitions/v1alphaModelState'
                title: Model state
              backend_state:
                $ref: '#/definitions/HealthCheckResponseServingStatus'
                title: Backend service state
              progress:
                type: integer
                format: int32
                title: Resource longrunning progress
            title: Resource state
        - name: workflow_id
          description: Resource long-running workflow id
          in: query
          required: false
          type: string
      tags:
        - ControllerPrivateService
  /v1alpha/{source_connector.name}:
    get:
      summary: |-
        GetSourceConnector method receives a GetSourceConnectorRequest message and
        returns a GetSourceConnectorResponse message.
      operationId: ConnectorPublicService_GetSourceConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetSourceConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: source_connector.name
          description: |-
            SourceConnectorConnector resource name. It must have the format of
            "source-connectors/*"
          in: path
          required: true
          type: string
          pattern: source-connectors/[^/]+
        - name: view
          description: |-
            SourceConnector view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ConnectorPublicService
    delete:
      summary: |-
        DeleteSourceConnector method receives a DeleteSourceConnectorRequest
        message and returns a DeleteSourceConnectorResponse message.
      operationId: ConnectorPublicService_DeleteSourceConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeleteSourceConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: source_connector.name
          description: |-
            SourceConnector resource name. It must have the format of
            "source-connectors/*"
          in: path
          required: true
          type: string
          pattern: source-connectors/[^/]+
      tags:
        - ConnectorPublicService
    patch:
      summary: |-
        UpdateSourceConnector method receives a UpdateSourceConnectorRequest
        message and returns a UpdateSourceConnectorResponse message.
      operationId: ConnectorPublicService_UpdateSourceConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUpdateSourceConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: source_connector.name
          description: |-
            SourceConnector resource name. It must have the format of
            "source-connectors/*"
          in: path
          required: true
          type: string
          pattern: source-connectors/[^/]+
        - name: source_connector
          description: SourceConnector resource
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                title: SourceConnector UUID
                readOnly: true
              id:
                type: string
                description: |-
                  SourceConnector resource ID (the last segment of the resource name) used to
                  construct the resource name. This conforms to RFC-1034, which restricts to
                  letters, numbers, and hyphen, with the first character a letter, the last a
                  letter or a number, and a 63 character maximum.
              source_connector_definition:
                type: string
                title: SourceConnectorDefinition resource
              connector:
                $ref: '#/definitions/v1alphaConnector'
                title: SourceConnector's connector data structure
            title: SourceConnector resource
            required:
              - connector
      tags:
        - ConnectorPublicService
  /v1alpha/{source_connector.name}/testConnection:
    post:
      summary: |-
        TestSourceConnector method receives a TestSourceConnectorRequest message
        and returns a TestSourceConnectorResponse
      operationId: ConnectorPublicService_TestSourceConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaTestSourceConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: source_connector.name
          description: |-
            SourceConnector resource name. It must have the format of
            "source-connectors/*"
          in: path
          required: true
          type: string
          pattern: source-connectors/[^/]+
      tags:
        - ConnectorPublicService
  /v1alpha/{source_connector.name}/watch:
    get:
      summary: |-
        WatchSourceConnector method receives a WatchSourceConnectorRequest message
        and returns a WatchSourceConnectorResponse
      operationId: ConnectorPublicService_WatchSourceConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaWatchSourceConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: source_connector.name
          description: |-
            SourceConnector resource name. It must have the format of
            "source-connectors/*"
          in: path
          required: true
          type: string
          pattern: source-connectors/[^/]+
      tags:
        - ConnectorPublicService
  /v1alpha/{source_connector_definition.name}:
    get:
      summary: |-
        GetSourceConnectorDefinition method receives a
        GetSourceConnectorDefinitionRequest message and returns a
        GetGetSourceConnectorDefinitionResponse message.
      operationId: ConnectorPublicService_GetSourceConnectorDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetSourceConnectorDefinitionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: source_connector_definition.name
          description: |-
            SourceConnectorDefinition resource name. It must have the format of
            "source-connector-definitions/*"
          in: path
          required: true
          type: string
          pattern: source-connector-definitions/[^/]+
        - name: view
          description: |-
            SourceConnectorDefinition resource view (default is DEFINITION_VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ConnectorPublicService
  /v1alpha/{token.name}:
    get:
      summary: |-
        GetToken method receives a GetTokenRequest message and returns a
        GetTokenResponse message.
      operationId: MgmtPublicService_GetToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetTokenResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: token.name
          description: API tokens resource name. It must have the format of "tokens/*"
          in: path
          required: true
          type: string
          pattern: tokens/[^/]+
      tags:
        - MgmtPublicService
    delete:
      summary: |-
        DeleteToken method receives a DeleteTokenRequest message and returns
        a DeleteTokenResponse message.
      operationId: MgmtPublicService_DeleteToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeleteTokenResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: token.name
          description: API token resource name. It must have the format of "tokens/*"
          in: path
          required: true
          type: string
          pattern: tokens/[^/]+
      tags:
        - MgmtPublicService
  /v1alpha/{user.name}/exist:
    get:
      summary: |-
        ExistUsername method receives a ExistUsernameRequest message and returns a
        ExistUsernameResponse
      operationId: MgmtPublicService_ExistUsername
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaExistUsernameResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: user.name
          description: |-
            The resource name of the user to check,
            for example: "users/local-user"
          in: path
          required: true
          type: string
          pattern: users/[^/]+
      tags:
        - MgmtPublicService
  /v1alpha/admin/{destination_connector_permalink}/check:
    get:
      summary: |-
        CheckDestinationConnector method receives a CheckDestinationConnectorRequest message and returns a
        CheckDestinationConnectorResponse
      operationId: ConnectorPrivateService_CheckDestinationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCheckDestinationConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: destination_connector_permalink
          description: |-
            Permalink of a destination connector. For example:
            "destination-connectors/{uid}"
          in: path
          required: true
          type: string
          pattern: destination-connectors/[^/]+
      tags:
        - ConnectorPrivateService
  /v1alpha/admin/{model_permalink}/check:
    get:
      summary: |-
        CheckModel method receives a CheckModelRequest message and returns a
        CheckModelResponse
      operationId: ModelPrivateService_CheckModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCheckModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: model_permalink
          description: |-
            Permalink of a model. For example:
            "models/{uid}"
          in: path
          required: true
          type: string
          pattern: models/[^/]+
      tags:
        - ModelPrivateService
  /v1alpha/admin/{permalink_1}/lookUp:
    get:
      summary: |-
        LookUpModelAdmin method receives a LookUpModelAdminRequest message and
        returns a LookUpModelAdminResponse
      operationId: ModelPrivateService_LookUpModelAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaLookUpModelAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: permalink_1
          description: |-
            Permalink of a model. For example:
            "models/{uid}"
          in: path
          required: true
          type: string
          pattern: models/[^/]+
        - name: view
          description: |-
            Model view (default is VIEW_BASIC)
            VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
            VIEW_FULL: show full information

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
             - VIEW_FULL: View: FULL, full representation of the resource
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ModelPrivateService
  /v1alpha/admin/{permalink_2}/lookUp:
    get:
      summary: |-
        LookUpSourceConnectorAdmin method receives a
        LookUpSourceConnectorAdminRequest message and returns a
        LookUpSourceConnectorAdminResponse
      operationId: ConnectorPrivateService_LookUpSourceConnectorAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaLookUpSourceConnectorAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: permalink_2
          description: |-
            Permalink of a source connector. For example:
            "source-connectors/{uid}"
          in: path
          required: true
          type: string
          pattern: source-connectors/[^/]+
        - name: view
          description: |-
            SourceConnector view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ConnectorPrivateService
  /v1alpha/admin/{permalink_3}/lookUp:
    get:
      summary: |-
        LookUpDestinationConnectorAdmin method receives a
        LookUpDestinationConnectorAdminRequest message and returns a
        LookUpDestinationConnectorAdminResponse
      operationId: ConnectorPrivateService_LookUpDestinationConnectorAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaLookUpDestinationConnectorAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: permalink_3
          description: |-
            Permalink of a destination connector. For example:
            "destination-connectors/{uid}"
          in: path
          required: true
          type: string
          pattern: destination-connectors/[^/]+
        - name: view
          description: |-
            SourceConnector view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ConnectorPrivateService
  /v1alpha/admin/{permalink_4}/lookUp:
    get:
      summary: |-
        LookUpPipelineAdmin method receives a LookUpPipelineAdminRequest message
        and returns a LookUpPipelineAdminResponse
      operationId: PipelinePrivateService_LookUpPipelineAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaLookUpPipelineAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: permalink_4
          description: |-
            Permalink of a pipeline. For example:
            "pipelines/{uid}"
          in: path
          required: true
          type: string
          pattern: pipelines/[^/]+
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - PipelinePrivateService
  /v1alpha/admin/{permalink}/lookUp:
    get:
      summary: |-
        LookUpUserAdmin method receives a LookUpUserAdminRequest message and
        returns a LookUpUserAdminResponse
      operationId: MgmtPrivateService_LookUpUserAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaLookUpUserAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: permalink
          description: |-
            Permalink of a user. For example:
            "users/{uid}"
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - MgmtPrivateService
  /v1alpha/admin/{source_connector_permalink}/check:
    get:
      summary: |-
        CheckSourceConnector method receives a CheckSourceConnectorRequest message and returns a
        CheckSourceConnectorResponse
      operationId: ConnectorPrivateService_CheckSourceConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCheckSourceConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: source_connector_permalink
          description: |-
            Permalink of a source connector. For example:
            "source-connectors/{uid}"
          in: path
          required: true
          type: string
          pattern: source-connectors/[^/]+
      tags:
        - ConnectorPrivateService
  /v1alpha/admin/{user.name}:
    get:
      summary: |-
        GetUserAdmin method receives a GetUserAdminRequest message and returns
        a GetUserAdminResponse message.
      operationId: MgmtPrivateService_GetUserAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetUserAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: user.name
          description: |-
            Resource name of a user. For example:
            "users/local-user"
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - MgmtPrivateService
    delete:
      summary: |-
        DeleteUserAdmin method receives a DeleteUserAdminRequest message and
        returns a DeleteUserAdminResponse
      operationId: MgmtPrivateService_DeleteUserAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeleteUserAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: user.name
          description: |-
            The resource name of the user to be deleted,
            for example: "users/local-user"
          in: path
          required: true
          type: string
          pattern: users/[^/]+
      tags:
        - MgmtPrivateService
    patch:
      summary: |-
        UpdateUserAdmin method receives a UpdateUserAdminRequest message and
        returns a UpdateUserAdminResponse
      operationId: MgmtPrivateService_UpdateUserAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUpdateUserAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: user.name
          description: |-
            Resource name. It must have the format of "users/*".
            For example: "users/local-user".
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: user
          description: |-
            The user to update

            The user's `name` field is used to identify the user to update.
            Format: users/{user}
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: |-
                  User ID in UUIDv4. This field is optionally set by users
                  (optional on resource creation, server-generated if unset).
              id:
                type: string
                description: |-
                  Resource ID (the last segment of the resource name), also the user
                  username. This conforms to RFC-1034, which restricts to letters, numbers,
                  and hyphen, with the first character a letter, the last a letter or a
                  number, and a 63 character maximum.
                  Note that the ID can be updated.
              type:
                $ref: '#/definitions/v1alphaOwnerType'
                title: 'Owner type: fixed to `OWNER_TYPE_USER`'
                readOnly: true
              create_time:
                type: string
                format: date-time
                title: User creation time
                readOnly: true
              update_time:
                type: string
                format: date-time
                title: User update time
                readOnly: true
              email:
                type: string
                title: User email
              customer_id:
                type: string
                description: Stripe customer ID. This field is used in Instill Cloud.
                readOnly: true
              first_name:
                type: string
                title: User first name
              last_name:
                type: string
                title: User last name
              org_name:
                type: string
                title: User company or institution name
              role:
                type: string
                title: |-
                  User role. Allowed roles:
                   - "manager"
                   - "ai-researcher"
                   - "ai-engineer"
                   - "data-engineer",
                   - "data-scientist",
                   - "analytics-engineer"
                   - "hobbyist"
              newsletter_subscription:
                type: boolean
                title: User newsletter subscription
              cookie_token:
                type: string
                title: User console cookie token
            description: |-
              The user's `name` field is used to identify the user to update.
              Format: users/{user}
            title: The user to update
            required:
              - id
              - email
              - newsletter_subscription
      tags:
        - MgmtPrivateService
  /v1alpha/admin/destination-connectors:
    get:
      summary: |-
        ListDestinationConnectorsAdmin method receives a ListDestinationConnectorsAdminRequest
        message and returns a ListDestinationConnectorsResponse message.
      operationId: ConnectorPrivateService_ListDestinationConnectorsAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListDestinationConnectorsAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of connectors to return. The service may return fewer
            than this value. If unspecified, at most 10 connectors will be returned.
            The maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: string
          format: int64
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            DestinationConnector view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ConnectorPrivateService
  /v1alpha/admin/models:
    get:
      summary: |-
        ListModelsAdmin method receives a ListModelsAdminRequest message and
        returns a ListModelsAdminResponse
      operationId: ModelPrivateService_ListModelsAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListModelsAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: page_size
          description: |-
            Page size: the maximum number of resources to return. The service may
            return fewer than this value. If unspecified, at most 10 models will be
            returned. The maximum value is 100; values above 100 will be coereced to
            100.
          in: query
          required: false
          type: string
          format: int64
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            Model view (default is VIEW_BASIC)
            VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
            VIEW_FULL: show full information

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
             - VIEW_FULL: View: FULL, full representation of the resource
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ModelPrivateService
  /v1alpha/admin/pipelines:
    get:
      summary: |-
        ListPipelinesAdmin method receives a ListPipelinesAdminRequest message and
        returns a ListPipelinesAdminResponse message.
      operationId: PipelinePrivateService_ListPipelinesAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListPipelinesAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of pipelines to return. The service may return fewer
            than this value. If unspecified, at most 10 pipelines will be returned. The
            maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: string
          format: int64
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
        - name: filter
          description: Filter expression to list pipelines
          in: query
          required: false
          type: string
      tags:
        - PipelinePrivateService
  /v1alpha/admin/source-connectors:
    get:
      summary: |-
        ListSourceConnectorsAdmin method receives a ListSourceConnectorsAdminRequest message
        and returns a ListSourceConnectorsAdminResponse message.
      operationId: ConnectorPrivateService_ListSourceConnectorsAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListSourceConnectorsAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of connectors to return. The service may return fewer
            than this value. If unspecified, at most 10 connectors will be returned.
            The maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: string
          format: int64
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            SourceConnector view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ConnectorPrivateService
  /v1alpha/admin/users:
    get:
      summary: |-
        ListUsersAdmin method receives a ListUsersAdminRequest message and returns
        a ListUsersAdminResponse message.
      operationId: MgmtPrivateService_ListUsersAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListUsersAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: page_size
          description: |-
            Page size: the maximum number of resources to return. The service may
            return fewer than this value. If unspecified, at most 10 users will be
            returned. The maximum value is 100; values above 100 will be coereced to
            100.
          in: query
          required: false
          type: string
          format: int64
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
        - name: filter
          description: Filter expression to list users
          in: query
          required: false
          type: string
      tags:
        - MgmtPrivateService
    post:
      summary: |-
        CreateUserAdmin receives a CreateUserAdminRequest message and returns a
        a GetUserAdminResponse
      operationId: MgmtPrivateService_CreateUserAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCreateUserAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: user
          description: |-
            The user to be created

            The user's `name` field is used to identify the user to create.
            Format: users/{user}
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alphaUser'
            required:
              - user
      tags:
        - MgmtPrivateService
  /v1alpha/destination-connector-definitions:
    get:
      summary: |-
        ListDestinationConnectorDefinitions method receives a
        ListDestinationConnectorDefinitionsRequest message and returns a
        ListDestinationConnectorDefinitionsResponse message.
      operationId: ConnectorPublicService_ListDestinationConnectorDefinitions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListDestinationConnectorDefinitionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of DestinationConnectorDefinitions to return. The
            service may return fewer than this value. If unspecified, at most 10
            DestinationConnectorDefinitions will be returned. The maximum value is 100;
            values above 100 will be coerced to 100.
          in: query
          required: false
          type: string
          format: int64
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            Definition view (default is DEFINITION_VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ConnectorPublicService
  /v1alpha/destination-connectors:
    get:
      summary: |-
        ListDestinationConnectors method receives a
        ListDestinationConnectorsRequest message and returns a
        ListDestinationConnectorsResponse message.
      operationId: ConnectorPublicService_ListDestinationConnectors
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListDestinationConnectorsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of connectors to return. The service may return fewer
            than this value. If unspecified, at most 10 connectors will be returned.
            The maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: string
          format: int64
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            DestinationConnector view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ConnectorPublicService
    post:
      summary: |-
        CreateDestinationConnector method receives a
        CreateDestinationConnectorRequest message and returns a
        CreateDestinationConnectorResponse message.
      operationId: ConnectorPublicService_CreateDestinationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCreateDestinationConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: destination_connector
          description: DestinationConnector resource
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alphaDestinationConnector'
            required:
              - destination_connector
      tags:
        - ConnectorPublicService
  /v1alpha/health/connector:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: ConnectorPublicService_Liveness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/vdpconnectorv1alphaLivenessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - ConnectorPublicService
  /v1alpha/health/controller:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: ControllerPrivateService_Liveness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/vdpcontrollerv1alphaLivenessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - ControllerPrivateService
  /v1alpha/health/mgmt:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: MgmtPublicService_Liveness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/basemgmtv1alphaLivenessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1alpha/health/model:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: ModelPublicService_Liveness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/modelmodelv1alphaLivenessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - ModelPublicService
  /v1alpha/health/pipeline:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: PipelinePublicService_Liveness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/vdppipelinev1alphaLivenessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - PipelinePublicService
  /v1alpha/health/usage:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: UsageService_Liveness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/baseusagev1alphaLivenessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - UsageService
  /v1alpha/model-definitions:
    get:
      summary: |-
        ListModelDefinitions method receives a ListModelDefinitionsRequest message
        and returns a ListModelDefinitionsResponse
      operationId: ModelPublicService_ListModelDefinitions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListModelDefinitionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: page_size
          description: |-
            Page size: the maximum number of resources to return. The service may
            return fewer than this value. If unspecified, at most 10 ModelDefinitions
            will be returned. The maximum value is 100; values above 100 will be
            coereced to 100.
          in: query
          required: false
          type: string
          format: int64
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            Definition view (default is VIEW_BASIC)
            VIEW_UNSPECIFIED/VIEW_BASIC: omit `ModelDefinition.model_spec` and
            `ModelDefinition.model_spec`
            VIEW_FULL: show full information

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
             - VIEW_FULL: View: FULL, full representation of the resource
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ModelPublicService
  /v1alpha/models:
    get:
      summary: |-
        ListModels method receives a ListModelsRequest message and returns a
        ListModelsResponse
      operationId: ModelPublicService_ListModels
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListModelsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: page_size
          description: |-
            Page size: the maximum number of resources to return. The service may
            return fewer than this value. If unspecified, at most 10 models will be
            returned. The maximum value is 100; values above 100 will be coereced to
            100.
          in: query
          required: false
          type: string
          format: int64
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            Model view (default is VIEW_BASIC)
            VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
            VIEW_FULL: show full information

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
             - VIEW_FULL: View: FULL, full representation of the resource
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ModelPublicService
    post:
      summary: |-
        CreateModel method receives a CreateModelRequest message and returns a
        CreateModelResponse
      operationId: ModelPublicService_CreateModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCreateModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: model
          description: |-
            The model to be created

            The model `name` field is used to identify the model to create.
            Format: models/{model}
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alphaModel'
            required:
              - model
      tags:
        - ModelPublicService
  /v1alpha/pipelines:
    get:
      summary: |-
        ListPipelines method receives a ListPipelinesRequest message and returns a
        ListPipelinesResponse message.
      operationId: PipelinePublicService_ListPipelines
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListPipelinesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of pipelines to return. The service may return fewer
            than this value. If unspecified, at most 10 pipelines will be returned. The
            maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: string
          format: int64
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
        - name: filter
          description: Filter expression to list pipelines
          in: query
          required: false
          type: string
      tags:
        - PipelinePublicService
    post:
      summary: |-
        CreatePipeline method receives a CreatePipelineRequest message and returns
        a CreatePipelineResponse message.
      operationId: PipelinePublicService_CreatePipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCreatePipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: pipeline
          description: A pipeline resource to create
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alphaPipeline'
            required:
              - pipeline
      tags:
        - PipelinePublicService
  /v1alpha/ready/mgmt:
    get:
      summary: |-
        Readiness method receives a ReadinessRequest message and returns a
        ReadinessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: MgmtPublicService_Readiness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/basemgmtv1alphaReadinessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1alpha/ready/model:
    get:
      summary: |-
        Readiness method receives a ReadinessRequest message and returns a
        ReadinessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: ModelPublicService_Readiness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/modelmodelv1alphaReadinessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - ModelPublicService
  /v1alpha/reports:
    post:
      summary: |-
        SendSessionReport method receives a SendSessionReportRequest message and
        returns a SendSessionReportResponse message.
      operationId: UsageService_SendSessionReport
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaSendSessionReportResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: report
          description: A report resource to create
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alphaSessionReport'
            required:
              - report
      tags:
        - UsageService
  /v1alpha/sessions:
    post:
      summary: |-
        CreateSession method receives a CreateSessionRequest message and returns
        a CreateSessionResponse message.
      operationId: UsageService_CreateSession
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCreateSessionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: session
          description: A session resource to create
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alphaSession'
            required:
              - session
      tags:
        - UsageService
  /v1alpha/source-connector-definitions:
    get:
      summary: |-
        ListSourceConnectorDefinitions method receives a
        ListSourceConnectorDefinitionsRequest message and returns a
        ListSourceConnectorDefinitionsResponse message.
      operationId: ConnectorPublicService_ListSourceConnectorDefinitions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListSourceConnectorDefinitionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of SourceConnectorDefinitions to return. The service may
            return fewer than this value. If unspecified, at most 10
            SourceConnectorDefinitions will be returned. The maximum value is 100;
            values above 100 will be coerced to 100.
          in: query
          required: false
          type: string
          format: int64
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            Definition view (default is DEFINITION_VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ConnectorPublicService
  /v1alpha/source-connectors:
    get:
      summary: |-
        ListSourceConnectors method receives a ListSourceConnectorsRequest message
        and returns a ListSourceConnectorsResponse message.
      operationId: ConnectorPublicService_ListSourceConnectors
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListSourceConnectorsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of connectors to return. The service may return fewer
            than this value. If unspecified, at most 10 connectors will be returned.
            The maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: string
          format: int64
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            SourceConnector view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ConnectorPublicService
    post:
      summary: |-
        CreateSourceConnector method receives a CreateSourceConnectorRequest
        message and returns a CreateSourceConnectorResponse message.
      operationId: ConnectorPublicService_CreateSourceConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCreateSourceConnectorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: source_connector
          description: SourceConnector resource
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alphaSourceConnector'
            required:
              - source_connector
      tags:
        - ConnectorPublicService
  /v1alpha/tokens:
    get:
      summary: |-
        ListTokens method receives a ListTokensRequest message and returns a
        ListTokensResponse message.
      operationId: MgmtPublicService_ListTokens
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListTokensResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of API tokens to return. The service may return fewer
            than this value. If unspecified, at most 10 API tokens will be returned.
            The maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: string
          format: int64
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
    post:
      summary: |-
        CreateToken method receives a CreateTokenRequest message and returns
        a CreateTokenResponse message.
      operationId: MgmtPublicService_CreateToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCreateTokenResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: token
          description: A token resource to create
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alphaApiToken'
            required:
              - token
      tags:
        - MgmtPublicService
  /v1alpha/users/me:
    get:
      summary: |-
        QueryAuthenticatedUser method receives a QueryAuthenticatedUserRequest
        message and returns a QueryAuthenticatedUserResponse message.
      operationId: MgmtPublicService_QueryAuthenticatedUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaQueryAuthenticatedUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - MgmtPublicService
    patch:
      summary: |-
        PatchAuthenticatedUser method receives a PatchAuthenticatedUserRequest
        message and returns a PatchAuthenticatedUserResponse message.
      operationId: MgmtPublicService_PatchAuthenticatedUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaPatchAuthenticatedUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: user
          description: The user to update
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alphaUser'
            required:
              - user
      tags:
        - MgmtPublicService
definitions:
  HealthCheckResponseServingStatus:
    type: string
    enum:
      - SERVING_STATUS_UNSPECIFIED
      - SERVING_STATUS_SERVING
      - SERVING_STATUS_NOT_SERVING
    default: SERVING_STATUS_UNSPECIFIED
    description: |-
      - SERVING_STATUS_UNSPECIFIED: Serving status: UNSPECIFIED
       - SERVING_STATUS_SERVING: Serving status: SERVING
       - SERVING_STATUS_NOT_SERVING: Serving status: NOT SERVING
    title: ServingStatus enumerates the status of a queried service
  ModelTask:
    type: string
    enum:
      - TASK_UNSPECIFIED
      - TASK_CLASSIFICATION
      - TASK_DETECTION
      - TASK_KEYPOINT
      - TASK_OCR
      - TASK_INSTANCE_SEGMENTATION
      - TASK_SEMANTIC_SEGMENTATION
      - TASK_TEXT_TO_IMAGE
      - TASK_TEXT_GENERATION
    default: TASK_UNSPECIFIED
    description: |-
      - TASK_UNSPECIFIED: Task: UNSPECIFIED
       - TASK_CLASSIFICATION: Task: CLASSIFICATION
       - TASK_DETECTION: Task: DETECTION
       - TASK_KEYPOINT: Task: KEYPOINT
       - TASK_OCR: Task: OCR
       - TASK_INSTANCE_SEGMENTATION: Task: INSTANCE SEGMENTATION
       - TASK_SEMANTIC_SEGMENTATION: Task: SEMANTIC SEGMENTATION
       - TASK_TEXT_TO_IMAGE: Task: TEXT TO IMAGE
       - TASK_TEXT_GENERATION: Task: TEXT Generation
    title: Task enumerates the task type of a model
  ModelVisibility:
    type: string
    enum:
      - VISIBILITY_UNSPECIFIED
      - VISIBILITY_PRIVATE
      - VISIBILITY_PUBLIC
    default: VISIBILITY_UNSPECIFIED
    description: |-
      - VISIBILITY_UNSPECIFIED: Visibility: UNSPECIFIED, equivalent to PRIVATE.
       - VISIBILITY_PRIVATE: Visibility: PRIVATE
       - VISIBILITY_PUBLIC: Visibility: PUBLIC
    title: Model visibility including public or private
  PipelineMode:
    type: string
    enum:
      - MODE_UNSPECIFIED
      - MODE_SYNC
      - MODE_ASYNC
    default: MODE_UNSPECIFIED
    description: |-
      - MODE_UNSPECIFIED: Mode: UNSPECIFIED
       - MODE_SYNC: Mode: SYNC
       - MODE_ASYNC: Mode: ASYNC
    title: Mode enumerates the pipeline modes
  SessionService:
    type: string
    enum:
      - SERVICE_UNSPECIFIED
      - SERVICE_MGMT
      - SERVICE_CONNECTOR
      - SERVICE_MODEL
      - SERVICE_PIPELINE
    default: SERVICE_UNSPECIFIED
    description: |-
      - SERVICE_UNSPECIFIED: Service: UNSPECIFIED
       - SERVICE_MGMT: Service: MGMT
       - SERVICE_CONNECTOR: Service: CONNECTOR
       - SERVICE_MODEL: Service: MODEL
       - SERVICE_PIPELINE: Service: PIPELINE
    title: Service enumerates the services to collect data from
  basemgmtv1alphaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  basemgmtv1alphaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  basemgmtv1alphaView:
    type: string
    enum:
      - VIEW_UNSPECIFIED
      - VIEW_BASIC
      - VIEW_FULL
    default: VIEW_UNSPECIFIED
    description: |-
      View represents a view of any resource. The resource view is implemented by
      adding a parameter to the method request which allows the client to specify
      which view of the resource it wants to receive in the response.

       - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
       - VIEW_BASIC: View: BASIC
       - VIEW_FULL: View: FULL
  baseusagev1alphaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  baseusagev1alphaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  googlelongrunningOperation:
    type: object
    properties:
      name:
        type: string
        description: |-
          The server-assigned name, which is only unique within the same service that
          originally returns it. If you use the default HTTP mapping, the
          `name` should be a resource name ending with `operations/{unique_id}`.
      metadata:
        $ref: '#/definitions/protobufAny'
        description: |-
          Service-specific metadata associated with the operation.  It typically
          contains progress information and common metadata such as create time.
          Some services might not provide such metadata.  Any method that returns a
          long-running operation should document the metadata type, if any.
      done:
        type: boolean
        description: |-
          If the value is `false`, it means the operation is still in progress.
          If `true`, the operation is completed, and either `error` or `response` is
          available.
      error:
        $ref: '#/definitions/rpcStatus'
        description: The error result of the operation in case of failure or cancellation.
      response:
        $ref: '#/definitions/protobufAny'
        description: |-
          The normal response of the operation in case of success.  If the original
          method returns no data on success, such as `Delete`, the response is
          `google.protobuf.Empty`.  If the original method is standard
          `Get`/`Create`/`Update`, the response should be the resource.  For other
          methods, the response should have the type `XxxResponse`, where `Xxx`
          is the original method name.  For example, if the original method name
          is `TakeSnapshot()`, the inferred response type is
          `TakeSnapshotResponse`.
    description: |-
      This resource represents a long-running operation that is the result of a
      network API call.
  modelcontrollerv1alphaDeleteResourceResponse:
    type: object
    title: DeleteResourceResponse represents an empty response
  modelcontrollerv1alphaGetResourceResponse:
    type: object
    properties:
      resource:
        $ref: '#/definitions/modelcontrollerv1alphaResource'
        title: Retrieved resource state
    title: GetResourceResponse represents a response to fetch a resource's state
  modelcontrollerv1alphaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  modelcontrollerv1alphaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  modelcontrollerv1alphaResource:
    type: object
    properties:
      resource_permalink:
        type: string
        title: |-
          Permalink of a resource. For example:
          "resources/{resource_uuid}/types/{type}"
      model_state:
        $ref: '#/definitions/v1alphaModelState'
        title: Model state
      backend_state:
        $ref: '#/definitions/HealthCheckResponseServingStatus'
        title: Backend service state
      progress:
        type: integer
        format: int32
        title: Resource longrunning progress
    title: Resource represents the current information of a resource
    required:
      - resource_permalink
  modelcontrollerv1alphaUpdateResourceResponse:
    type: object
    properties:
      resource:
        $ref: '#/definitions/modelcontrollerv1alphaResource'
        title: Updated resource state
    title: UpdateResourceResponse represents a response to update a resource's state
  modelmodelv1alphaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  modelmodelv1alphaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  modelmodelv1alphaTaskOutput:
    type: object
    properties:
      classification:
        $ref: '#/definitions/v1alphaClassificationOutput'
        title: The classification output
        readOnly: true
      detection:
        $ref: '#/definitions/v1alphaDetectionOutput'
        title: The detection output
        readOnly: true
      keypoint:
        $ref: '#/definitions/v1alphaKeypointOutput'
        title: The keypoint output
        readOnly: true
      ocr:
        $ref: '#/definitions/v1alphaOcrOutput'
        title: The ocr output
        readOnly: true
      instance_segmentation:
        $ref: '#/definitions/v1alphaInstanceSegmentationOutput'
        title: The instance segmentation output
        readOnly: true
      semantic_segmentation:
        $ref: '#/definitions/v1alphaSemanticSegmentationOutput'
        title: The semantic segmentation output
        readOnly: true
      text_to_image:
        $ref: '#/definitions/v1alphaTextToImageOutput'
        title: The text to image output
        readOnly: true
      text_generation:
        $ref: '#/definitions/v1alphaTextGenerationOutput'
        title: The text generation output
        readOnly: true
      unspecified:
        $ref: '#/definitions/v1alphaUnspecifiedOutput'
        title: The unspecified task output
        readOnly: true
    title: TaskOutput represents the output of a CV Task result from a model
  modelmodelv1alphaView:
    type: string
    enum:
      - VIEW_UNSPECIFIED
      - VIEW_BASIC
      - VIEW_FULL
    default: VIEW_UNSPECIFIED
    description: |-
      View represents a view of any resource. The resource view is implemented by
      adding a parameter to the method request which allows the client to specify
      which view of the resource it wants to receive in the response.

       - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
       - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
       - VIEW_FULL: View: FULL, full representation of the resource
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
        description: |-
          A URL/resource name that uniquely identifies the type of the serialized
          protocol buffer message. This string must contain at least
          one "/" character. The last segment of the URL's path must represent
          the fully qualified name of the type (as in
          `path/google.protobuf.Duration`). The name should be in a canonical form
          (e.g., leading "." is not accepted).

          In practice, teams usually precompile into the binary all types that they
          expect it to use in the context of Any. However, for URLs which use the
          scheme `http`, `https`, or no scheme, one can optionally set up a type
          server that maps type URLs to message definitions as follows:

          * If no scheme is provided, `https` is assumed.
          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
            value in binary format, or produce an error.
          * Applications are allowed to cache lookup results based on the
            URL, or have them precompiled into a binary to avoid any
            lookup. Therefore, binary compatibility needs to be preserved
            on changes to types. (Use versioned type names to manage
            breaking changes.)

          Note: this functionality is not currently available in the official
          protobuf release, and it is not used for type URLs beginning with
          type.googleapis.com.

          Schemes other than `http`, `https` (or the empty scheme) might be
          used with implementation specific semantics.
    additionalProperties: {}
    description: |-
      `Any` contains an arbitrary serialized protocol buffer message along with a
      URL that describes the type of the serialized message.

      Protobuf library provides support to pack/unpack Any values in the form
      of utility functions or additional generated methods of the Any type.

      Example 1: Pack and unpack a message in C++.

          Foo foo = ...;
          Any any;
          any.PackFrom(foo);
          ...
          if (any.UnpackTo(&foo)) {
            ...
          }

      Example 2: Pack and unpack a message in Java.

          Foo foo = ...;
          Any any = Any.pack(foo);
          ...
          if (any.is(Foo.class)) {
            foo = any.unpack(Foo.class);
          }
          // or ...
          if (any.isSameTypeAs(Foo.getDefaultInstance())) {
            foo = any.unpack(Foo.getDefaultInstance());
          }

      Example 3: Pack and unpack a message in Python.

          foo = Foo(...)
          any = Any()
          any.Pack(foo)
          ...
          if any.Is(Foo.DESCRIPTOR):
            any.Unpack(foo)
            ...

      Example 4: Pack and unpack a message in Go

           foo := &pb.Foo{...}
           any, err := anypb.New(foo)
           if err != nil {
             ...
           }
           ...
           foo := &pb.Foo{}
           if err := any.UnmarshalTo(foo); err != nil {
             ...
           }

      The pack methods provided by protobuf library will by default use
      'type.googleapis.com/full.type.name' as the type URL and the unpack
      methods only use the fully qualified type name after the last '/'
      in the type URL, for example "foo.bar.com/x/y.z" will yield type
      name "y.z".

      JSON

      The JSON representation of an `Any` value uses the regular
      representation of the deserialized, embedded message, with an
      additional field `@type` which contains the type URL. Example:

          package google.profile;
          message Person {
            string first_name = 1;
            string last_name = 2;
          }

          {
            "@type": "type.googleapis.com/google.profile.Person",
            "firstName": <string>,
            "lastName": <string>
          }

      If the embedded message type is well-known and has a custom JSON
      representation, that representation will be embedded adding a field
      `value` which holds the custom JSON in addition to the `@type`
      field. Example (for message [google.protobuf.Duration][]):

          {
            "@type": "type.googleapis.com/google.protobuf.Duration",
            "value": "1.212s"
          }
  protobufNullValue:
    type: string
    enum:
      - NULL_VALUE
    default: NULL_VALUE
    description: |-
      `NullValue` is a singleton enumeration to represent the null value for the
      `Value` type union.

       The JSON representation for `NullValue` is JSON `null`.

       - NULL_VALUE: Null value.
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
        description: |-
          The status code, which should be an enum value of
          [google.rpc.Code][google.rpc.Code].
      message:
        type: string
        description: |-
          A developer-facing error message, which should be in English. Any
          user-facing error message should be localized and sent in the
          [google.rpc.Status.details][google.rpc.Status.details] field, or localized
          by the client.
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
        description: |-
          A list of messages that carry the error details.  There is a common set of
          message types for APIs to use.
    description: |-
      The `Status` type defines a logical error model that is suitable for
      different programming environments, including REST APIs and RPC APIs. It is
      used by [gRPC](https://github.com/grpc). Each `Status` message contains
      three pieces of data: error code, error message, and error details.

      You can find out more about this error model and how to work with it in the
      [API Design Guide](https://cloud.google.com/apis/design/errors).
  v1alphaActivatePipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1alphaPipeline'
        title: A pipeline resource
    title: ActivatePipelineResponse represents an activated pipeline
  v1alphaApiToken:
    type: object
    properties:
      name:
        type: string
        title: API token resource name. It must have the format of "tokens/*"
        readOnly: true
      uid:
        type: string
        title: API token UUID
        readOnly: true
      id:
        type: string
        description: |-
          API token resource ID (the last segment of the resource name) used to
          construct the resource name. This conforms to RFC-1034, which restricts to
          letters, numbers, and hyphen, with the first character a letter, the last a
          letter or a number, and a 63 character maximum.
          Use this field to define where it's being used.
      create_time:
        type: string
        format: date-time
        title: API token creation time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: API token update time
        readOnly: true
      access_token:
        type: string
        description: |-
          An opaque access token representing the API token string.
          To validate the token, the recipient of the token needs to call the server
          that issued the token.
        readOnly: true
      state:
        $ref: '#/definitions/v1alphaApiTokenState'
        title: API token state
        readOnly: true
      token_type:
        type: string
        title: API token type, value is fixed to "Bearer"
        readOnly: true
      ttl:
        type: string
        format: int64
        description: Input only. The TTL in seconds for this resource.
      expire_time:
        type: string
        format: date-time
        title: API token expire time
    title: ApiToken represents the content of a API token
  v1alphaApiTokenState:
    type: string
    enum:
      - STATE_UNSPECIFIED
      - STATE_INACTIVE
      - STATE_ACTIVE
      - STATE_EXPIRED
    default: STATE_UNSPECIFIED
    description: |-
      - STATE_UNSPECIFIED: State: UNSPECIFIED
       - STATE_INACTIVE: State: INACTIVE
       - STATE_ACTIVE: State: ACTIVE
       - STATE_EXPIRED: State: EXPIRED
    title: State enumerates the state of an API token
  v1alphaBoundingBox:
    type: object
    properties:
      top:
        type: number
        format: float
        title: Bounding box top y-axis value
        readOnly: true
      left:
        type: number
        format: float
        title: Bounding box left x-axis value
        readOnly: true
      width:
        type: number
        format: float
        title: Bounding box width value
        readOnly: true
      height:
        type: number
        format: float
        title: Bounding box height value
        readOnly: true
    title: BoundingBox represents the bounding box data structure
  v1alphaCheckDestinationConnectorResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1alphaConnectorState'
        title: Retrieved connector state
    title: |-
      CheckDestinationConnectorResponse represents a response to fetch a
      destination connector's current state
  v1alphaCheckModelResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1alphaModelState'
        title: Retrieved model state
    title: |-
      CheckModelResponse represents a response to fetch a model's
      current state and longrunning progress
  v1alphaCheckSourceConnectorResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1alphaConnectorState'
        title: Retrieved connector state
    title: |-
      CheckSourceConnectorResponse represents a response to fetch a source
      connector's current state
  v1alphaClassificationInput:
    type: object
    properties:
      image_url:
        type: string
        title: Image type URL
      image_base64:
        type: string
        title: Image type base64
    title: ClassificationInput represents the input of classification task
  v1alphaClassificationInputStream:
    type: object
    properties:
      file_lengths:
        type: array
        items:
          type: string
          format: uint64
        title: The list of file length for each uploaded binary file
      content:
        type: string
        format: byte
        title: Content of images in bytes
    title: |-
      ClassificationInputStream represents the input of classification task when
      using stream method
    required:
      - file_lengths
      - content
  v1alphaClassificationOutput:
    type: object
    properties:
      category:
        type: string
        title: Classification category
        readOnly: true
      score:
        type: number
        format: float
        title: Classification score
        readOnly: true
    title: ClassificationOutput represents the output of classification task
  v1alphaComponent:
    type: object
    properties:
      id:
        type: string
        title: Component id that is given by the users
      resource_name:
        type: string
        title: A pipeline component resource name
      resource_detail:
        type: object
        title: A pipeline component resource detail
        readOnly: true
      metadata:
        type: object
        title: Metadata for the pipeline component
      dependencies:
        type: object
        additionalProperties:
          type: string
        title: Dependencies for the pipeline component
    title: Represents a pipeline component
    required:
      - id
      - resource_name
  v1alphaConnectDestinationConnectorResponse:
    type: object
    properties:
      destination_connector:
        $ref: '#/definitions/v1alphaDestinationConnector'
        title: A DestinationConnector resource
    title: |-
      ConnectDestinationConnectorResponse represents a connected destination
      connector
  v1alphaConnectSourceConnectorResponse:
    type: object
    properties:
      source_connector:
        $ref: '#/definitions/v1alphaSourceConnector'
        title: A SourceConnector resource
    title: ConnectSourceConnectorResponse represents a connected source connector
  v1alphaConnector:
    type: object
    properties:
      description:
        type: string
        title: Connector description
      configuration:
        type: object
        title: Connector configuration in JSON format
      state:
        $ref: '#/definitions/v1alphaConnectorState'
        title: Connector state
        readOnly: true
      tombstone:
        type: boolean
        title: Connector tombstone
        readOnly: true
      user:
        type: string
        description: |-
          The resource name with UUID of a user, e.g.,
          "users/bfb978f8-78d3-4338-aa2b-a6c699cb07c5".
        readOnly: true
      org:
        type: string
        title: The resource name with UUID of an organization
        readOnly: true
      create_time:
        type: string
        format: date-time
        title: Connector creation time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: Connector update time
        readOnly: true
    title: Connector represents a connector data model
    required:
      - configuration
  v1alphaConnectorDefinition:
    type: object
    properties:
      title:
        type: string
        title: ConnectorDefinition title
        readOnly: true
      documentation_url:
        type: string
        title: ConnectorDefinition documentation URL
        readOnly: true
      icon:
        type: string
        title: ConnectorDefinition icon
        readOnly: true
      spec:
        $ref: '#/definitions/v1alphaSpec'
        title: ConnectorDefinition spec
        readOnly: true
      tombstone:
        type: boolean
        title: |-
          ConnectorDefinition tombstone, i.e., if not set or false, the
          configuration is active, or otherwise, if true, this configuration is
          permanently off
        readOnly: true
      public:
        type: boolean
        title: |-
          ConnectorDefinition public flag, i.e., true if this connector
          definition is available to all workspaces
        readOnly: true
      custom:
        type: boolean
        title: |-
          ConnectorDefinition custom flag, i.e., whether this is a custom
          connector definition
        readOnly: true
      icon_url:
        type: string
        title: ConnectorDefinition iconUrl
        readOnly: true
      vendor:
        type: string
        title: ConnectorDefinition vendor name
        readOnly: true
      vendor_attributes:
        type: object
        title: ConnectorDefinition vendorAttributes, i.e. the vendor-specific attributes
        readOnly: true
    title: ConnectorDefinition represents the connector definition data model
  v1alphaConnectorState:
    type: string
    enum:
      - STATE_UNSPECIFIED
      - STATE_DISCONNECTED
      - STATE_CONNECTED
      - STATE_ERROR
    default: STATE_UNSPECIFIED
    description: |-
      - STATE_UNSPECIFIED: State: UNSPECIFIED
       - STATE_DISCONNECTED: State: DISCONNECTED
       - STATE_CONNECTED: State: CONNECTED
       - STATE_ERROR: State: ERROR
    title: State enumerates the connector state
  v1alphaConnectorUsageData:
    type: object
    properties:
      usages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaConnectorUsageDataUserUsageData'
        title: Usage data of all users in the connector service
    title: Connector service usage data
  v1alphaConnectorUsageDataUserUsageData:
    type: object
    properties:
      user_uid:
        type: string
        title: User UUID
      source_connector_connected_state_num:
        type: string
        format: int64
        title: Number of source connectors with 'connected' state
      source_connector_disconnected_state_num:
        type: string
        format: int64
        title: Number of source connectors with 'disconneceted' state
      source_connector_definition_ids:
        type: array
        items:
          type: string
        description: |-
          Definition IDs of the source connectors. Element in the list
          should not be duplicated.
      destination_connector_connected_state_num:
        type: string
        format: int64
        title: Number of destination connectors with 'connected' state
      destination_connector_disconnected_state_num:
        type: string
        format: int64
        title: Number of destination connectors with 'disconnected' state
      destination_connector_definition_ids:
        type: array
        items:
          type: string
        description: |-
          Definition IDs of the destination connectors. Element in the
          list should not be duplicated.
    title: Per user usage data in the connector service
    required:
      - user_uid
      - source_connector_connected_state_num
      - source_connector_disconnected_state_num
      - source_connector_definition_ids
      - destination_connector_connected_state_num
      - destination_connector_disconnected_state_num
      - destination_connector_definition_ids
  v1alphaCreateDestinationConnectorResponse:
    type: object
    properties:
      destination_connector:
        $ref: '#/definitions/v1alphaDestinationConnector'
        title: DestinationConnector resource
    title: |-
      CreateDestinationConnectorResponse represents a response for a
      DestinationConnector resource
  v1alphaCreateModelBinaryFileUploadResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: Create model operation message
        readOnly: true
    title: CreateModelBinaryFileUploadResponse represents a response for a model
  v1alphaCreateModelResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: Create model operation message
        readOnly: true
    title: CreateModelResponse represents a response for a model
  v1alphaCreatePipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1alphaPipeline'
        title: The created pipeline resource
    title: CreatePipelineResponse represents a response for a pipeline resource
  v1alphaCreateSessionResponse:
    type: object
    properties:
      session:
        $ref: '#/definitions/v1alphaSession'
        title: A session resource
    title: CreateSessionResponse represents a response for a session response
  v1alphaCreateSourceConnectorResponse:
    type: object
    properties:
      source_connector:
        $ref: '#/definitions/v1alphaSourceConnector'
        title: SourceConnector resource
    title: |-
      CreateSourceConnectorResponse represents a response for a
      SourceConnector resource
  v1alphaCreateTokenResponse:
    type: object
    properties:
      token:
        $ref: '#/definitions/v1alphaApiToken'
        title: The created API token resource
    title: CreateTokenResponse represents a response for a API token resource
  v1alphaCreateUserAdminResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUser'
        title: A user resource
    title: CreateUserAdminResponse represents a response for a user response
  v1alphaDataPayload:
    type: object
    properties:
      data_mapping_index:
        type: string
        title: Data index corresponds to each data element
      texts:
        type: array
        items:
          type: string
        title: 'Unstructured: text field'
      images:
        type: array
        items:
          type: string
          format: byte
        title: 'Unstructured: image field'
      json:
        type: object
        title: '[semi-]structured data: json field'
      metadata:
        type: object
        title: Metadata
    title: DataPayload is a data structure trasferring data in pipeline
    required:
      - data_mapping_index
  v1alphaDeactivatePipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1alphaPipeline'
        title: A pipeline resource
    title: DeactivatePipelineResponse represents an inactivated pipeline
  v1alphaDeleteDestinationConnectorResponse:
    type: object
    title: DeleteDestinationConnectorResponse represents an empty response
  v1alphaDeleteModelResponse:
    type: object
    title: DeleteModelResponse represents an empty response
  v1alphaDeletePipelineResponse:
    type: object
    title: DeletePipelineResponse represents an empty response
  v1alphaDeleteSourceConnectorResponse:
    type: object
    title: DeleteSourceConnectorResponse represents an empty response
  v1alphaDeleteTokenResponse:
    type: object
    title: DeleteTokenResponse represents an empty response
  v1alphaDeleteUserAdminResponse:
    type: object
    title: DeleteUserAdminResponse represents an empty response
  v1alphaDeployModelResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: Deploy operation message
    title: DeployModelResponse represents a response for a deployed model
  v1alphaDestinationConnector:
    type: object
    properties:
      name:
        type: string
        title: |-
          DestinationConnector resource name. It must have the format of
          "destination-connectors/*"
        readOnly: true
      uid:
        type: string
        title: DestinationConnector UUID
        readOnly: true
      id:
        type: string
        description: |-
          DestinationConnector resource ID (the last segment of the resource name)
          used to construct the resource name. This conforms to RFC-1034, which
          restricts to letters, numbers, and hyphen, with the first character a
          letter, the last a letter or a number, and a 63 character maximum.
      destination_connector_definition:
        type: string
        title: DestinationConnectorDefinition resource
      connector:
        $ref: '#/definitions/v1alphaConnector'
        title: DestinationConnector's connector data structure
    title: DestinationConnector represents a destination connector resource
    required:
      - connector
  v1alphaDestinationConnectorDefinition:
    type: object
    properties:
      name:
        type: string
        title: |-
          DestinationConnectorDefinition resource name. It must have the format of
          "connector-definitions/*"
        readOnly: true
      uid:
        type: string
        title: DestinationConnectorDefinition UUID
        readOnly: true
      id:
        type: string
        description: |-
          DestinationConnectorDefinition resource ID (the last segment of the
          resource name) used to construct the resource name. This conforms to
          RFC-1034, which restricts to letters, numbers, and hyphen, with the first
          character a letter, the last a letter or a number, and a 63 character
          maximum.
      connector_definition:
        $ref: '#/definitions/v1alphaConnectorDefinition'
        title: DestinationConnectorDefinition connector definition
        readOnly: true
    title: |-
      DestinationConnectorDefinition represents the destination connector
      definition resource
  v1alphaDetectionInput:
    type: object
    properties:
      image_url:
        type: string
        title: Image type URL
      image_base64:
        type: string
        title: Image type base64
    title: DetectionInput represents the input of detection task
  v1alphaDetectionInputStream:
    type: object
    properties:
      file_lengths:
        type: array
        items:
          type: string
          format: uint64
        title: The list of file length for each uploaded binary file
      content:
        type: string
        format: byte
        title: Content of images in bytes
    title: |-
      DetectionInputStream represents the input of detection task when using stream
      method
    required:
      - file_lengths
      - content
  v1alphaDetectionObject:
    type: object
    properties:
      category:
        type: string
        title: Detection object category
        readOnly: true
      score:
        type: number
        format: float
        title: Detection object score
        readOnly: true
      bounding_box:
        $ref: '#/definitions/v1alphaBoundingBox'
        title: Detection bounding box
        readOnly: true
    title: DetectionObject represents a predicted object
  v1alphaDetectionOutput:
    type: object
    properties:
      objects:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaDetectionObject'
        title: A list of detection objects
        readOnly: true
    title: DetectionOutput represents the output of detection task
  v1alphaDisconnectDestinationConnectorResponse:
    type: object
    properties:
      destination_connector:
        $ref: '#/definitions/v1alphaDestinationConnector'
        title: A DestinationConnector resource
    title: |-
      DisconnectDestinationConnectorResponse represents a disconnected destination
      connector
  v1alphaDisconnectSourceConnectorResponse:
    type: object
    properties:
      source_connector:
        $ref: '#/definitions/v1alphaSourceConnector'
        title: A SourceConnector resource
    title: DisconnectSourceConnectorResponse represents a disconnected source connector
  v1alphaExecuteDestinationConnectorResponse:
    type: object
    properties:
      output:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaDataPayload'
        title: Output
    title: |-
      ExecuteDestinationConnectorResponse represents a response for execution
      output
  v1alphaExecuteSourceConnectorResponse:
    type: object
    properties:
      output:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaDataPayload'
        title: Output
    title: ExecuteSourceConnectorResponse represents a response for execution output
  v1alphaExistUsernameResponse:
    type: object
    properties:
      exists:
        type: boolean
        title: A boolean value indicating whether the username has been occupied
    title: |-
      ExistUsernameResponse represents a response about whether
      the queried username has been occupied
  v1alphaGetBulkCumulativeModelOnlineRecordsResponse:
    type: object
    properties:
      bulk_cumulative_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaGetCumulativeModelOnlineRecordsResponse'
        title: A list of cumulative model online record lists
    title: |-
      GetBulkCumulativeModelOnlineRecordsResponse represents a response to
      GetBulkCumulativeModelOnlineRecordsRequest
    required:
      - bulk_cumulative_records
  v1alphaGetBulkCumulativePipelineTriggerRecordsResponse:
    type: object
    properties:
      bulk_cumulative_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaGetCumulativePipelineTriggerRecordsResponse'
        title: A list of cumulative pipeline trigger record lists
    title: |-
      GetBulkCumulativePipelineTriggerRecordsResponse represents a response to
      GetBulkCumulativePipelineTriggerRecordsRequest
    required:
      - bulk_cumulative_records
  v1alphaGetBulkModelOnlinePriceResponse:
    type: object
    properties:
      bulk_prices:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaGetModelOnlinePriceResponse'
        title: A list of model online price lists
    title: |-
      GetBulkModelOnlinePriceResponse represents a response to
      GetBulkModelOnlinePriceRequest
    required:
      - bulk_prices
  v1alphaGetBulkModelOnlineRecordsResponse:
    type: object
    properties:
      bulk_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaGetModelOnlineRecordsResponse'
        title: A list of model online record lists
    title: |-
      GetBulkModelOnlineRecordsResponse represents a response to
      GetBulkModelOnlineRecordsRequest
    required:
      - bulk_records
  v1alphaGetBulkModelOnlineSummaryResponse:
    type: object
    properties:
      bulk_summaries:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaGetModelOnlineSummaryResponse'
        title: A list of model online usage summaries
    title: |-
      GetBulkModelOnlineSummaryResponse represents a response to
      GetBulkModelOnlineSummaryRequest
    required:
      - bulk_summaries
  v1alphaGetBulkPipelineTriggerPriceResponse:
    type: object
    properties:
      bulk_prices:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaGetPipelineTriggerPriceResponse'
        title: A list of pipeline trigger price lists
    title: |-
      GetBulkPipelineTriggerPriceResponse represents a response to
      GetBulkPipelineTriggerPriceRequest
    required:
      - bulk_prices
  v1alphaGetBulkPipelineTriggerRecordsResponse:
    type: object
    properties:
      bulk_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaGetPipelineTriggerRecordsResponse'
        title: A list of pipeline trigger record lists
    title: |-
      GetBulkPipelineTriggerRecordsResponse represents a response to
      GetBulkPipelineTriggerRecordsRequest
    required:
      - bulk_records
  v1alphaGetBulkPipelineTriggerSummariesResponse:
    type: object
    properties:
      bulk_summaries:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaGetPipelineTriggerSummaryResponse'
        title: A list of pipeline trigger usage summaries
    title: |-
      GetBulkPipelineTriggerSummariesResponse represents a response to
      GetBulkPipelineTriggerSummariesRequest
    required:
      - bulk_summaries
  v1alphaGetCumulativeModelOnlineRecordsRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUserData'
        title: User information
      model:
        $ref: '#/definitions/v1alphaModelData'
        title: Model information
      time_interval:
        $ref: '#/definitions/v1alphaTimeInterval'
        title: Time interval
    title: |-
      GetCumulativeModelOnlineRecordsRequest represents a query for cumulative
      model online records
    required:
      - user
      - model
      - time_interval
  v1alphaGetCumulativeModelOnlineRecordsResponse:
    type: object
    properties:
      cumulative_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaModelUsageRecord'
        title: A list of model online records in cumulative format
    title: |-
      GetCumulativeModelOnlineRecordsResponse represents a response to
      GetCumulativeModelOnlineRecordsRequest
    required:
      - cumulative_records
  v1alphaGetCumulativePipelineTriggerRecordsRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUserData'
        title: User information
      pipeline:
        $ref: '#/definitions/v1alphaPipelineData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1alphaTimeInterval'
        title: Time interval
    title: |-
      GetCumulativePipelineTriggerRecordsRequest represents a query for cumulative
      pipeline trigger records
    required:
      - user
      - pipeline
  v1alphaGetCumulativePipelineTriggerRecordsResponse:
    type: object
    properties:
      cumulative_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPipelineUsageRecord'
        title: Pipeline trigger records where values are in cumulative formats
    title: |-
      GetCumulativePipelineTriggerRecordsResponse represents a response to
      GetCumulativePipelineTriggerRecordsRequest
    required:
      - cumulative_records
  v1alphaGetDestinationConnectorDefinitionResponse:
    type: object
    properties:
      destination_connector_definition:
        $ref: '#/definitions/v1alphaDestinationConnectorDefinition'
        title: A DestinationConnectorDefinition resource
    title: |-
      GetDestinationConnectorDefinitionResponse represents a
      DestinationConnectorDefinition response
  v1alphaGetDestinationConnectorResponse:
    type: object
    properties:
      destination_connector:
        $ref: '#/definitions/v1alphaDestinationConnector'
        title: DestinationConnector resource
    title: |-
      GetDestinationConnectorResponse represents a response for a
      DestinationConnector resource
  v1alphaGetModelCardResponse:
    type: object
    properties:
      readme:
        $ref: '#/definitions/v1alphaModelCard'
        title: Retrieved model card
    title: GetModelCardResponse represents a response to fetch a model's README card
  v1alphaGetModelDefinitionResponse:
    type: object
    properties:
      model_definition:
        $ref: '#/definitions/v1alphaModelDefinition'
        title: A model definition instance
    title: GetModelDefinitionResponse represents a response for a model definition
  v1alphaGetModelOnlinePriceRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUserData'
        title: User information
      model:
        $ref: '#/definitions/v1alphaModelData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1alphaTimeInterval'
        title: Time interval
    title: |-
      GetPipelineTriggerPriceRequest represents a query for price data of the
      billing periods covered by the time interval
    required:
      - user
      - model
      - time_interval
  v1alphaGetModelOnlinePriceResponse:
    type: object
    properties:
      price:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPriceData'
        title: |-
          A list of model online prices given the billing periods covered by the time
          interval
    title: |-
      GetModelOnlinePriceResponse represents a response to
      GetModelOnlinePriceRequest
    required:
      - price
  v1alphaGetModelOnlineRecordsRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUserData'
        title: User information
      model:
        $ref: '#/definitions/v1alphaModelData'
        title: Model information
      time_interval:
        $ref: '#/definitions/v1alphaTimeInterval'
        title: Time interval
    title: GetModelOnlineRecordsRequest represent a query for model online records
    required:
      - user
      - model
      - time_interval
  v1alphaGetModelOnlineRecordsResponse:
    type: object
    properties:
      records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaModelUsageRecord'
        title: A list of model trigger records
    title: |-
      GetModelOnlineRecordsResponse represents a response to
      GetModelOnlineRecordsRequest
    required:
      - records
  v1alphaGetModelOnlineSummaryRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUserData'
        title: User information
      model:
        $ref: '#/definitions/v1alphaModelData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1alphaTimeInterval'
        title: Time interval
    title: GetModelOnlineSummaryRequest represents a query for model online summary
    required:
      - user
      - model
      - time_interval
  v1alphaGetModelOnlineSummaryResponse:
    type: object
    properties:
      summary:
        $ref: '#/definitions/v1alphaUsageSummary'
        title: The total model online usage in the time interval
    title: |-
      GetModelOnlineSummaryResponse represents a response to
      GetModelOnlineSummaryRequest
    required:
      - summary
  v1alphaGetModelOperationResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: The retrieved model operation
    title: GetModelOperationResponse represents a response for a model operation
  v1alphaGetModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: The retrieved model
    title: GetModelResponse represents a response for a model
  v1alphaGetModelsResponse:
    type: object
    properties:
      models:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaModelData'
        title: A list of model informations
    title: GetPipelinesResponse represents a respond to GetModelsRequest
    required:
      - models
  v1alphaGetPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1alphaPipeline'
        title: A pipeline resource
    title: GetPipelineResponse represents a response for a pipeline resource
  v1alphaGetPipelineTriggerPriceRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUserData'
        title: User information
      pipeline:
        $ref: '#/definitions/v1alphaPipelineData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1alphaTimeInterval'
        title: Time interval
    title: |-
      GetPipelineTriggerPriceRequest represents a query for pipeline trigger prices
      given the billing periods covered by the time interval
    required:
      - user
      - pipeline
      - time_interval
  v1alphaGetPipelineTriggerPriceResponse:
    type: object
    properties:
      price:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPriceData'
        title: |-
          A list of pipeline trigger prices given the billing periods covered by the
          time interval
    title: |-
      GetPipelineTriggerPriceResponse represents a response to
      GetPipelineTriggerPriceRequest
    required:
      - price
  v1alphaGetPipelineTriggerRecordsRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUserData'
        title: User information
      pipeline:
        $ref: '#/definitions/v1alphaPipelineData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1alphaTimeInterval'
        title: Time interval
    title: |-
      GetPipelineTriggerRecordsRequest represents a query for pipeline trigger
      records
    required:
      - user
      - pipeline
  v1alphaGetPipelineTriggerRecordsResponse:
    type: object
    properties:
      records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPipelineUsageRecord'
        title: A list of pipeline trigger records
    title: |-
      GetPipelineTriggerRecordsResponse represents a response to
      GetPipelineTriggerRecordsRequest
    required:
      - records
  v1alphaGetPipelineTriggerSummaryRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUserData'
        title: User information
      pipeline:
        $ref: '#/definitions/v1alphaPipelineData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1alphaTimeInterval'
        title: Time interval
    title: |-
      GetPipelineTriggerSummaryRequest represents a query for pipeline trigger
      summary
    required:
      - user
      - pipeline
  v1alphaGetPipelineTriggerSummaryResponse:
    type: object
    properties:
      summaries:
        $ref: '#/definitions/v1alphaUsageSummary'
        title: The total pipeline trigger usage in the time interval
    title: |-
      GetPipelineTriggerSummaryResponse represents a response to
      GetPipelineTriggerSummaryRequest
    required:
      - summaries
  v1alphaGetPipelinesResponse:
    type: object
    properties:
      pipelines:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPipelineData'
        title: A list of pipeline informations
    title: GetPipelinesResponse represents a respond to GetPipelineRequest
    required:
      - pipelines
  v1alphaGetSourceConnectorDefinitionResponse:
    type: object
    properties:
      source_connector_definition:
        $ref: '#/definitions/v1alphaSourceConnectorDefinition'
        title: A SourceConnectorDefinition resource
    title: |-
      GetSourceConnectorDefinitionResponse represents a SourceConnectorDefinition
      response
  v1alphaGetSourceConnectorResponse:
    type: object
    properties:
      source_connector:
        $ref: '#/definitions/v1alphaSourceConnector'
        title: SourceConnector resource
    title: |-
      GetSourceConnectorResponse represents a response for a
      SourceConnector resource
  v1alphaGetTokenResponse:
    type: object
    properties:
      token:
        $ref: '#/definitions/v1alphaApiToken'
        title: An API token resource
    title: GetTokenResponse represents a response for an API token resource
  v1alphaGetTriggerAsyncOperationResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: The retrieved longrunning operation
        readOnly: true
    title: |-
      GetTriggerAsyncOperationResponse represents a response for a longrunning
      operation
  v1alphaGetUserAdminResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUser'
        title: A user resource
    title: GetUserAdminResponse represents a response for a user resource
  v1alphaHealthCheckRequest:
    type: object
    properties:
      service:
        type: string
        title: Service name to check for its readiness status
    title: HealthCheckRequest represents a request to health check a service
  v1alphaHealthCheckResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/HealthCheckResponseServingStatus'
        title: Status is the instance of the enum type ServingStatus
    title: HealthCheckResponse represents a response for a service heath status
  v1alphaInstanceSegmentationInput:
    type: object
    properties:
      image_url:
        type: string
        title: Image type URL
      image_base64:
        type: string
        title: Image type base64
    title: InstanceSegmentationInput represents the input of instance segmentation task
  v1alphaInstanceSegmentationInputStream:
    type: object
    properties:
      file_lengths:
        type: array
        items:
          type: string
          format: uint64
        title: The list of file length for each uploaded binary file
      content:
        type: string
        format: byte
        title: Content of images in bytes
    title: |-
      InstanceSegmentationInputStream represents the input of instance segmentation
      task when using stream method
    required:
      - file_lengths
      - content
  v1alphaInstanceSegmentationObject:
    type: object
    properties:
      rle:
        type: string
        title: Instance RLE segmentation mask
        readOnly: true
      category:
        type: string
        title: Instance category
        readOnly: true
      score:
        type: number
        format: float
        title: Instance score
        readOnly: true
      bounding_box:
        $ref: '#/definitions/v1alphaBoundingBox'
        title: Instance bounding box
        readOnly: true
    title: InstanceSegmentationObject corresponding to a instance segmentation object
  v1alphaInstanceSegmentationOutput:
    type: object
    properties:
      objects:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaInstanceSegmentationObject'
        title: A list of instance segmentation objects
        readOnly: true
    title: |-
      InstanceSegmentationOutput represents the output of instance segmentation
      task
  v1alphaKeypoint:
    type: object
    properties:
      x:
        type: number
        format: float
        title: x coordinate
        readOnly: true
      "y":
        type: number
        format: float
        title: y coordinate
        readOnly: true
      v:
        type: number
        format: float
        title: visibility
        readOnly: true
    title: Keypoint structure which include coordinate and keypoint visibility
  v1alphaKeypointInput:
    type: object
    properties:
      image_url:
        type: string
        title: Image type URL
      image_base64:
        type: string
        title: Image type base64
    title: KeypointInput represents the input of keypoint detection task
  v1alphaKeypointInputStream:
    type: object
    properties:
      file_lengths:
        type: array
        items:
          type: string
          format: uint64
        title: The list of file length for each uploaded binary file
      content:
        type: string
        format: byte
        title: Content of images in bytes
    title: |-
      KeypointInputStream represents the input of keypoint detection task when
      using stream method
    required:
      - file_lengths
      - content
  v1alphaKeypointObject:
    type: object
    properties:
      keypoints:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaKeypoint'
        title: Keypoints
        readOnly: true
      score:
        type: number
        format: float
        title: Keypoint score
        readOnly: true
      bounding_box:
        $ref: '#/definitions/v1alphaBoundingBox'
        title: Bounding box object
        readOnly: true
    title: KeypointObject corresponding to a person object
  v1alphaKeypointOutput:
    type: object
    properties:
      objects:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaKeypointObject'
        title: A list of keypoint objects
        readOnly: true
    title: KeypointOutput represents the output of keypoint detection task
  v1alphaListDestinationConnectorDefinitionsResponse:
    type: object
    properties:
      destination_connector_definitions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaDestinationConnectorDefinition'
        title: A list of DestinationConnectorDefinition resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: string
        format: int64
        title: Total count of DestinationConnectorDefinition resources
    title: |-
      ListDestinationConnectorDefinitionsResponse represents a response for a list
      of DestinationConnectorDefinitions
  v1alphaListDestinationConnectorsAdminResponse:
    type: object
    properties:
      destination_connectors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaDestinationConnector'
        title: A list of DestinationConnector resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: string
        format: int64
        title: Total count of connector resources
    title: |-
      ListDestinationConnectorsAdminResponse represents a response for a list of
      DestinationConnector resources
  v1alphaListDestinationConnectorsResponse:
    type: object
    properties:
      destination_connectors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaDestinationConnector'
        title: A list of DestinationConnector resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: string
        format: int64
        title: Total count of connector resources
    title: |-
      ListDestinationConnectorsResponse represents a response for a list of
      DestinationConnector resources
  v1alphaListModelDefinitionsResponse:
    type: object
    properties:
      model_definitions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaModelDefinition'
        title: a list of ModelDefinition instances
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: string
        format: int64
        title: Total count of model definitions
    title: |-
      ListModelDefinitionsResponse represents a response to list all supported
      model definitions
  v1alphaListModelsAdminResponse:
    type: object
    properties:
      models:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaModel'
        title: a list of Models
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: string
        format: int64
        title: Total count of models
    title: ListModelsAdminResponse represents a response for a list of models
  v1alphaListModelsResponse:
    type: object
    properties:
      models:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaModel'
        title: a list of Models
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: string
        format: int64
        title: Total count of models
    title: ListModelsResponse represents a response for a list of models
  v1alphaListPipelinesAdminResponse:
    type: object
    properties:
      pipelines:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPipeline'
        title: A list of pipeline resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: string
        format: int64
        title: Total count of pipeline resources
    title: |-
      ListPipelinesAdminResponse represents a response for a list of pipelines
      The recipe returned will be permaLinks instead of resourceName temporary,
      this will be refactored soon
  v1alphaListPipelinesResponse:
    type: object
    properties:
      pipelines:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPipeline'
        title: A list of pipeline resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: string
        format: int64
        title: Total count of pipeline resources
    title: ListPipelinesResponse represents a response for a list of pipelines
  v1alphaListSourceConnectorDefinitionsResponse:
    type: object
    properties:
      source_connector_definitions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaSourceConnectorDefinition'
        title: A list of SourceConnectorDefinition resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: string
        format: int64
        title: Total count of SourceConnectorDefinition resources
    title: |-
      ListSourceConnectorDefinitionsResponse represents a response for a list of
      SourceConnectorDefinitions
  v1alphaListSourceConnectorsAdminResponse:
    type: object
    properties:
      source_connectors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaSourceConnector'
        title: A list of SourceConnector resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: string
        format: int64
        title: Total count of connector resources
    title: |-
      ListSourceConnectorsAdminResponse represents a response for a list of
      SourceConnector resources
  v1alphaListSourceConnectorsResponse:
    type: object
    properties:
      source_connectors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaSourceConnector'
        title: A list of SourceConnector resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: string
        format: int64
        title: Total count of connector resources
    title: |-
      ListSourceConnectorsResponse represents a response for a list of
      SourceConnector resources
  v1alphaListTokensResponse:
    type: object
    properties:
      tokens:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaApiToken'
        title: A list of API tokens resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: string
        format: int64
        title: Total count of API tokens resources
    title: ListTokensResponse represents a response for a list of API tokens
  v1alphaListUsersAdminResponse:
    type: object
    properties:
      users:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaUser'
        title: A list of users
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: string
        format: int64
        title: Total count of users
    title: ListUsersAdminResponse represents a response for a list of users
  v1alphaLookUpDestinationConnectorAdminResponse:
    type: object
    properties:
      destination_connector:
        $ref: '#/definitions/v1alphaDestinationConnector'
        title: DestinationConnector resource
    title: |-
      LookUpDestinationConnectorAdminResponse represents a response for a
      destination connector
  v1alphaLookUpDestinationConnectorResponse:
    type: object
    properties:
      destination_connector:
        $ref: '#/definitions/v1alphaDestinationConnector'
        title: DestinationConnector resource
    title: |-
      LookUpDestinationConnectorResponse represents a response for a destination
      connector
  v1alphaLookUpModelAdminResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: A model resource
    title: LookUpModelResponse represents a response for a model
  v1alphaLookUpModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: A model resource
    title: LookUpModelResponse represents a response for a model
  v1alphaLookUpPipelineAdminResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1alphaPipeline'
        title: A pipeline resource
    title: LookUpPipelineAdminResponse represents a response for a pipeline resource
  v1alphaLookUpPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1alphaPipeline'
        title: A pipeline resource
    title: LookUpPipelineResponse represents a response for a pipeline resource
  v1alphaLookUpSourceConnectorAdminResponse:
    type: object
    properties:
      source_connector:
        $ref: '#/definitions/v1alphaSourceConnector'
        title: SourceConnector resource
    title: |-
      LookUpSourceConnectorAdminResponse represents a response for a source
      connector
  v1alphaLookUpSourceConnectorResponse:
    type: object
    properties:
      source_connector:
        $ref: '#/definitions/v1alphaSourceConnector'
        title: SourceConnector resource
    title: LookUpSourceConnectorResponse represents a response for a source connector
  v1alphaLookUpUserAdminResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUser'
        title: A user resource
    title: LookUpUserAdminResponse represents a response for a user resource by admin
  v1alphaMgmtUsageData:
    type: object
    properties:
      usages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaUser'
        title: Repeated user usage data
    title: Management service usage data
  v1alphaModel:
    type: object
    properties:
      name:
        type: string
        title: |-
          Resource name. It must have the format of "models/{model}".
          For example: "models/yolov4"
        readOnly: true
      uid:
        type: string
        title: Model ID in UUIDv4
        readOnly: true
      id:
        type: string
        description: |-
          Resource ID (the last segment of the resource name) used to construct the
          resource name. This conforms to RFC-1034, which restricts to letters,
          numbers, and hyphen, with the first character a letter, the last a letter
          or a number, and a 63 character maximum.
      description:
        type: string
        title: Model description
      model_definition:
        type: string
        title: Model definition resource name
      configuration:
        type: object
        title: |-
          Model configuration represents the configuration JSON that has been
          validated using the `model_spec` JSON schema of a ModelDefinition
      task:
        $ref: '#/definitions/ModelTask'
        title: Model task
        readOnly: true
      state:
        $ref: '#/definitions/v1alphaModelState'
        title: Model state
        readOnly: true
      visibility:
        $ref: '#/definitions/ModelVisibility'
        title: Model visibility including public or private
        readOnly: true
      user:
        type: string
        description: |-
          The resource name with UUID of a user, e.g.,
          "users/bfb978f8-78d3-4338-aa2b-a6c699cb07c5".
        readOnly: true
      org:
        type: string
        title: The resource name with UUID of an organization
        readOnly: true
      create_time:
        type: string
        format: date-time
        title: Model create time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: Model update time
        readOnly: true
    title: Model represents a model
  v1alphaModelCard:
    type: object
    properties:
      name:
        type: string
        title: |-
          Resource name. It must have the format of
          "models/{model}/readme"
        readOnly: true
      size:
        type: integer
        format: int32
        title: Size of the file
        readOnly: true
      type:
        type: string
        description: Type of the resource. Fixed to "file".
        readOnly: true
      content:
        type: string
        format: byte
        title: Content of the README file in bytes and base64 format
        readOnly: true
      encoding:
        type: string
        description: Encoding type of the content. Fixed to "base64".
        readOnly: true
    description: |-
      ModelCard represents the README card for a model. There
      exists one and exactly one README card per model.
  v1alphaModelData:
    type: object
    properties:
      uid:
        type: string
        title: Model unique id that is auto generated
      id:
        type: string
        title: Model id that is given by the users
      instance_id:
        type: string
        title: The id of the model instance that is deployed
      task:
        type: string
        title: The AI task supported by this model
    title: Pipeline records definition
    required:
      - uid
      - id
      - instance_id
      - task
  v1alphaModelDefinition:
    type: object
    properties:
      name:
        type: string
        title: |-
          ModelDefinition resource name. It must have the format of
          "model-definitions/{model-definition}"
        readOnly: true
      uid:
        type: string
        title: ModelDefinition ID in UUIDv4
        readOnly: true
      id:
        type: string
        description: |-
          ModelDefinition resource ID (the last segment of the resource name) used to
          construct the resource name.
        readOnly: true
      title:
        type: string
        title: ModelDefinition display official title
        readOnly: true
      documentation_url:
        type: string
        title: ModelDefinition documentation url
        readOnly: true
      icon:
        type: string
        title: ModelDefinition icon
        readOnly: true
      release_stage:
        $ref: '#/definitions/v1alphaReleaseStage'
        title: ModelDefinition release stage
        readOnly: true
      model_spec:
        type: object
        description: |-
          ModelDefinition model specification represents the JSON schema used to
          validate the JSON configurations of a model created from a specific model
          source. Must be a valid JSON that includes what fields are needed to
          create/display a model.
        readOnly: true
      create_time:
        type: string
        format: date-time
        title: ModelDefinition create time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: ModelDefinition update time
        readOnly: true
    title: |-
      /////////////////////////////////////////////////////////////////
      ModelDefinition represents the definition of a model
  v1alphaModelOutput:
    type: object
    properties:
      model:
        type: string
        title: The model
        readOnly: true
      task:
        $ref: '#/definitions/ModelTask'
        title: The task type
        readOnly: true
      task_outputs:
        type: array
        items:
          type: object
          $ref: '#/definitions/vdppipelinev1alphaTaskOutput'
        title: |-
          The extended task outputs based on the model inference (i.e.,
          from a trigger endpoint of model-backend)
        readOnly: true
    title: ModelOutput represents one model inference result
  v1alphaModelState:
    type: string
    enum:
      - STATE_UNSPECIFIED
      - STATE_OFFLINE
      - STATE_ONLINE
      - STATE_ERROR
    default: STATE_UNSPECIFIED
    description: |-
      - STATE_UNSPECIFIED: State: UNSPECIFIED
       - STATE_OFFLINE: State: OFFLINE
       - STATE_ONLINE: State: ONLINE
       - STATE_ERROR: State: ERROR
    title: State enumerates a model state
  v1alphaModelUsageData:
    type: object
    properties:
      usages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaModelUsageDataUserUsageData'
        title: Usage data of all users in the model service
    title: Model service usage data
  v1alphaModelUsageDataUserUsageData:
    type: object
    properties:
      user_uid:
        type: string
        title: User UUID
      model_online_state_num:
        type: string
        format: int64
        title: Number of 'online' models
      model_offline_state_num:
        type: string
        format: int64
        title: Number of 'offline' models
      model_definition_ids:
        type: array
        items:
          type: string
        description: |-
          Definition IDs of the model. Element in the list
          should not be duplicated.
      tasks:
        type: array
        items:
          $ref: '#/definitions/ModelTask'
        description: |-
          Tasks of the models. Element in the list should not be
          duplicated.
      test_num:
        type: string
        format: int64
        title: Number of model testing operations
    title: Per user usage data in the model service
    required:
      - user_uid
      - model_online_state_num
      - model_offline_state_num
      - model_definition_ids
      - tasks
      - test_num
  v1alphaModelUsageRecord:
    type: object
    properties:
      deploy_time:
        type: string
        format: date-time
        title: Time when the model is ONLINE
      record_time:
        type: string
        format: date-time
        title: Time when model online usage is recorded
      value:
        type: string
        format: int64
        title: |-
          The model online usage record that is logged in cumulative manner. This
          value records the cumulative usage since model is online in the current
          billing period
    title: Model online usage record definition
    required:
      - deploy_time
      - record_time
      - value
  v1alphaNullMessage:
    type: object
    title: Nul Message for gRPC REQ/RES
  v1alphaOcrInput:
    type: object
    properties:
      image_url:
        type: string
        title: Image type URL
      image_base64:
        type: string
        title: Image type base64
    title: OcrInput represents the input of ocr task
  v1alphaOcrInputStream:
    type: object
    properties:
      file_lengths:
        type: array
        items:
          type: string
          format: uint64
        title: The list of file length for each uploaded binary file
      content:
        type: string
        format: byte
        title: Content of images in bytes
    title: OcrInputStream represents the input of ocr task when using stream method
    required:
      - file_lengths
      - content
  v1alphaOcrObject:
    type: object
    properties:
      text:
        type: string
        title: OCR text
        readOnly: true
      score:
        type: number
        format: float
        title: OCR text score
        readOnly: true
      bounding_box:
        $ref: '#/definitions/v1alphaBoundingBox'
        title: OCR bounding box
        readOnly: true
    title: OcrObject represents a predicted ocr object
  v1alphaOcrOutput:
    type: object
    properties:
      objects:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaOcrObject'
        title: A list of OCR objects
        readOnly: true
    title: OcrOutput represents the output of ocr task
  v1alphaOwnerType:
    type: string
    enum:
      - OWNER_TYPE_UNSPECIFIED
      - OWNER_TYPE_USER
      - OWNER_TYPE_ORGANIZATION
    default: OWNER_TYPE_UNSPECIFIED
    description: |-
      - OWNER_TYPE_UNSPECIFIED: OwnerType: UNSPECIFIED
       - OWNER_TYPE_USER: OwnerType: USER
       - OWNER_TYPE_ORGANIZATION: OwnerType: ORGANIZATION
    title: OwnerType enumerates the owner type of any resource
  v1alphaPatchAuthenticatedUserResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUser'
        title: A user resource
    title: |-
      PatchAuthenticatedUserResponse represents a response for
      the authenticated user resource
  v1alphaPipeline:
    type: object
    properties:
      name:
        type: string
        title: Pipeline resource name. It must have the format of "pipelines/*"
        readOnly: true
      uid:
        type: string
        title: Pipeline UUID
        readOnly: true
      id:
        type: string
        description: |-
          Pipeline resource ID (the last segment of the resource name) used to
          construct the resource name. This conforms to RFC-1034, which restricts to
          letters, numbers, and hyphen, with the first character a letter, the last a
          letter or a number, and a 63 character maximum.
      description:
        type: string
        title: Pipeline description
      recipe:
        $ref: '#/definitions/v1alphaRecipe'
        title: Pipeline recipe
      mode:
        $ref: '#/definitions/PipelineMode'
        title: Pipeline mode
        readOnly: true
      state:
        $ref: '#/definitions/v1alphaPipelineState'
        title: Pipeline state
        readOnly: true
      user:
        type: string
        description: |-
          The resource name with UUID of a user, e.g.,
          "users/bfb978f8-78d3-4338-aa2b-a6c699cb07c5".
        readOnly: true
      org:
        type: string
        title: The resource name with UUID of an organization
        readOnly: true
      create_time:
        type: string
        format: date-time
        title: Pipeline creation time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: Pipeline update time
        readOnly: true
    title: Pipeline represents the content of a pipeline
  v1alphaPipelineData:
    type: object
    properties:
      uid:
        type: string
        title: Pipeline unique id that is auto generated
      id:
        type: string
        title: Pipeline id assigned by users
      task:
        type: string
        title: Pipeline task indicate the AI task this pipeline supports
    title: Pipeline records definition
    required:
      - uid
      - id
      - task
  v1alphaPipelineState:
    type: string
    enum:
      - STATE_UNSPECIFIED
      - STATE_INACTIVE
      - STATE_ACTIVE
      - STATE_ERROR
    default: STATE_UNSPECIFIED
    description: |-
      - STATE_UNSPECIFIED: State: UNSPECIFIED
       - STATE_INACTIVE: State INACTIVE indicates the pipeline is inactive
       - STATE_ACTIVE: State ACTIVE indicates the pipeline is active
       - STATE_ERROR: State ERROR indicates the pipeline has error
    title: State enumerates the state of a pipeline
  v1alphaPipelineUsageData:
    type: object
    properties:
      usages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPipelineUsageDataUserUsageData'
        title: Usage data of all users in the pipeline service
    title: Pipeline service usage data
  v1alphaPipelineUsageDataUserUsageData:
    type: object
    properties:
      user_uid:
        type: string
        title: User UUID
      pipeline_active_state_num:
        type: string
        format: int64
        title: Number of pipelines with 'active' state
      pipeline_inactive_state_num:
        type: string
        format: int64
        title: Number of pipelines with 'inactive' state
      pipeline_async_mode_num:
        type: string
        format: int64
        title: Number of pipelines with 'async' mode
      pipeline_sync_mode_num:
        type: string
        format: int64
        title: Number of pipelines with 'sync' mode
      trigger_num:
        type: string
        format: int64
        title: Number of pipeline triggering operations
    title: Per user usage data in the pipeline service
    required:
      - user_uid
      - pipeline_active_state_num
      - pipeline_inactive_state_num
      - pipeline_async_mode_num
      - pipeline_sync_mode_num
      - trigger_num
  v1alphaPipelineUsageRecord:
    type: object
    properties:
      request_id:
        type: string
        description: A unique request id given by vdp when trigger the pipeline.
      operation_id:
        type: string
        title: A unique operation id given by vdp
      status:
        type: string
        title: The HTTP status received when user trigger the pipeline
      trigger_time:
        type: string
        format: date-time
        title: Time when the pipeline is triggered
      record_time:
        type: string
        format: date-time
        title: Time when the pipeline trigger usage is recorded
      value:
        type: string
        format: int64
        title: |-
          The pipeline trigger usage record. The unit of the usage should be
          consistent with Stripe
    title: Pipeline trigger usage record definition
    required:
      - request_id
      - operation_id
      - status
      - trigger_time
      - record_time
      - value
  v1alphaPriceData:
    type: object
    properties:
      time:
        $ref: '#/definitions/v1alphaTimeInterval'
        title: Time when the price record is generated
      currency:
        type: string
        title: The currency of the price
        readOnly: true
      amount:
        type: number
        format: float
        title: The price of the query usage in the current billing period
        readOnly: true
    title: Pricing information
    required:
      - time
  v1alphaPublishModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: Published model
    title: PublishModelResponse represents a response for the published model
  v1alphaQueryAuthenticatedUserResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUser'
        title: A user resource
    title: |-
      QueryAuthenticatedUserResponse represents a response for
      the authenticated user resource
  v1alphaRecipe:
    type: object
    properties:
      version:
        type: string
        title: Recipe schema version
      components:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaComponent'
        title: List of pipeline components
    title: Pipeline represents a pipeline recipe
  v1alphaReleaseStage:
    type: string
    enum:
      - RELEASE_STAGE_UNSPECIFIED
      - RELEASE_STAGE_ALPHA
      - RELEASE_STAGE_BETA
      - RELEASE_STAGE_GENERALLY_AVAILABLE
      - RELEASE_STAGE_CUSTOM
    default: RELEASE_STAGE_UNSPECIFIED
    description: |-
      - RELEASE_STAGE_UNSPECIFIED: ReleaseStage: UNSPECIFIED
       - RELEASE_STAGE_ALPHA: ReleaseStage: ALPHA
       - RELEASE_STAGE_BETA: ReleaseStage: BETA
       - RELEASE_STAGE_GENERALLY_AVAILABLE: ReleaseStage: GENERALLY_AVAILABLE
       - RELEASE_STAGE_CUSTOM: ReleaseStage: CUSTOM
    title: ReleaseStage enumerates the release stages
  v1alphaRenameDestinationConnectorResponse:
    type: object
    properties:
      destination_connector:
        $ref: '#/definitions/v1alphaDestinationConnector'
        title: A DestinationConnector resource
    title: |-
      RenameDestinationConnectorResponse represents a renamed DestinationConnector
      resource
  v1alphaRenameModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: Renamed model
    title: RenameModelResponse represents a response for a model
  v1alphaRenamePipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1alphaPipeline'
        title: A pipeline resource
    title: RenamePipelineResponse represents a renamed pipeline resource
  v1alphaRenameSourceConnectorResponse:
    type: object
    properties:
      source_connector:
        $ref: '#/definitions/v1alphaSourceConnector'
        title: A SourceConnector resource
    title: RenameSourceConnectorResponse represents a renamed SourceConnector resource
  v1alphaReportModelOnlineRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUserData'
        title: User information
      model:
        $ref: '#/definitions/v1alphaModelData'
        title: Model information
      cum_usage_record:
        $ref: '#/definitions/v1alphaModelUsageRecord'
        title: Model online record
    title: |-
      ReportModelOnlineRequest represents a request for reporting a model-online
      record
    required:
      - user
      - model
      - cum_usage_record
  v1alphaReportModelOnlineResponse:
    type: object
    properties:
      "null":
        $ref: '#/definitions/v1alphaNullMessage'
        title: Null message for empty response
    title: |-
      ReportModelOnlineResponse represents a respond to a model-online-record
      report request
  v1alphaReportModelOnlinesResponse:
    type: object
    properties:
      "null":
        $ref: '#/definitions/v1alphaNullMessage'
        title: Null message for empty response
    title: |-
      ReportModelOnlinesResponse represents a respond to a model-online-records
      reporting bulk request
  v1alphaReportPipelineTriggerRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUserData'
        title: User information
      pipeline:
        $ref: '#/definitions/v1alphaPipelineData'
        title: Pipeline information
      usage_record:
        $ref: '#/definitions/v1alphaPipelineUsageRecord'
        title: Pipeline trigger record
    title: |-
      ReportPipelineTriggerRequest represents a request for reporting a
      pipeline-trigger record
    required:
      - user
      - pipeline
      - usage_record
  v1alphaReportPipelineTriggerResponse:
    type: object
    properties:
      "null":
        $ref: '#/definitions/v1alphaNullMessage'
        title: Null message for empty response
    title: |-
      ReportPipelineTriggerResponse represents a respond to a
      pipeline-trigger-record report request
  v1alphaReportPipelineTriggersResponse:
    type: object
    properties:
      "null":
        $ref: '#/definitions/v1alphaNullMessage'
        title: Null message for empty response
    title: |-
      ReportPipelineTriggersResponse represents a respond to a
      pipeline-trigger-records reporting bulk request
  v1alphaSemanticSegmentationInput:
    type: object
    properties:
      image_url:
        type: string
        title: Image type URL
      image_base64:
        type: string
        title: Image type base64
    title: SemanticSegmentationInput represents the input of semantic segmentation task
  v1alphaSemanticSegmentationInputStream:
    type: object
    properties:
      file_lengths:
        type: array
        items:
          type: string
          format: uint64
        title: The list of file length for each uploaded binary file
      content:
        type: string
        format: byte
        title: Content of images in bytes
    title: |-
      SemanticSegmentationInputStream represents the input of semantic segmentation
      task when using stream method
    required:
      - file_lengths
      - content
  v1alphaSemanticSegmentationOutput:
    type: object
    properties:
      stuffs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaSemanticSegmentationStuff'
        title: A list of semantic segmentation stuffs
        readOnly: true
    title: |-
      SemanticSegmentationOutput represents the output of semantic segmentation
      task
  v1alphaSemanticSegmentationStuff:
    type: object
    properties:
      rle:
        type: string
        title: RLE segmentation mask
        readOnly: true
      category:
        type: string
        title: Stuff category
        readOnly: true
    title: SemanticSegmentationStuff corresponding to a semantic segmentation stuff
  v1alphaSendSessionReportResponse:
    type: object
    title: SendReportResponse represents an empty response
  v1alphaSession:
    type: object
    properties:
      name:
        type: string
        title: Resource name in the format of 'sessions/uid'
        readOnly: true
      uid:
        type: string
        title: Resource UUID
        readOnly: true
      service:
        $ref: '#/definitions/SessionService'
        title: name of the service to collect data from
      edition:
        type: string
        title: 'Session edition, allowed values include: ''local-ce'' and ''local-ce:dev'''
      version:
        type: string
        title: Version of the service
      arch:
        type: string
        title: Architecture of the system
      os:
        type: string
        title: Operating system
      uptime:
        type: string
        format: int64
        title: Session service uptime
      report_time:
        type: string
        format: date-time
        title: Report time
      token:
        type: string
        description: |-
          Token to send report. The token is generated by the server and sent to
          the client. Client needs to use the token to send report to the server.
        readOnly: true
      create_time:
        type: string
        format: date-time
        title: Session creation time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: Session update time
        readOnly: true
    title: |-
      Session represents a unique session whenever a new instance of VDP service
      gets started. The usage server returns a token that should be used as part of
      the challenge when sending a report with data collected from this session
    required:
      - service
      - edition
      - version
      - arch
      - os
      - uptime
      - report_time
  v1alphaSessionReport:
    type: object
    properties:
      session_uid:
        type: string
        title: Session uid
      token:
        type: string
        title: Session token
      pow:
        type: string
        title: Proof-of-work See https://en.wikipedia.org/wiki/Proof_of_work
      session:
        $ref: '#/definitions/v1alphaSession'
        title: Session
      mgmt_usage_data:
        $ref: '#/definitions/v1alphaMgmtUsageData'
        title: Management service usage data
      connector_usage_data:
        $ref: '#/definitions/v1alphaConnectorUsageData'
        title: Connector service usage data
      model_usage_data:
        $ref: '#/definitions/v1alphaModelUsageData'
        title: Model service usage data
      pipeline_usage_data:
        $ref: '#/definitions/v1alphaPipelineUsageData'
        title: Pipeline service usage data
    title: |-
      SessionReport represents a report to be sent to the server that includes the
      usage data of a session
    required:
      - session_uid
      - token
      - pow
      - session
  v1alphaSourceConnector:
    type: object
    properties:
      name:
        type: string
        title: |-
          SourceConnector resource name. It must have the format of
          "source-connectors/*"
        readOnly: true
      uid:
        type: string
        title: SourceConnector UUID
        readOnly: true
      id:
        type: string
        description: |-
          SourceConnector resource ID (the last segment of the resource name) used to
          construct the resource name. This conforms to RFC-1034, which restricts to
          letters, numbers, and hyphen, with the first character a letter, the last a
          letter or a number, and a 63 character maximum.
      source_connector_definition:
        type: string
        title: SourceConnectorDefinition resource
      connector:
        $ref: '#/definitions/v1alphaConnector'
        title: SourceConnector's connector data structure
    title: SourceConnector represents a source connector resource
    required:
      - connector
  v1alphaSourceConnectorDefinition:
    type: object
    properties:
      name:
        type: string
        title: |-
          SourceConnectorDefinition resource name. It must have the format of
          "connector-definitions/*"
        readOnly: true
      uid:
        type: string
        title: SourceConnectorDefinition UUID
        readOnly: true
      id:
        type: string
        description: |-
          SourceConnectorDefinition resource ID (the last segment of the resource
          name) used to construct the resource name. This conforms to RFC-1034, which
          restricts to letters, numbers, and hyphen, with the first character a
          letter, the last a letter or a number, and a 63 character maximum.
      connector_definition:
        $ref: '#/definitions/v1alphaConnectorDefinition'
        title: SourceConnectorDefinition connector definition
        readOnly: true
    title: SourceConnectorDefinition represents the source connector definition resource
  v1alphaSpec:
    type: object
    properties:
      documentation_url:
        type: string
        title: Spec documentation URL
        readOnly: true
      connection_specification:
        type: object
        title: Spec connection specification
    title: |-
      //////////////////////////////////
      Spec represents a spec data model
    required:
      - connection_specification
  v1alphaTaskInput:
    type: object
    properties:
      classification:
        $ref: '#/definitions/v1alphaClassificationInput'
        title: The classification input
      detection:
        $ref: '#/definitions/v1alphaDetectionInput'
        title: The detection input
      keypoint:
        $ref: '#/definitions/v1alphaKeypointInput'
        title: The keypoint input
      ocr:
        $ref: '#/definitions/v1alphaOcrInput'
        title: The ocr input
      instance_segmentation:
        $ref: '#/definitions/v1alphaInstanceSegmentationInput'
        title: The instance segmentation input
      semantic_segmentation:
        $ref: '#/definitions/v1alphaSemanticSegmentationInput'
        title: The semantic segmentation input
      text_to_image:
        $ref: '#/definitions/v1alphaTextToImageInput'
        title: The text to image input
      text_generation:
        $ref: '#/definitions/v1alphaTextGenerationInput'
        title: The text generation input
      unspecified:
        $ref: '#/definitions/v1alphaUnspecifiedInput'
        title: The unspecified task input
    title: Input represents the input to trigger a model
  v1alphaTaskInputStream:
    type: object
    properties:
      classification:
        $ref: '#/definitions/v1alphaClassificationInputStream'
        title: The classification input
      detection:
        $ref: '#/definitions/v1alphaDetectionInputStream'
        title: The detection input
      keypoint:
        $ref: '#/definitions/v1alphaKeypointInputStream'
        title: The keypoint input
      ocr:
        $ref: '#/definitions/v1alphaOcrInputStream'
        title: The ocr input
      instance_segmentation:
        $ref: '#/definitions/v1alphaInstanceSegmentationInputStream'
        title: The instance segmentation input
      semantic_segmentation:
        $ref: '#/definitions/v1alphaSemanticSegmentationInputStream'
        title: The semantic segmentation input
      text_to_image:
        $ref: '#/definitions/v1alphaTextToImageInput'
        title: The text to image input
      text_generation:
        $ref: '#/definitions/v1alphaTextGenerationInput'
        title: The text generation input
      unspecified:
        $ref: '#/definitions/v1alphaUnspecifiedInput'
        title: The unspecified task input
    title: TaskInputStream represents the input to trigger a model with stream method
  v1alphaTestDestinationConnectorResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1alphaConnectorState'
        title: Retrieved connector state
    title: |-
      TestDestinationConnectorResponse represents a response containing a
      destination connector's current state
  v1alphaTestModelBinaryFileUploadResponse:
    type: object
    properties:
      task:
        $ref: '#/definitions/ModelTask'
        title: The task type
      task_outputs:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelmodelv1alphaTaskOutput'
        title: The task output from a model
    title: |-
      TestModelBinaryFileUploadResponse represents a response for the
      output for testing a model
    required:
      - task
      - task_outputs
  v1alphaTestModelResponse:
    type: object
    properties:
      task:
        $ref: '#/definitions/ModelTask'
        title: The task type
      task_outputs:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelmodelv1alphaTaskOutput'
        title: The task output from a model
    title: |-
      TestModelResponse represents a response for the output for
      testing a model
    required:
      - task
      - task_outputs
  v1alphaTestSourceConnectorResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1alphaConnectorState'
        title: Retrieved connector state
    title: |-
      TestSourceConnectorResponse represents a response containing a source
      connector's current state
  v1alphaTextGenerationInput:
    type: object
    properties:
      prompt:
        type: string
        title: The prompt text
      output_len:
        type: string
        format: int64
        title: The maximum number of tokens for model to generate
      bad_words_list:
        type: string
        title: The words not to avoid being generated by the model
      stop_words_list:
        type: string
        title: The trigger words to stop generation
      topk:
        type: string
        format: int64
        title: Top k for sampling
      seed:
        type: string
        format: int64
        title: The seed
    title: TextGenerationInput represents the input of text generation task
    required:
      - prompt
  v1alphaTextGenerationOutput:
    type: object
    properties:
      text:
        type: string
        title: The text generated by the model
        readOnly: true
    title: TextGenerationOutput represents the output of text generation task
  v1alphaTextToImageInput:
    type: object
    properties:
      prompt:
        type: string
        title: The prompt text
      steps:
        type: string
        format: int64
        title: The steps, default is 5
      cfg_scale:
        type: number
        format: float
        title: The guidance scale, default is 7.5
      seed:
        type: string
        format: int64
        title: The seed, default is 0
      samples:
        type: string
        format: int64
        title: The number of generated samples, default is 1
    title: TextToImageInput represents the input of text to image task
    required:
      - prompt
  v1alphaTextToImageOutput:
    type: object
    properties:
      images:
        type: array
        items:
          type: string
        title: List of generated images
        readOnly: true
    title: TextToImageOutput represents the output of text to image task
  v1alphaTimeInterval:
    type: object
    properties:
      start_time:
        type: string
        format: date-time
        title: Start time of the interval
      end_time:
        type: string
        format: date-time
        title: End time of the interval
    title: Time interval
    required:
      - start_time
      - end_time
  v1alphaTriggerAsyncPipelineBinaryFileUploadResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: Trigger async pipeline operation message
        readOnly: true
      data_mapping_indices:
        type: array
        items:
          type: string
        title: The data mapping indices for each input
        readOnly: true
    title: |-
      TriggerAsyncPipelineBinaryFileUploadResponse represents a response for the
      longrunning operation of a pipeline
  v1alphaTriggerAsyncPipelineResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: Trigger async pipeline operation message
        readOnly: true
      data_mapping_indices:
        type: array
        items:
          type: string
        title: The data mapping indices for each input
        readOnly: true
    title: |-
      TriggerAsyncPipelineResponse represents a response for the longrunning
      operation of a pipeline
  v1alphaTriggerModelBinaryFileUploadResponse:
    type: object
    properties:
      task:
        $ref: '#/definitions/ModelTask'
        title: The task type
      task_outputs:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelmodelv1alphaTaskOutput'
        title: The task output from a model
    title: |-
      TriggerModelBinaryFileUploadResponse represents a response for the
      output for testing a model
    required:
      - task
      - task_outputs
  v1alphaTriggerModelResponse:
    type: object
    properties:
      task:
        $ref: '#/definitions/ModelTask'
        title: The task type
      task_outputs:
        type: array
        items:
          type: object
          $ref: '#/definitions/modelmodelv1alphaTaskOutput'
        title: The task output from a model
    title: |-
      TriggerModelResponse represents a response for the output for
      triggering a model
  v1alphaTriggerSyncPipelineBinaryFileUploadResponse:
    type: object
    properties:
      data_mapping_indices:
        type: array
        items:
          type: string
        title: The data mapping indices stores UUID for each input
      model_outputs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaModelOutput'
        title: The multiple model inference outputs
    title: |-
      TriggerSyncPipelineBinaryFileUploadResponse represents a response for the
      output of a pipeline, i.e., the multiple model inference outputs
  v1alphaTriggerSyncPipelineResponse:
    type: object
    properties:
      data_mapping_indices:
        type: array
        items:
          type: string
        title: The data mapping indices stores UUID for each input
      model_outputs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaModelOutput'
        title: The multiple model inference outputs
    title: |-
      TriggerSyncPipelineResponse represents a response for the output
      of a pipeline, i.e., the multiple model inference outputs
  v1alphaUndeployModelResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: Undeploy operation message
    title: UndeployModelResponse represents a response for a undeployed model
  v1alphaUnpublishModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: Unpublished model
    title: UnpublishModelResponse represents a response for the unpublished model
  v1alphaUnspecifiedInput:
    type: object
    properties:
      raw_inputs:
        type: array
        items:
          type: object
        title: A list of unspecified task inputs
    title: UnspecifiedInput represents the input of unspecified task
  v1alphaUnspecifiedOutput:
    type: object
    properties:
      raw_outputs:
        type: array
        items:
          type: object
        title: A list of unspecified task outputs
        readOnly: true
    title: UnspecifiedOutput represents the output of unspecified task
  v1alphaUpdateDestinationConnectorResponse:
    type: object
    properties:
      destination_connector:
        $ref: '#/definitions/v1alphaDestinationConnector'
        title: DestinationConnector resource
    title: |-
      UpdateDestinationConnectorResponse represents a response for a
      DestinationConnector resource
  v1alphaUpdateModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: The updated model
    title: UpdateModelResponse represents a response for a model
  v1alphaUpdatePipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1alphaPipeline'
        title: An updated pipeline resource
    title: UpdatePipelineResponse represents a response for a pipeline resource
  v1alphaUpdateSourceConnectorResponse:
    type: object
    properties:
      source_connector:
        $ref: '#/definitions/v1alphaSourceConnector'
        title: SourceConnector resource
    title: |-
      UpdateSourceConnectorResponse represents a response for a
      SourceConnector resource
  v1alphaUpdateUserAdminResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUser'
        title: A user resource
    title: UpdateUserAdminResponse represents a response for a user resource
  v1alphaUsageSummary:
    type: object
    properties:
      time:
        type: string
        format: date-time
        title: Time when the summary is generated
      value:
        type: string
        format: int64
        title: The total usage since the beginning of the current billing period
    title: Usage summary definition
    required:
      - time
      - value
  v1alphaUser:
    type: object
    properties:
      name:
        type: string
        description: |-
          Resource name. It must have the format of "users/*".
          For example: "users/local-user".
        readOnly: true
      uid:
        type: string
        description: |-
          User ID in UUIDv4. This field is optionally set by users
          (optional on resource creation, server-generated if unset).
      id:
        type: string
        description: |-
          Resource ID (the last segment of the resource name), also the user
          username. This conforms to RFC-1034, which restricts to letters, numbers,
          and hyphen, with the first character a letter, the last a letter or a
          number, and a 63 character maximum.
          Note that the ID can be updated.
      type:
        $ref: '#/definitions/v1alphaOwnerType'
        title: 'Owner type: fixed to `OWNER_TYPE_USER`'
        readOnly: true
      create_time:
        type: string
        format: date-time
        title: User creation time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: User update time
        readOnly: true
      email:
        type: string
        title: User email
      customer_id:
        type: string
        description: Stripe customer ID. This field is used in Instill Cloud.
        readOnly: true
      first_name:
        type: string
        title: User first name
      last_name:
        type: string
        title: User last name
      org_name:
        type: string
        title: User company or institution name
      role:
        type: string
        title: |-
          User role. Allowed roles:
           - "manager"
           - "ai-researcher"
           - "ai-engineer"
           - "data-engineer",
           - "data-scientist",
           - "analytics-engineer"
           - "hobbyist"
      newsletter_subscription:
        type: boolean
        title: User newsletter subscription
      cookie_token:
        type: string
        title: User console cookie token
    title: User represents the content of a user
    required:
      - id
      - email
      - newsletter_subscription
  v1alphaUserData:
    type: object
    properties:
      uid:
        type: string
        title: User unique id
      name:
        type: string
        title: User name, which is not necessary for service queries
    title: User records definition
    required:
      - uid
  v1alphaWatchDestinationConnectorResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1alphaConnectorState'
        title: Retrieved connector state
    title: |-
      WatchDestinationConnectorResponse represents a response to fetch a
      destination connector's current state
  v1alphaWatchModelResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1alphaModelState'
        title: Retrieved model state
      progress:
        type: integer
        format: int32
        title: Retrieved model logrunning progress
    title: |-
      WatchModelResponse represents a public response to
      fetch a model current state and longrunning progress
  v1alphaWatchPipelineResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1alphaPipelineState'
        title: Retrieved pipeline state
    title: |-
      WatchPipelineResponse represents a response to fetch a pipeline's
      current state
  v1alphaWatchSourceConnectorResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1alphaConnectorState'
        title: Retrieved connector state
    title: |-
      WatchSourceConnectorResponse represents a response to fetch a source
      connector's current state
  vdpconnectorv1alphaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  vdpconnectorv1alphaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  vdpconnectorv1alphaView:
    type: string
    enum:
      - VIEW_UNSPECIFIED
      - VIEW_BASIC
      - VIEW_FULL
    default: VIEW_UNSPECIFIED
    description: |-
      - VIEW_UNSPECIFIED: View: UNSPECIFIED
       - VIEW_BASIC: View: BASIC
       - VIEW_FULL: View: FULL
    title: View enumerates the definition views
  vdpcontrollerv1alphaDeleteResourceResponse:
    type: object
    title: DeleteResourceResponse represents an empty response
  vdpcontrollerv1alphaGetResourceResponse:
    type: object
    properties:
      resource:
        $ref: '#/definitions/vdpcontrollerv1alphaResource'
        title: Retrieved resource state
    title: GetResourceResponse represents a response to fetch a resource's state
  vdpcontrollerv1alphaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  vdpcontrollerv1alphaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  vdpcontrollerv1alphaResource:
    type: object
    properties:
      resource_permalink:
        type: string
        title: |-
          Permalink of a resouce. For example:
          "resources/{resource_uuid}/types/{type}"
      pipeline_state:
        $ref: '#/definitions/v1alphaPipelineState'
        title: Pipeline state
      connector_state:
        $ref: '#/definitions/v1alphaConnectorState'
        title: Connector state
      backend_state:
        $ref: '#/definitions/HealthCheckResponseServingStatus'
        title: Backend service state
      progress:
        type: integer
        format: int32
        title: Resource longrunning progress
    title: Resource represents the current information of a resource
    required:
      - resource_permalink
  vdpcontrollerv1alphaUpdateResourceResponse:
    type: object
    properties:
      resource:
        $ref: '#/definitions/vdpcontrollerv1alphaResource'
        title: Updated resource state
    title: UpdateResourceResponse represents a response to update a resource's state
  vdppipelinev1alphaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  vdppipelinev1alphaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  vdppipelinev1alphaTaskOutput:
    type: object
    properties:
      index:
        type: string
        title: The index of input data in a batch
        readOnly: true
      classification:
        $ref: '#/definitions/v1alphaClassificationOutput'
        title: The classification output
        readOnly: true
      detection:
        $ref: '#/definitions/v1alphaDetectionOutput'
        title: The detection output
        readOnly: true
      keypoint:
        $ref: '#/definitions/v1alphaKeypointOutput'
        title: The keypoint output
        readOnly: true
      ocr:
        $ref: '#/definitions/v1alphaOcrOutput'
        title: The ocr output
        readOnly: true
      instance_segmentation:
        $ref: '#/definitions/v1alphaInstanceSegmentationOutput'
        title: The instance segmentation output
        readOnly: true
      semantic_segmentation:
        $ref: '#/definitions/v1alphaSemanticSegmentationOutput'
        title: The semantic segmentation output
        readOnly: true
      text_to_image:
        $ref: '#/definitions/v1alphaTextToImageOutput'
        title: The text to image output
        readOnly: true
      text_generation:
        $ref: '#/definitions/v1alphaTextGenerationOutput'
        title: The text generation
        readOnly: true
      unspecified:
        $ref: '#/definitions/v1alphaUnspecifiedOutput'
        title: The unspecified task output
        readOnly: true
    description: |-
      TaskOutput represents the output of a CV Task result from a
      model, extended from model.v1alpha.TaskOutput.
      Here we don't use a model.v1alpha.TaskOutput type field but explicitly use
      the replicated oneof field because we want the CV Task output to be at the
      same message layer like the trigger output of model.
  vdppipelinev1alphaView:
    type: string
    enum:
      - VIEW_UNSPECIFIED
      - VIEW_BASIC
      - VIEW_FULL
    default: VIEW_UNSPECIFIED
    description: |-
      View represents a view of any resource. The resource view is implemented by
      adding a parameter to the method request which allows the client to specify
      which view of the resource it wants to receive in the response.

       - VIEW_UNSPECIFIED: View: UNSPECIFIED
       - VIEW_BASIC: View: BASIC
       - VIEW_FULL: View: FULL
