swagger: "2.0"
info:
  title: base/metric/v1alpha/metric.proto
  version: version not set
tags:
  - name: PipelineService
  - name: ModelService
  - name: MgmtPrivateService
  - name: MgmtPublicService
  - name: UsageService
  - name: ControllerPrivateService
  - name: ModelPrivateService
  - name: ModelPublicService
  - name: ConnectorPrivateService
  - name: ConnectorPublicService
  - name: ControllerPrivateService
  - name: PipelinePrivateService
  - name: PipelinePublicService
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1alpha/__liveness:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: PipelinePublicService_Liveness
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/vdppipelinev1alphaLivenessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - PipelinePublicService
  /v1alpha/__readiness:
    get:
      summary: |-
        Readiness method receives a ReadinessRequest message and returns a
        ReadinessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: PipelinePublicService_Readiness
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/vdppipelinev1alphaReadinessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - PipelinePublicService
  /v1alpha/{connector_definition.name}:
    get:
      summary: |-
        GetConnectorDefinition method receives a
        GetConnectorDefinitionRequest message and returns a
        GetGetConnectorDefinitionResponse message.
      operationId: ConnectorPublicService_GetConnectorDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetConnectorDefinitionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: connector_definition.name
          description: |-
            ConnectorDefinition resource name. It must have the format of
            "connector-definitions/*"
          in: path
          required: true
          type: string
          pattern: connector-definitions/[^/]+
        - name: view
          description: |-
            ConnectorDefinition resource view (default is
            DEFINITION_VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
             - VIEW_CONFIGURATION: View: CONFIGURATION
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_CONFIGURATION
          default: VIEW_UNSPECIFIED
      tags:
        - ConnectorPublicService
  /v1alpha/{connector_resource.name}:
    get:
      summary: |-
        GetUserConnectorResource method receives a GetUserConnectorResourceRequest
        message and returns a GetUserConnectorResourceResponse message.
      operationId: ConnectorPublicService_GetUserConnectorResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetUserConnectorResourceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: connector_resource.name
          description: |-
            ConnectorResourceConnectorResource resource name. It must have the format of
            "connector-resources/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connector-resources/[^/]+
        - name: view
          description: |-
            ConnectorResource view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
             - VIEW_CONFIGURATION: View: CONFIGURATION
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_CONFIGURATION
          default: VIEW_UNSPECIFIED
      tags:
        - ConnectorPublicService
    delete:
      summary: |-
        DeleteUserConnectorResource method receives a
        DeleteUserConnectorResourceRequest message and returns a
        DeleteUserConnectorResourceResponse message.
      operationId: ConnectorPublicService_DeleteUserConnectorResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeleteUserConnectorResourceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: connector_resource.name
          description: |-
            ConnectorResource resource name. It must have the format of
            "connector-resources/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connector-resources/[^/]+
      tags:
        - ConnectorPublicService
    patch:
      summary: |-
        UpdateUserConnectorResource method receives a
        UpdateUserConnectorResourceRequest message and returns a
        UpdateUserConnectorResourceResponse message.
      operationId: ConnectorPublicService_UpdateUserConnectorResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUpdateUserConnectorResourceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: connector_resource.name
          description: |-
            ConnectorResource resource name. It must have the format of
            "connector-resources/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connector-resources/[^/]+
        - name: connector_resource
          description: ConnectorResource resource
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                title: ConnectorResource UUID
                readOnly: true
              id:
                type: string
                description: |-
                  ConnectorResource resource ID (the last segment of the resource name)
                  used to construct the resource name. This conforms to RFC-1034, which
                  restricts to letters, numbers, and hyphen, with the first character a
                  letter, the last a letter or a number, and a 63 character maximum.
              connector_definition_name:
                type: string
                title: ConnectorDefinition resource
              type:
                $ref: '#/definitions/v1alphaConnectorType'
                title: ConnectorResource Type
                readOnly: true
              description:
                type: string
                title: ConnectorResource description
              configuration:
                type: object
                title: ConnectorResource configuration in JSON format
              state:
                $ref: '#/definitions/v1alphaConnectorResourceState'
                title: ConnectorResource state
                readOnly: true
              tombstone:
                type: boolean
                title: ConnectorResource tombstone
                readOnly: true
              user:
                type: string
                description: |-
                  The resource name with UUID of a user, e.g.,
                  "users/bfb978f8-78d3-4338-aa2b-a6c699cb07c5".
                readOnly: true
              org:
                type: string
                title: The resource name with UUID of an organization
                readOnly: true
              create_time:
                type: string
                format: date-time
                title: ConnectorResource creation time
                readOnly: true
              update_time:
                type: string
                format: date-time
                title: ConnectorResource update time
                readOnly: true
              visibility:
                $ref: '#/definitions/v1alphaConnectorResourceVisibility'
                title: ConnectorResource visibility including public or private
                readOnly: true
              connector_definition:
                $ref: '#/definitions/v1alphaConnectorDefinition'
                title: Embed the content of the connector_definition
                readOnly: true
              delete_time:
                type: string
                format: date-time
                title: ConnectorResource delete time
                readOnly: true
            title: ConnectorResource resource
            required:
              - configuration
      tags:
        - ConnectorPublicService
  /v1alpha/{connector_resource.name}/testConnection:
    post:
      summary: |-
        TestUserConnectorResource method receives a TestUserConnectorResourceRequest
        message and returns a TestUserConnectorResourceResponse
      operationId: ConnectorPublicService_TestUserConnectorResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaTestUserConnectorResourceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: connector_resource.name
          description: |-
            ConnectorResource resource name. It must have the format of
            "connector-resources/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connector-resources/[^/]+
      tags:
        - ConnectorPublicService
  /v1alpha/{connector_resource.name}/watch:
    get:
      summary: |-
        WatchUserConnectorResource method receives a
        WatchUserConnectorResourceRequest message and returns a
        WatchUserConnectorResourceResponse
      operationId: ConnectorPublicService_WatchUserConnectorResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaWatchUserConnectorResourceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: connector_resource.name
          description: |-
            ConnectorResource resource name. It must have the format of
            "connector-resources/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connector-resources/[^/]+
      tags:
        - ConnectorPublicService
  /v1alpha/{model.name/readme}:
    get:
      summary: |-
        GetUserModelCard method receives a GetUserModelCardRequest message
        and returns a GetUserModelCardResponseUser
      operationId: ModelPublicService_GetUserModelCard
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetUserModelCardResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: model.name/readme
          description: |-
            Resource name of the model card.
            For example "// Format: users/{user}/models/{model}/readme"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/models/[^/]+/readme
      tags:
        - ModelPublicService
  /v1alpha/{model.name/watch}/watch:
    get:
      summary: |-
        WatchUserModel method receives a WatchUserModelRequest message
        and returns a WatchModelResponse
      operationId: ModelPublicService_WatchUserModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaWatchUserModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: model.name/watch
          description: |-
            Resource name of the model.
            Format: users/{user}/models/{model}
          in: path
          required: true
          type: string
          pattern: users/[^/]+/models/[^/]+
      tags:
        - ModelPublicService
  /v1alpha/{model.name}:
    get:
      summary: |-
        GetUserModel method receives a GetUserModelRequest message and returns a
        GetUserModelResponse
      operationId: ModelPublicService_GetUserModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetUserModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: model.name
          description: |-
            Resource name of the model.
            Format: users/{user}/models/{model}
          in: path
          required: true
          type: string
          pattern: users/[^/]+/models/[^/]+
        - name: view
          description: |-
            Model view (default is VIEW_BASIC)
            VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
            VIEW_FULL: show full information

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
             - VIEW_FULL: View: FULL, full representation of the resource
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ModelPublicService
    delete:
      summary: |-
        DeleteUserModel method receives a DeleteUserModelRequest message and returns a
        DeleteUserModelResponse
      operationId: ModelPublicService_DeleteUserModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeleteUserModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: model.name
          description: |-
            Resource name of the model.
            Format: users/{user}/models/{model}
          in: path
          required: true
          type: string
          pattern: users/[^/]+/models/[^/]+
      tags:
        - ModelPublicService
    patch:
      summary: |-
        UpdateUserModel method receives a UpdateUserModelRequest message and returns a
        UpdateUserModelResponse
      operationId: ModelPublicService_UpdateUserModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUpdateUserModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: model.name
          description: |-
            Resource name. It must have the format of "users/{user}/models/{model}".
            For example: "users/instill-ai/models/yolov4"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/models/[^/]+
        - name: model
          description: The model to update
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                title: Model ID in UUIDv4
                readOnly: true
              id:
                type: string
                description: |-
                  Resource ID (the last segment of the resource name) used to construct the
                  resource name. This conforms to RFC-1034, which restricts to letters,
                  numbers, and hyphen, with the first character a letter, the last a letter
                  or a number, and a 63 character maximum.
              description:
                type: string
                title: Model description
              model_definition:
                type: string
                title: Model definition resource name
              configuration:
                type: object
                title: |-
                  Model configuration represents the configuration JSON that has been
                  validated using the `model_spec` JSON schema of a ModelDefinition
              task:
                $ref: '#/definitions/v1alphaTask'
                title: Model task
                readOnly: true
              state:
                $ref: '#/definitions/v1alphaModelState'
                title: Model state
                readOnly: true
              visibility:
                $ref: '#/definitions/v1alphaModelVisibility'
                title: Model visibility including public or private
                readOnly: true
              user:
                type: string
                description: |-
                  The resource name with UUID of a user, e.g.,
                  "users/bfb978f8-78d3-4338-aa2b-a6c699cb07c5".
                readOnly: true
              org:
                type: string
                title: The resource name with UUID of an organization
                readOnly: true
              create_time:
                type: string
                format: date-time
                title: Model create time
                readOnly: true
              update_time:
                type: string
                format: date-time
                title: Model update time
                readOnly: true
              delete_time:
                type: string
                format: date-time
                title: Model delete time
                readOnly: true
            title: The model to update
      tags:
        - ModelPublicService
  /v1alpha/{model_definition.name}:
    get:
      summary: |-
        GetModelDefinition method receives a GetModelDefinitionRequest message and
        returns a GetModelDefinitionResponse
      operationId: ModelPublicService_GetModelDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetModelDefinitionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: model_definition.name
          description: |-
            Resource name of the model definition.
            For example "model-definitions/{uuid}"
          in: path
          required: true
          type: string
          pattern: model-definitions/[^/]+
        - name: view
          description: |-
            Definition view (default is VIEW_BASIC)
            VIEW_UNSPECIFIED/VIEW_BASIC: omit `ModelDefinition.model_spec` and
            `ModelDefinition.model_spec`
            VIEW_FULL: show full information

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
             - VIEW_FULL: View: FULL, full representation of the resource
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ModelPublicService
  /v1alpha/{name_1}:
    get:
      summary: |-
        GetOperation method receives a
        GetOperationRequest message and returns a
        GetOperationResponse message.
      operationId: PipelinePublicService_GetOperation
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetOperationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name_1
          description: The name of the operation resource.
          in: path
          required: true
          type: string
          pattern: operations/[^/]+
      tags:
        - PipelinePublicService
  /v1alpha/{name_1}/rename:
    post:
      summary: |-
        RenameUserConnectorResource method receives a
        RenameUserConnectorResourceRequest message and returns a
        RenameUserConnectorResourceResponse message.
      operationId: ConnectorPublicService_RenameUserConnectorResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaRenameUserConnectorResourceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name_1
          description: |-
            ConnectorResource resource name. It must have the format of
            "connector-resources/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connector-resources/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              new_connector_id:
                type: string
                title: |-
                  ConnectorResource new resource id to replace with the
                  ConnectorResource resource name to be
                  "connector-resources/{new_connector_id}"
            title: |-
              RenameUserConnectorResourceRequest represents a request to rename the
              ConnectorResource resource name
            required:
              - new_connector_id
      tags:
        - ConnectorPublicService
  /v1alpha/{name_1}/trigger:
    post:
      summary: |-
        TriggerUserPipeline method receives a TriggerUserPipelineRequest message
        and returns a TriggerUserPipelineResponse.
      operationId: PipelinePublicService_TriggerUserPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaTriggerUserPipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name_1
          description: Pipeline resource name. It must have the format of "users/*/pipelines/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              inputs:
                type: array
                items:
                  type: object
                title: Input to the pipeline
            title: TriggerUserPipelineRequest represents a request to trigger a pipeline
            required:
              - inputs
      tags:
        - PipelinePublicService
  /v1alpha/{name_1}/triggerAsync:
    post:
      summary: |-
        TriggerAsyncUserPipelineRelease method receives a TriggerAsyncUserPipelineReleaseRequest message and
        returns a TriggerAsyncUserPipelineReleaseResponse.
      operationId: PipelinePublicService_TriggerAsyncUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaTriggerAsyncUserPipelineReleaseResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name_1
          description: Resource name.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+/releases/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              inputs:
                type: array
                items:
                  type: object
                title: Input to the pipeline
            title: TriggerAsyncUserPipelineReleaseRequest represents a request to trigger a pipeline_released pipeline
            required:
              - inputs
      tags:
        - PipelinePublicService
  /v1alpha/{name_2}/rename:
    post:
      summary: |-
        RenameUserPipeline method receives a RenameUserPipelineRequest message and returns
        a RenameUserPipelineResponse message.
      operationId: PipelinePublicService_RenameUserPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaRenameUserPipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name_2
          description: Pipeline resource name. It must have the format of "users/*/pipelines/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              new_pipeline_id:
                type: string
                title: |-
                  Pipeline new resource id to replace with the pipeline resource name to be
                  "users/*/pipelines/{new_pipeline_id}"
            title: |-
              RenameUserPipelineRequest represents a request to rename the pipeline resource
              name
            required:
              - new_pipeline_id
      tags:
        - PipelinePublicService
  /v1alpha/{name_2}/trigger:
    post:
      summary: |-
        TriggerUserPipelineRelease method receives a TriggeUserPipelineReleaseRequest message
        and returns a TriggerPipelineReleasePipelineResponse.
      operationId: PipelinePublicService_TriggerUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaTriggerUserPipelineReleaseResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name_2
          description: Resource name.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+/releases/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              inputs:
                type: array
                items:
                  type: object
                title: Input to the pipeline
            title: TriggerUserPipelineReleaseRequest represents a request to trigger a pipeline_released pipeline
            required:
              - inputs
      tags:
        - PipelinePublicService
  /v1alpha/{name_3}/rename:
    post:
      summary: |-
        RenameUserPipelineRelease method receives a RenameUserPipelineReleaseRequest message and returns
        a RenameUserPipelineReleaseResponse message.
      operationId: PipelinePublicService_RenameUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaRenameUserPipelineReleaseResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name_3
          description: Pipeline release resource name. It must have the format of "users/*/pipelines/*/releases/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+/releases/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              new_pipeline_release_id:
                type: string
                title: |-
                  Pipeline new resource id to replace with the pipeline resource name to be
                  "users/*/pipelines/*/releases/{new_pipeline_id}"
            title: |-
              RenameUserPipelineReleaseRequest represents a request to rename the pipeline release resource
              name
            required:
              - new_pipeline_release_id
      tags:
        - PipelinePublicService
  /v1alpha/{name}:
    get:
      summary: |-
        GetModelOperation method receives a
        GetModelOperationRequest message and returns a
        GetModelOperationResponse message.
      operationId: ModelPublicService_GetModelOperation
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetModelOperationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: The name of the operation resource.
          in: path
          required: true
          type: string
          pattern: operations/[^/]+
        - name: view
          description: |-
            View (default is VIEW_BASIC)
            VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`,
            `Model.configuration` VIEW_FULL: show full information

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
             - VIEW_FULL: View: FULL, full representation of the resource
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ModelPublicService
  /v1alpha/{name}/connect:
    post:
      summary: |-
        Connect a connector resource.
        The "state" of the connector resource after connecting is "CONNECTED".
        ConnectUserConnectorResource can be called on ConnectorResource in the
        state `DISCONNECTED`; ConnectorResource in a different state (including
        `CONNECTED`) returns an error.
      operationId: ConnectorPublicService_ConnectUserConnectorResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaConnectUserConnectorResourceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: |-
            ConnectorResource resource name. It must have the format of
            "connector-resources/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connector-resources/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: |-
              ConnectUserConnectorResourceRequest represents a request to connect a
              connector_resource
      tags:
        - ConnectorPublicService
  /v1alpha/{name}/deploy:
    post:
      summary: DeployUserModel deploy a model to online state
      operationId: ModelPublicService_DeployUserModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeployUserModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: |-
            Resource name for the model to be deployed.
            Format: users/{user}/models/{model}
          in: path
          required: true
          type: string
          pattern: users/[^/]+/models/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: DeployUserModelRequest represents a request to deploy a model to online state
      tags:
        - ModelPublicService
  /v1alpha/{name}/disconnect:
    post:
      summary: |-
        Disconnect a connectorResource.
        The "state" of the connectorResource after disconnecting is "DISCONNECTED".
        DisconnectUserConnectorResource can be called on ConnectorResource in the
        state `CONNECTED`; ConnectorResource in a different state (including
        `DISCONNECTED`) returns an error.
      operationId: ConnectorPublicService_DisconnectUserConnectorResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDisconnectUserConnectorResourceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: |-
            ConnectorResource resource name. It must have the format of
            "connector-resources/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connector-resources/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: |-
              DisconnectUserConnectorResourceRequest represents a request to disconnect a
              connector_resource
      tags:
        - ConnectorPublicService
  /v1alpha/{name}/execute:
    post:
      summary: |-
        ExecuteUserConnectorResource method receives a
        ExecuteUserConnectorResourceRequest message and returns a
        ExecuteUserConnectorResourceResponse message.
      operationId: ConnectorPublicService_ExecuteUserConnectorResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaExecuteUserConnectorResourceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: |-
            Name of a connector_resource. For example:
            "connector-resources/{name}"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connector-resources/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              inputs:
                type: array
                items:
                  type: object
                title: Inputs
            title: |-
              ExecuteUserConnectorResourceRequest represents a private request to execution
              connector_resource
      tags:
        - ConnectorPublicService
  /v1alpha/{name}/publish:
    post:
      summary: |-
        PublishUserModel method receives a PublisUserhModelRequest message and returns a
        PublishUserModelResponse
      operationId: ModelPublicService_PublishUserModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaPublishUserModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: |-
            Resource name of the model.
            Format: users/{user}/models/{model}
          in: path
          required: true
          type: string
          pattern: users/[^/]+/models/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: PublisUserhModelRequest represents a request to publish a model
      tags:
        - ModelPublicService
  /v1alpha/{name}/rename:
    post:
      summary: RenameUserModel method rename a model
      operationId: ModelPublicService_RenameUserModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaRenameUserModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: |-
            Resource name for the model to be renamed.
            Format: users/{user}/models/{model}
          in: path
          required: true
          type: string
          pattern: users/[^/]+/models/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              new_model_id:
                type: string
                title: |-
                  New ID of this model
                  Format: users/{user}/models/{new_model_id}
            title: RenameUserModelRequest represents a request to rename a model
            required:
              - new_model_id
      tags:
        - ModelPublicService
  /v1alpha/{name}/restore:
    post:
      summary: |-
        RestoreUserPipelineRelease method receives a RestoreUserPipelineReleaseRequest message
        and returns a RestoreUserPipelineReleaseResponse
      operationId: PipelinePublicService_RestoreUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaRestoreUserPipelineReleaseResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: Pipeline resource name. It must have the format of "users/*/pipelines/*/releases/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+/releases/[^/]+
      tags:
        - PipelinePublicService
  /v1alpha/{name}/setDefault:
    post:
      summary: |-
        SetDefaultUserPipelineRelease method receives a SetDefaultUserPipelineReleaseRequest message
        and returns a SetDefaultUserPipelineReleaseResponse
      operationId: PipelinePublicService_SetDefaultUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaSetDefaultUserPipelineReleaseResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: Pipeline resource name. It must have the format of "users/*/pipelines/*/releases/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+/releases/[^/]+
      tags:
        - PipelinePublicService
  /v1alpha/{name}/test:
    post:
      summary: |-
        TestUserModel method receives a TestUserModelRequest message
        and returns a TestUserModelResponse message.
      operationId: ModelPublicService_TestUserModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaTestUserModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: |-
            The resource name of the model to trigger.
            Format: users/{user}/models/{model}
          in: path
          required: true
          type: string
          pattern: users/[^/]+/models/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              task_inputs:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1alphaTaskInput'
                title: Input to trigger the model
            title: TestUserModelRequest represents a request to test a model
            required:
              - task_inputs
      tags:
        - ModelPublicService
  /v1alpha/{name}/trigger:
    post:
      summary: /////////////////////////////////////////////////////
      description: |-
        TriggerUserModel method receives a TriggerUserModelRequest message
        and returns a TriggerUserModelResponse message.
      operationId: ModelPublicService_TriggerUserModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaTriggerUserModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: |-
            The resource name of the model to trigger.
            Format: users/{user}/models/{model}
          in: path
          required: true
          type: string
          pattern: users/[^/]+/models/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              task_inputs:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1alphaTaskInput'
                title: Input to trigger the model
            title: TriggerUserModelRequest represents a request to trigger a model
            required:
              - task_inputs
      tags:
        - ModelPublicService
  /v1alpha/{name}/triggerAsync:
    post:
      summary: |-
        TriggerAsyncUserPipeline method receives a TriggerAsyncUserPipelineRequest message and
        returns a TriggerAsyncUserPipelineResponse.
      operationId: PipelinePublicService_TriggerAsyncUserPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaTriggerAsyncUserPipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: Pipeline resource name. It must have the format of "users/*/pipelines/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              inputs:
                type: array
                items:
                  type: object
                title: Input to the pipeline
            title: TriggerAsyncUserPipelineRequest represents a request to trigger a async pipeline
            required:
              - inputs
      tags:
        - PipelinePublicService
  /v1alpha/{name}/undeploy:
    post:
      summary: UndeployUserModel undeploy a model to offline state
      operationId: ModelPublicService_UndeployUserModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUndeployUserModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: |-
            Resource name for the model to be undeployed.
            Format: users/{user}/models/{model}
          in: path
          required: true
          type: string
          pattern: users/[^/]+/models/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: |-
              UndeployUserModelRequest represents a request to undeploy a model to offline
              state
      tags:
        - ModelPublicService
  /v1alpha/{name}/unpublish:
    post:
      summary: |-
        UnpublishUserModel method receives a UnpublishUserModelRequest message and returns
        a UnpublishUserModelResponse
      operationId: ModelPublicService_UnpublishUserModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUnpublishUserModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: |-
            Resource name of the model.
            Format: users/{user}/models/{model}
          in: path
          required: true
          type: string
          pattern: users/[^/]+/models/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: UnpublishUserModelRequest represents a request to unpublish a model
      tags:
        - ModelPublicService
  /v1alpha/{name}/validate:
    post:
      summary: Validate a pipeline.
      operationId: PipelinePublicService_ValidateUserPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaValidateUserPipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: Pipeline resource name. It must have the format of "users/*/pipelines/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: ValidatePUseripelineRequest represents a request to validate a pipeline
      tags:
        - PipelinePublicService
  /v1alpha/{operator_definition.name}:
    get:
      summary: |-
        GetOperatorDefinition method receives a
        GetOperatorDefinitionRequest message and returns a
        GetGetOperatorDefinitionResponse message.
      operationId: PipelinePublicService_GetOperatorDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetOperatorDefinitionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: operator_definition.name
          description: |-
            Operator resource name. It must have the format of
            "operator-definitions/*"
          in: path
          required: true
          type: string
          pattern: operator-definitions/[^/]+
        - name: view
          description: |-
            Operator resource view (default is
            DEFINITION_VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
             - VIEW_RECIPE: View: RECIPE: will return recipe
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
          default: VIEW_UNSPECIFIED
      tags:
        - PipelinePublicService
  /v1alpha/{parent}/connector-resources:
    get:
      summary: |-
        ListUserConnectorResources method receives a
        ListUserConnectorResourcesRequest message and returns a
        ListUserConnectorResourcesResponse message.
      operationId: ConnectorPublicService_ListUserConnectorResources
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListUserConnectorResourcesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent
          description: |-
            The parent resource where this connector resource will be created.
            Format: users/{users}
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: page_size
          description: |-
            The maximum number of connector-resources to return. The service may return fewer
            than this value. If unspecified, at most 10 connector-resources will be returned.
            The maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            ConnectorResource view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
             - VIEW_CONFIGURATION: View: CONFIGURATION
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_CONFIGURATION
          default: VIEW_UNSPECIFIED
        - name: filter
          description: Filter expression to list connector-resources
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Return soft_deleted connector resources
          in: query
          required: false
          type: boolean
      tags:
        - ConnectorPublicService
    post:
      summary: |-
        CreateUserConnectorResource method receives a
        CreateUserConnectorResourceRequest message and returns a
        CreateUserConnectorResourceResponse message.
      operationId: ConnectorPublicService_CreateUserConnectorResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCreateUserConnectorResourceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent
          description: |-
            The parent resource where this connector resource will be created.
            Format: users/{users}
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: connector_resource
          description: ConnectorResource resource
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alphaConnectorResource'
            required:
              - connector_resource
      tags:
        - ConnectorPublicService
  /v1alpha/{parent}/models:
    get:
      summary: |-
        LisUsertModels method receives a ListUserModelsRequest message and returns a
        ListUserModelsResponse
      operationId: ModelPublicService_ListUserModels
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListUserModelsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent
          description: |-
            The parent resource where this connector resource will be created.
            Format: users/{users}
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: page_size
          description: |-
            Page size: the maximum number of resources to return. The service may
            return fewer than this value. If unspecified, at most 10 models will be
            returned. The maximum value is 100; values above 100 will be coereced to
            100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            Model view (default is VIEW_BASIC)
            VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
            VIEW_FULL: show full information

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
             - VIEW_FULL: View: FULL, full representation of the resource
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
        - name: show_deleted
          description: Return soft_deleted models
          in: query
          required: false
          type: boolean
      tags:
        - ModelPublicService
    post:
      summary: |-
        CreateUserModel method receives a CreateUserModelRequest message and returns a
        CreateUserModelResponse
      operationId: ModelPublicService_CreateUserModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCreateUserModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent
          description: |-
            The parent resource where this connector resource will be created.
            Format: users/{users}
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: model
          description: |-
            The model to be created

            The model `name` field is used to identify the model to create.
            Format: users/{user}/models/{model}
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alphaModel'
            required:
              - model
      tags:
        - ModelPublicService
  /v1alpha/{parent}/pipelines:
    get:
      summary: |-
        ListUserPipelines method receives a ListUserPipelinesRequest message and returns a
        ListUserPipelinesResponse message.
      operationId: PipelinePublicService_ListUserPipelines
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListUserPipelinesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent
          description: |-
            The parent resource where this connector resource will be created.
            Format: users/{users}
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: page_size
          description: |-
            The maximum number of pipelines to return. The service may return fewer
            than this value. If unspecified, at most 10 pipelines will be returned. The
            maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
             - VIEW_RECIPE: View: RECIPE: will return recipe
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
          default: VIEW_UNSPECIFIED
        - name: filter
          description: Filter expression to list pipelines
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Return soft_deleted pipeline releases
          in: query
          required: false
          type: boolean
      tags:
        - PipelinePublicService
    post:
      summary: |-
        CreateUserPipeline method receives a CreateUserPipelineRequest message and returns
        a CreateUserPipelineResponse message.
      operationId: PipelinePublicService_CreateUserPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCreateUserPipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent
          description: |-
            The parent resource where this connector resource will be created.
            Format: users/{users}
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: pipeline
          description: A pipeline resource to create
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alphaPipeline'
            required:
              - pipeline
      tags:
        - PipelinePublicService
  /v1alpha/{parent}/releases:
    get:
      summary: |-
        ListUserPipelineReleases method receives a ListUserPipelineReleasesRequest message and returns a
        ListUserPipelineReleasesResponse message.
      operationId: PipelinePublicService_ListUserPipelineReleases
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListUserPipelineReleasesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent
          description: |-
            The parent resource where this pipeline_release will be created.
            Format: users/{user}/pipelines/{pipeline}
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
        - name: page_size
          description: |-
            The maximum number of pipeline_releases to return. The service may return fewer
            than this value. If unspecified, at most 10 pipeline_release will be returned. The
            maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
             - VIEW_RECIPE: View: RECIPE: will return recipe
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
          default: VIEW_UNSPECIFIED
        - name: filter
          description: Filter expression to list pipeline_releases
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Return soft_deleted pipelines
          in: query
          required: false
          type: boolean
      tags:
        - PipelinePublicService
    post:
      summary: |-
        CreateUserPipelineRelease method receives a CreateUserPipelineReleaseRequest message and returns
        a CreateUserPipelineReleaseResponse message.
      operationId: PipelinePublicService_CreateUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCreateUserPipelineReleaseResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent
          description: |-
            The parent resource where this pipeline_release will be created.
            Format: users/{user}/pipelines/{pipeline}
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
        - name: release
          description: A pipeline_release resource to create
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alphaPipelineRelease'
            required:
              - release
      tags:
        - PipelinePublicService
  /v1alpha/{permalink_1}/lookUp:
    get:
      summary: |-
        LookUpConnectorResource method receives a
        LookUpConnectorResourceRequest message and returns a
        LookUpConnectorResourceResponse
      operationId: ConnectorPublicService_LookUpConnectorResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaLookUpConnectorResourceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: permalink_1
          description: |-
            Permalink of a connector_resource. For example:
            "connector-resources/{uid}"
          in: path
          required: true
          type: string
          pattern: connector-resources/[^/]+
        - name: view
          description: |-
            ConnectorResource view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
             - VIEW_CONFIGURATION: View: CONFIGURATION
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_CONFIGURATION
          default: VIEW_UNSPECIFIED
      tags:
        - ConnectorPublicService
  /v1alpha/{permalink_2}/lookUp:
    get:
      summary: |-
        LookUpPipeline method receives a LookUpPipelineRequest message and returns
        a LookUpPipelineResponse
      operationId: PipelinePublicService_LookUpPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaLookUpPipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: permalink_2
          description: |-
            Permalink of a pipeline. For example:
            "pipelines/{uid}"
          in: path
          required: true
          type: string
          pattern: pipelines/[^/]+
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
             - VIEW_RECIPE: View: RECIPE: will return recipe
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
          default: VIEW_UNSPECIFIED
      tags:
        - PipelinePublicService
  /v1alpha/{permalink}/lookUp:
    get:
      summary: |-
        LookUpUodel method receives a LookUpModelRequest message and returns a
        LookUpModelResponse
      operationId: ModelPublicService_LookUpModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaLookUpModelResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: permalink
          description: |-
            Permalink of a model. For example:
            Format: models/{uid}
          in: path
          required: true
          type: string
          pattern: models/[^/]+
        - name: view
          description: |-
            Model view (default is VIEW_BASIC)
            VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
            VIEW_FULL: show full information

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
             - VIEW_FULL: View: FULL, full representation of the resource
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ModelPublicService
  /v1alpha/{pipeline.name/watch}/watch:
    get:
      summary: |-
        WatchUserPipelineRelease method receives a WatchUserPipelineReleaseRequest message
        and returns a WatchUserPipelineReleaseResponse
      operationId: PipelinePublicService_WatchUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaWatchUserPipelineReleaseResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pipeline.name/watch
          description: Pipeline resource name. It must have the format of "users/*/pipelines/*/releases/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+/releases/[^/]+
      tags:
        - PipelinePublicService
  /v1alpha/{pipeline.name}:
    get:
      summary: |-
        GetUserPipeline method receives a GetUserPipelineRequest message and returns a
        GetUserPipelineResponse message.
      operationId: PipelinePublicService_GetUserPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetUserPipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pipeline.name
          description: Pipeline resource name. It must have the format of "users/*/pipelines/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
        - name: view
          description: |-
            Pipeline resource view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
             - VIEW_RECIPE: View: RECIPE: will return recipe
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
          default: VIEW_UNSPECIFIED
      tags:
        - PipelinePublicService
    delete:
      summary: |-
        DeleteUserPipeline method receives a DeleteUserPipelineRequest message and returns
        a DeleteUserPipelineResponse message.
      operationId: PipelinePublicService_DeleteUserPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeleteUserPipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pipeline.name
          description: Pipeline resource name. It must have the format of "users/*/pipelines/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
      tags:
        - PipelinePublicService
    patch:
      summary: |-
        UpdateUserPipeline method receives a UpdateUserPipelineRequest message and returns
        a UpdateUserPipelineResponse message.
      operationId: PipelinePublicService_UpdateUserPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUpdateUserPipelineResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pipeline.name
          description: Pipeline resource name. It must have the format of "users/{user}/pipelines/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
        - name: pipeline
          description: A pipeline resource to update
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                title: Pipeline UUID
                readOnly: true
              id:
                type: string
                description: |-
                  Pipeline resource ID (the last segment of the resource name) used to
                  construct the resource name. This conforms to RFC-1034, which restricts to
                  letters, numbers, and hyphen, with the first character a letter, the last a
                  letter or a number, and a 63 character maximum.
              description:
                type: string
                title: Pipeline description
              recipe:
                $ref: '#/definitions/v1alphaRecipe'
                title: Pipeline recipe
              user:
                type: string
                description: |-
                  The resource name with UUID of a user, e.g.,
                  "users/bfb978f8-78d3-4338-aa2b-a6c699cb07c5".
                readOnly: true
              org:
                type: string
                title: The resource name with UUID of an organization
                readOnly: true
              create_time:
                type: string
                format: date-time
                title: Pipeline creation time
                readOnly: true
              update_time:
                type: string
                format: date-time
                title: Pipeline update time
                readOnly: true
              visibility:
                $ref: '#/definitions/pipelinev1alphaVisibility'
                title: Visibility
              openapi_schema:
                type: object
                title: OpenAPI schema
                readOnly: true
              delete_time:
                type: string
                format: date-time
                title: Pipeline delete time
                readOnly: true
            title: A pipeline resource to update
      tags:
        - PipelinePublicService
  /v1alpha/{pipeline_release.name}:
    get:
      summary: |-
        GetUserPipelineRelease method receives a GetUserPipelineReleaseRequest message and returns a
        GetUserPipelineReleaseResponse message.
      operationId: PipelinePublicService_GetUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetUserPipelineReleaseResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pipeline_release.name
          description: PipelineRelease resource name. It must have the format of "users/*/pipelines/*/releases/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+/releases/[^/]+
        - name: view
          description: |-
            PipelineRelease resource view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
             - VIEW_RECIPE: View: RECIPE: will return recipe
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
          default: VIEW_UNSPECIFIED
      tags:
        - PipelinePublicService
    delete:
      summary: |-
        DeleteUserPipelineRelease method receives a DeleteUserPipelineReleaseRequest message and returns
        a DeleteUserPipelineReleaseResponse message.
      operationId: PipelinePublicService_DeleteUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeleteUserPipelineReleaseResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pipeline_release.name
          description: PipelineRelease resource name. It must have the format of "users/*/pipelines/*/releases/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+/releases/[^/]+
      tags:
        - PipelinePublicService
  /v1alpha/{release.name}:
    patch:
      summary: |-
        UpdateUserPipelineRelease method receives a UpdateUserPipelineReleaseRequest message and returns
        a UpdateUserPipelineReleaseResponse message.
      operationId: PipelinePublicService_UpdateUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUpdateUserPipelineReleaseResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: release.name
          description: PipelineRelease resource name. It must have the format of "users/*/pipelines/*/releases/*"
          in: path
          required: true
          type: string
          pattern: usersr/[^/]+/pipelines/[^/]+/releases/[^/]+
        - name: release
          description: A pipeline release resource to update
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                title: PipelineRelease UUID
                readOnly: true
              id:
                type: string
                title: |-
                  PipelineRelease resource ID (the last segment of the resource name) used to
                  construct the resource name. Must be a sematic version vX.Y.Z
              description:
                type: string
                title: PipelineRelease description
              recipe:
                $ref: '#/definitions/v1alphaRecipe'
                title: Pipeline recipe snapshot
                readOnly: true
              create_time:
                type: string
                format: date-time
                title: Pipeline creation time
                readOnly: true
              update_time:
                type: string
                format: date-time
                title: Pipeline update time
                readOnly: true
              visibility:
                $ref: '#/definitions/pipelinev1alphaVisibility'
                title: Visibility
              openapi_schema:
                type: object
                title: OpenAPI schema
                readOnly: true
              delete_time:
                type: string
                format: date-time
                title: Pipeline delete time
                readOnly: true
            title: A pipeline release resource to update
      tags:
        - PipelinePublicService
  /v1alpha/{resource.resource_permalink_1}:
    get:
      summary: |-
        GetResource method receives a GetResourceRequest message
        and returns a GetResourceResponse
      operationId: ControllerPrivateService_GetResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/vdpcontrollerv1alphaGetResourceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: resource.resource_permalink_1
          description: |-
            Permalink of a resouce. For example:
            "resources/{resource_uuid}/types/{type}"
          in: path
          required: true
          type: string
          pattern: resources/[^/]+/types/[^/]+
      tags:
        - ControllerPrivateService
    delete:
      summary: |-
        DeleteResource method receives a DeleteResourceRequest message
        and returns a DeleteResourceResponse
      operationId: ControllerPrivateService_DeleteResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/vdpcontrollerv1alphaDeleteResourceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: resource.resource_permalink_1
          description: |-
            Permalink of a resouce. For example:
            "resources/{resource_uuid}/types/{type}"
          in: path
          required: true
          type: string
          pattern: resources/[^/]+/types/[^/]+
      tags:
        - ControllerPrivateService
    patch:
      summary: |-
        UpdateResource method receives a UpdateResourceRequest message
        and returns a UpdateResourceResponse
      operationId: ControllerPrivateService_UpdateResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/vdpcontrollerv1alphaUpdateResourceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: resource.resource_permalink_1
          description: |-
            Permalink of a resouce. For example:
            "resources/{resource_uuid}/types/{type}"
          in: path
          required: true
          type: string
          pattern: resources/[^/]+/types/[^/]+
        - name: resource
          description: Resource state
          in: body
          required: true
          schema:
            type: object
            properties:
              pipeline_state:
                $ref: '#/definitions/pipelinev1alphaState'
                title: Pipeline state
              connector_state:
                $ref: '#/definitions/v1alphaConnectorResourceState'
                title: ConnectorResource state
              backend_state:
                $ref: '#/definitions/HealthCheckResponseServingStatus'
                title: Backend service state
              progress:
                type: integer
                format: int32
                title: Resource longrunning progress
            title: Resource state
        - name: workflow_id
          description: Resource longrunnning workflow id
          in: query
          required: false
          type: string
      tags:
        - ControllerPrivateService
  /v1alpha/{resource.resource_permalink}:
    get:
      summary: |-
        GetResource method receives a GetResourceRequest message
        and returns a GetResourceResponse
      operationId: ControllerPrivateService_GetResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/modelcontrollerv1alphaGetResourceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: resource.resource_permalink
          description: |-
            Permalink of a resource. For example:
            "resources/{resource_uuid}/types/{type}"
          in: path
          required: true
          type: string
          pattern: resources/[^/]+/types/[^/]+
      tags:
        - ControllerPrivateService
    delete:
      summary: |-
        DeleteResource method receives a DeleteResourceRequest message
        and returns a DeleteResourceResponse
      operationId: ControllerPrivateService_DeleteResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/modelcontrollerv1alphaDeleteResourceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: resource.resource_permalink
          description: |-
            Permalink of a resource. For example:
            "resources/{resource_uuid}/types/{type}"
          in: path
          required: true
          type: string
          pattern: resources/[^/]+/types/[^/]+
      tags:
        - ControllerPrivateService
    patch:
      summary: |-
        UpdateResource method receives a UpdateResourceRequest message
        and returns a UpdateResourceResponse
      operationId: ControllerPrivateService_UpdateResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/modelcontrollerv1alphaUpdateResourceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: resource.resource_permalink
          description: |-
            Permalink of a resource. For example:
            "resources/{resource_uuid}/types/{type}"
          in: path
          required: true
          type: string
          pattern: resources/[^/]+/types/[^/]+
        - name: resource
          description: Resource state
          in: body
          required: true
          schema:
            type: object
            properties:
              model_state:
                $ref: '#/definitions/v1alphaModelState'
                title: Model state
              backend_state:
                $ref: '#/definitions/HealthCheckResponseServingStatus'
                title: Backend service state
              progress:
                type: integer
                format: int32
                title: Resource longrunning progress
            title: Resource state
        - name: workflow_id
          description: Resource long-running workflow id
          in: query
          required: false
          type: string
      tags:
        - ControllerPrivateService
  /v1alpha/{token.name}:
    get:
      summary: |-
        GetToken method receives a GetTokenRequest message and returns a
        GetTokenResponse message.
      operationId: MgmtPublicService_GetToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetTokenResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: token.name
          description: API tokens resource name. It must have the format of "tokens/*"
          in: path
          required: true
          type: string
          pattern: tokens/[^/]+
      tags:
        - MgmtPublicService
    delete:
      summary: |-
        DeleteToken method receives a DeleteTokenRequest message and returns
        a DeleteTokenResponse message.
      operationId: MgmtPublicService_DeleteToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeleteTokenResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: token.name
          description: API token resource name. It must have the format of "tokens/*"
          in: path
          required: true
          type: string
          pattern: tokens/[^/]+
      tags:
        - MgmtPublicService
  /v1alpha/{user.name}/exist:
    get:
      summary: |-
        ExistUsername method receives a ExistUsernameRequest message and returns a
        ExistUsernameResponse
      operationId: MgmtPublicService_ExistUsername
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaExistUsernameResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user.name
          description: |-
            The resource name of the user to check,
            for example: "users/local-user"
          in: path
          required: true
          type: string
          pattern: users/[^/]+
      tags:
        - MgmtPublicService
  /v1alpha/admin/{model_permalink}/check:
    get:
      summary: |-
        CheckModelAdmin method receives a CheckModelAdminRequest message and returns a
        CheckModelAdminResponse
      operationId: ModelPrivateService_CheckModelAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCheckModelAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: model_permalink
          description: |-
            Permalink of a model. For example:
            "models/{uid}"
          in: path
          required: true
          type: string
          pattern: models/[^/]+
      tags:
        - ModelPrivateService
  /v1alpha/admin/{model_permalink}/deploy:
    post:
      summary: DeployModelAdmin deploy a model to online state
      operationId: ModelPrivateService_DeployModelAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeployModelAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: model_permalink
          description: |-
            Permalink for the model to be deployed.
            Format: "models/{uid}"
          in: path
          required: true
          type: string
          pattern: models/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: DeployModelAdminRequest represents a request to deploy a model to online state
      tags:
        - ModelPrivateService
  /v1alpha/admin/{model_permalink}/undeploy:
    post:
      summary: UndeployModelAdmin undeploy a model to offline state
      operationId: ModelPrivateService_UndeployModelAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUndeployModelAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: model_permalink
          description: |-
            Permalink for the model to be undeployed.
            Format: "models/{uid}"
          in: path
          required: true
          type: string
          pattern: models/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: |-
              UndeployModelAdminRequest represents a request to undeploy a model to offline
              state
      tags:
        - ModelPrivateService
  /v1alpha/admin/{permalink_1}/lookUp:
    get:
      summary: |-
        LookUpModelAdmin method receives a LookUpModelAdminRequest message and
        returns a LookUpModelAdminResponse
      operationId: ModelPrivateService_LookUpModelAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaLookUpModelAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: permalink_1
          description: |-
            Permalink of a model. For example:
            "models/{uid}"
          in: path
          required: true
          type: string
          pattern: models/[^/]+
        - name: view
          description: |-
            Model view (default is VIEW_BASIC)
            VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
            VIEW_FULL: show full information

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
             - VIEW_FULL: View: FULL, full representation of the resource
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ModelPrivateService
  /v1alpha/admin/{permalink_2}/lookUp:
    get:
      summary: |-
        LookUpConnectorDefinitionAdmin method receives a
        LookUpConnectorDefinitionAdminRequest message and returns a
        LookUpConnectorDefinitionAdminResponse
      operationId: ConnectorPrivateService_LookUpConnectorDefinitionAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaLookUpConnectorDefinitionAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: permalink_2
          description: |-
            Permalink of a connector. For example:
            "connector-definitions/{uid}"
          in: path
          required: true
          type: string
          pattern: connector-definitions/[^/]+
        - name: view
          description: |-
            Connector view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
             - VIEW_CONFIGURATION: View: CONFIGURATION
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_CONFIGURATION
          default: VIEW_UNSPECIFIED
      tags:
        - ConnectorPrivateService
  /v1alpha/admin/{permalink_3}/lookUp:
    get:
      summary: |-
        LookUpConnectorResourceAdmin method receives a
        LookUpConnectorResourceAdminRequest message and returns a
        LookUpConnectorResourceAdminResponse
      operationId: ConnectorPrivateService_LookUpConnectorResourceAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaLookUpConnectorResourceAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: permalink_3
          description: |-
            Permalink of a connector_resource. For example:
            "connector-resources/{uid}"
          in: path
          required: true
          type: string
          pattern: connector-resources/[^/]+
        - name: view
          description: |-
            ConnectorResource view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
             - VIEW_CONFIGURATION: View: CONFIGURATION
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_CONFIGURATION
          default: VIEW_UNSPECIFIED
      tags:
        - ConnectorPrivateService
  /v1alpha/admin/{permalink_4}/lookUp:
    get:
      summary: |-
        LookUpPipelineAdmin method receives a LookUpPipelineAdminRequest message
        and returns a LookUpPipelineAdminResponse
      operationId: PipelinePrivateService_LookUpPipelineAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaLookUpPipelineAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: permalink_4
          description: |-
            Permalink of a pipeline. For example:
            "pipelines/{uid}"
          in: path
          required: true
          type: string
          pattern: pipelines/[^/]+
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
             - VIEW_RECIPE: View: RECIPE: will return recipe
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
          default: VIEW_UNSPECIFIED
      tags:
        - PipelinePrivateService
  /v1alpha/admin/{permalink_5}/lookUp:
    get:
      summary: |-
        LookUpOperatorDefinitionAdmin method receives a
        LookUpOperatorDefinitionAdminRequest message and returns a
        LookUpOperatorDefinitionAdminResponse
      operationId: PipelinePrivateService_LookUpOperatorDefinitionAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaLookUpOperatorDefinitionAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: permalink_5
          description: |-
            Permalink of a operator. For example:
            "operator-definitions/{uid}"
          in: path
          required: true
          type: string
          pattern: operator-definitions/[^/]+
        - name: view
          description: |-
            Operator view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
             - VIEW_RECIPE: View: RECIPE: will return recipe
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
          default: VIEW_UNSPECIFIED
      tags:
        - PipelinePrivateService
  /v1alpha/admin/{permalink}/check:
    get:
      summary: |-
        CheckConnectorResource method receives a CheckConnectorResourceRequest message and returns a
        CheckConnectorResourceResponse
      operationId: ConnectorPrivateService_CheckConnectorResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCheckConnectorResourceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: permalink
          description: |-
            Permalink of a connector_resource. For example:
            "connector-resources/{uid}"
          in: path
          required: true
          type: string
          pattern: connector-resources/[^/]+
      tags:
        - ConnectorPrivateService
  /v1alpha/admin/{permalink}/lookUp:
    get:
      summary: |-
        LookUpUserAdmin method receives a LookUpUserAdminRequest message and
        returns a LookUpUserAdminResponse
      operationId: MgmtPrivateService_LookUpUserAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaLookUpUserAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: permalink
          description: |-
            Permalink of a user. For example:
            "users/{uid}"
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - MgmtPrivateService
  /v1alpha/admin/{user.name}:
    get:
      summary: |-
        GetUserAdmin method receives a GetUserAdminRequest message and returns
        a GetUserAdminResponse message.
      operationId: MgmtPrivateService_GetUserAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetUserAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user.name
          description: |-
            Resource name of a user. For example:
            "users/local-user"
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - MgmtPrivateService
    delete:
      summary: |-
        DeleteUserAdmin method receives a DeleteUserAdminRequest message and
        returns a DeleteUserAdminResponse
      operationId: MgmtPrivateService_DeleteUserAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeleteUserAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user.name
          description: |-
            The resource name of the user to be deleted,
            for example: "users/local-user"
          in: path
          required: true
          type: string
          pattern: users/[^/]+
      tags:
        - MgmtPrivateService
    patch:
      summary: |-
        UpdateUserAdmin method receives a UpdateUserAdminRequest message and
        returns a UpdateUserAdminResponse
      operationId: MgmtPrivateService_UpdateUserAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUpdateUserAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user.name
          description: |-
            Resource name. It must have the format of "users/*".
            For example: "users/local-user".
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: user
          description: |-
            The user to update

            The user's `name` field is used to identify the user to update.
            Format: users/{user}
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: |-
                  User ID in UUIDv4. This field is optionally set by users
                  (optional on resource creation, server-generated if unset).
              id:
                type: string
                description: |-
                  Resource ID (the last segment of the resource name), also the user
                  username. This conforms to RFC-1034, which restricts to letters, numbers,
                  and hyphen, with the first character a letter, the last a letter or a
                  number, and a 63 character maximum.
                  Note that the ID can be updated.
              type:
                $ref: '#/definitions/v1alphaOwnerType'
                title: 'Owner type: fixed to `OWNER_TYPE_USER`'
                readOnly: true
              create_time:
                type: string
                format: date-time
                title: User creation time
                readOnly: true
              update_time:
                type: string
                format: date-time
                title: User update time
                readOnly: true
              email:
                type: string
                title: User email
              customer_id:
                type: string
                description: Stripe customer ID. This field is used in Instill Cloud.
                readOnly: true
              first_name:
                type: string
                title: User first name
              last_name:
                type: string
                title: User last name
              org_name:
                type: string
                title: User company or institution name
              role:
                type: string
                title: |-
                  User role. Allowed roles:
                   - "manager"
                   - "ai-researcher"
                   - "ai-engineer"
                   - "data-engineer",
                   - "data-scientist",
                   - "analytics-engineer"
                   - "hobbyist"
              newsletter_subscription:
                type: boolean
                title: User newsletter subscription
              cookie_token:
                type: string
                title: User console cookie token
            description: |-
              The user's `name` field is used to identify the user to update.
              Format: users/{user}
            title: The user to update
            required:
              - id
              - email
              - newsletter_subscription
      tags:
        - MgmtPrivateService
  /v1alpha/admin/connector-resources:
    get:
      summary: |-
        ListConnectorResourcesAdmin method receives a ListConnectorResourcesAdminRequest
        message and returns a ListConnectorResourcesResponse message.
      operationId: ConnectorPrivateService_ListConnectorResourcesAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListConnectorResourcesAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of connector-resources to return. The service may return fewer
            than this value. If unspecified, at most 10 connector-resources will be returned.
            The maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            ConnectorResource view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
             - VIEW_CONFIGURATION: View: CONFIGURATION
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_CONFIGURATION
          default: VIEW_UNSPECIFIED
        - name: filter
          description: Filter expression to list connector-resources
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Return soft_deleted connector resources
          in: query
          required: false
          type: boolean
      tags:
        - ConnectorPrivateService
  /v1alpha/admin/models:
    get:
      summary: |-
        ListModelsAdmin method receives a ListModelsAdminRequest message and
        returns a ListModelsAdminResponse
      operationId: ModelPrivateService_ListModelsAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListModelsAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            Page size: the maximum number of resources to return. The service may
            return fewer than this value. If unspecified, at most 10 models will be
            returned. The maximum value is 100; values above 100 will be coereced to
            100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            Model view (default is VIEW_BASIC)
            VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
            VIEW_FULL: show full information

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
             - VIEW_FULL: View: FULL, full representation of the resource
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
        - name: show_deleted
          description: Return soft_deleted models
          in: query
          required: false
          type: boolean
      tags:
        - ModelPrivateService
  /v1alpha/admin/pipelines:
    get:
      summary: |-
        ListPipelinesAdmin method receives a ListPipelinesAdminRequest message and
        returns a ListPipelinesAdminResponse message.
      operationId: PipelinePrivateService_ListPipelinesAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListPipelinesAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of pipelines to return. The service may return fewer
            than this value. If unspecified, at most 10 pipelines will be returned. The
            maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
             - VIEW_RECIPE: View: RECIPE: will return recipe
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
          default: VIEW_UNSPECIFIED
        - name: filter
          description: Filter expression to list pipelines
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Return soft_deleted pipelines
          in: query
          required: false
          type: boolean
      tags:
        - PipelinePrivateService
  /v1alpha/admin/releases:
    get:
      summary: |-
        ListPipelineReleasesAdmin method receives a ListPipelineReleasesAdminRequest message and
        returns a ListPipelineReleasesAdminResponse message.
      operationId: PipelinePrivateService_ListPipelineReleasesAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListPipelineReleasesAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of pipelines to return. The service may return fewer
            than this value. If unspecified, at most 10 pipelines will be returned. The
            maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
             - VIEW_RECIPE: View: RECIPE: will return recipe
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
          default: VIEW_UNSPECIFIED
        - name: filter
          description: Filter expression to list pipelines
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Return soft_deleted pipelines
          in: query
          required: false
          type: boolean
      tags:
        - PipelinePrivateService
  /v1alpha/admin/users:
    get:
      summary: |-
        ListUsersAdmin method receives a ListUsersAdminRequest message and returns
        a ListUsersAdminResponse message.
      operationId: MgmtPrivateService_ListUsersAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListUsersAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            Page size: the maximum number of resources to return. The service may
            return fewer than this value. If unspecified, at most 10 users will be
            returned. The maximum value is 100; values above 100 will be coereced to
            100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
        - name: filter
          description: Filter expression to list users
          in: query
          required: false
          type: string
      tags:
        - MgmtPrivateService
    post:
      summary: |-
        CreateUserAdmin receives a CreateUserAdminRequest message and returns a
        a GetUserAdminResponse
      operationId: MgmtPrivateService_CreateUserAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCreateUserAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user
          description: |-
            The user to be created

            The user's `name` field is used to identify the user to create.
            Format: users/{user}
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alphaUser'
            required:
              - user
      tags:
        - MgmtPrivateService
  /v1alpha/connector-definitions:
    get:
      summary: |-
        ListConnectorDefinitions method receives a
        ListConnectorDefinitionsRequest message and returns a
        ListConnectorDefinitionsResponse message.
      operationId: ConnectorPublicService_ListConnectorDefinitions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListConnectorDefinitionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of ConnectorDefinitions to return. The
            service may return fewer than this value. If unspecified, at most 10
            ConnectorDefinitions will be returned. The maximum value is 100;
            values above 100 will be coerced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            Definition view (default is DEFINITION_VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
             - VIEW_CONFIGURATION: View: CONFIGURATION
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_CONFIGURATION
          default: VIEW_UNSPECIFIED
        - name: filter
          description: Filter expression to list connector definitions
          in: query
          required: false
          type: string
      tags:
        - ConnectorPublicService
  /v1alpha/connector-resources:
    get:
      summary: |-
        ListConnectorResources method receives a
        ListConnectorResourcesRequest message and returns a
        ListConnectorResourcesResponse message.
      operationId: ConnectorPublicService_ListConnectorResources
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListConnectorResourcesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of connector-resources to return. The service may return fewer
            than this value. If unspecified, at most 10 connector-resources will be returned.
            The maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            ConnectorResource view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
             - VIEW_CONFIGURATION: View: CONFIGURATION
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_CONFIGURATION
          default: VIEW_UNSPECIFIED
        - name: filter
          description: Filter expression to list connector-resources
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Return soft_deleted connector resources
          in: query
          required: false
          type: boolean
      tags:
        - ConnectorPublicService
  /v1alpha/health/connector:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: ConnectorPublicService_Liveness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/vdpconnectorv1alphaLivenessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - ConnectorPublicService
  /v1alpha/health/controller:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: ControllerPrivateService_Liveness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/vdpcontrollerv1alphaLivenessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - ControllerPrivateService
  /v1alpha/health/mgmt:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: MgmtPublicService_Liveness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/basemgmtv1alphaLivenessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1alpha/health/model:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: ModelPublicService_Liveness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/modelmodelv1alphaLivenessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - ModelPublicService
  /v1alpha/health/pipeline:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: PipelinePublicService_Liveness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/vdppipelinev1alphaLivenessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - PipelinePublicService
  /v1alpha/health/usage:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: UsageService_Liveness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/baseusagev1alphaLivenessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - UsageService
  /v1alpha/metrics/vdp/connector/charts:
    get:
      summary: |-
        ListConnectorExecuteChartRecords method receives a ListConnectorExecuteChartRecordsRequest message and returns a
        ListConnectorExecuteChartRecordsResponse message.
      operationId: MgmtPublicService_ListConnectorExecuteChartRecords
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListConnectorExecuteChartRecordsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: aggregation_window
          description: Aggregation window in nanoseconds
          in: query
          required: false
          type: integer
          format: int32
        - name: filter
          description: Filter expression to list chart record
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1alpha/metrics/vdp/connector/executes:
    get:
      summary: |-
        ListConnectorExecuteRecords method receives a ListConnectorExecuteRecordsRequest message and returns a
        ListConnectorExecuteRecordsResponse message.
      operationId: MgmtPublicService_ListConnectorExecuteRecords
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListConnectorExecuteRecordsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of connector execution record to return. The service may return
            fewer than this value. If unspecified, at most 100 record will be returned. The
            maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: filter
          description: Filter expression to list record
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1alpha/metrics/vdp/connector/tables:
    get:
      summary: |-
        ListConnectorExecuteTableRecords method receives a ListConnectorExecuteTableRecordsRequest message and returns a
        ListConnectorExecuteTableRecordsResponse message.
      operationId: MgmtPublicService_ListConnectorExecuteTableRecords
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListConnectorExecuteTableRecordsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of connector execution table record to return. The service may return
            fewer than this value. If unspecified, at most 100 record will be returned. The
            maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: filter
          description: Filter expression to list record
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1alpha/metrics/vdp/pipeline/charts:
    get:
      summary: |-
        ListPipelineTriggerChartRecords method receives a ListPipelineTriggerChartRecordsRequest message and returns a
        ListPipelineTriggerChartRecordsResponse message.
      operationId: MgmtPublicService_ListPipelineTriggerChartRecords
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListPipelineTriggerChartRecordsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: aggregation_window
          description: Aggregation window in nanoseconds
          in: query
          required: false
          type: integer
          format: int32
        - name: filter
          description: Filter expression to list chart record
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1alpha/metrics/vdp/pipeline/tables:
    get:
      summary: |-
        ListPipelineTriggerTableRecords method receives a ListPipelineTriggerTableRecordsRequest message and returns a
        ListPipelineTriggerTableRecordsResponse message.
      operationId: MgmtPublicService_ListPipelineTriggerTableRecords
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListPipelineTriggerTableRecordsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of pipeline trigger record to return. The service may return
            fewer than this value. If unspecified, at most 100 record will be returned. The
            maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: filter
          description: Filter expression to list record
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1alpha/metrics/vdp/pipeline/triggers:
    get:
      summary: |-
        ListPipelineTriggerRecords method receives a ListPipelineTriggerRecordsRequest message and returns a
        ListPipelineTriggerRecordsResponse message.
      operationId: MgmtPublicService_ListPipelineTriggerRecords
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListPipelineTriggerRecordsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of pipeline trigger record to return. The service may return
            fewer than this value. If unspecified, at most 100 record will be returned. The
            maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: filter
          description: Filter expression to list record
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1alpha/model-definitions:
    get:
      summary: |-
        ListModelDefinitions method receives a ListModelDefinitionsRequest message
        and returns a ListModelDefinitionsResponse
      operationId: ModelPublicService_ListModelDefinitions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListModelDefinitionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            Page size: the maximum number of resources to return. The service may
            return fewer than this value. If unspecified, at most 10 ModelDefinitions
            will be returned. The maximum value is 100; values above 100 will be
            coereced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            Definition view (default is VIEW_BASIC)
            VIEW_UNSPECIFIED/VIEW_BASIC: omit `ModelDefinition.model_spec` and
            `ModelDefinition.model_spec`
            VIEW_FULL: show full information

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
             - VIEW_FULL: View: FULL, full representation of the resource
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
      tags:
        - ModelPublicService
  /v1alpha/models:
    get:
      summary: |-
        ListModels method receives a ListModelsRequest message and returns a
        ListModelsResponse
      operationId: ModelPublicService_ListModels
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListModelsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            Page size: the maximum number of resources to return. The service may
            return fewer than this value. If unspecified, at most 10 models will be
            returned. The maximum value is 100; values above 100 will be coereced to
            100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            Model view (default is VIEW_BASIC)
            VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
            VIEW_FULL: show full information

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
             - VIEW_FULL: View: FULL, full representation of the resource
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
          default: VIEW_UNSPECIFIED
        - name: show_deleted
          description: Return soft_deleted models
          in: query
          required: false
          type: boolean
      tags:
        - ModelPublicService
  /v1alpha/operator-definitions:
    get:
      summary: |-
        ListOperatorDefinitions method receives a
        ListOperatorDefinitionsRequest message and returns a
        ListOperatorDefinitionsResponse message.
      operationId: PipelinePublicService_ListOperatorDefinitions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListOperatorDefinitionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of OperatorDefinitions to return. The
            service may return fewer than this value. If unspecified, at most 10
            OperatorDefinitions will be returned. The maximum value is 100;
            values above 100 will be coerced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            Definition view (default is DEFINITION_VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
             - VIEW_RECIPE: View: RECIPE: will return recipe
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
          default: VIEW_UNSPECIFIED
        - name: filter
          description: Filter expression to list operator definitions
          in: query
          required: false
          type: string
      tags:
        - PipelinePublicService
  /v1alpha/pipelines:
    get:
      summary: |-
        ListPipelines method receives a ListPipelinesRequest message and returns a
        ListPipelinesResponse message.
      operationId: PipelinePublicService_ListPipelines
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListPipelinesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of pipelines to return. The service may return fewer
            than this value. If unspecified, at most 10 pipelines will be returned. The
            maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
             - VIEW_RECIPE: View: RECIPE: will return recipe
          in: query
          required: false
          type: string
          enum:
            - VIEW_UNSPECIFIED
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
          default: VIEW_UNSPECIFIED
        - name: filter
          description: Filter expression to list pipelines
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Return soft_deleted pipelines
          in: query
          required: false
          type: boolean
      tags:
        - PipelinePublicService
  /v1alpha/ready/mgmt:
    get:
      summary: |-
        Readiness method receives a ReadinessRequest message and returns a
        ReadinessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: MgmtPublicService_Readiness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/basemgmtv1alphaReadinessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1alpha/ready/model:
    get:
      summary: |-
        Readiness method receives a ReadinessRequest message and returns a
        ReadinessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: ModelPublicService_Readiness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/modelmodelv1alphaReadinessResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - ModelPublicService
  /v1alpha/reports:
    post:
      summary: |-
        SendSessionReport method receives a SendSessionReportRequest message and
        returns a SendSessionReportResponse message.
      operationId: UsageService_SendSessionReport
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaSendSessionReportResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: report
          description: A report resource to create
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alphaSessionReport'
            required:
              - report
      tags:
        - UsageService
  /v1alpha/sessions:
    post:
      summary: |-
        CreateSession method receives a CreateSessionRequest message and returns
        a CreateSessionResponse message.
      operationId: UsageService_CreateSession
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCreateSessionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: session
          description: A session resource to create
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alphaSession'
            required:
              - session
      tags:
        - UsageService
  /v1alpha/tokens:
    get:
      summary: |-
        ListTokens method receives a ListTokensRequest message and returns a
        ListTokensResponse message.
      operationId: MgmtPublicService_ListTokens
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListTokensResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of API tokens to return. The service may return fewer
            than this value. If unspecified, at most 10 API tokens will be returned.
            The maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
    post:
      summary: |-
        CreateToken method receives a CreateTokenRequest message and returns
        a CreateTokenResponse message.
      operationId: MgmtPublicService_CreateToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCreateTokenResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: token
          description: A token resource to create
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alphaApiToken'
            required:
              - token
      tags:
        - MgmtPublicService
  /v1alpha/users/me:
    get:
      summary: |-
        QueryAuthenticatedUser method receives a QueryAuthenticatedUserRequest
        message and returns a QueryAuthenticatedUserResponse message.
      operationId: MgmtPublicService_QueryAuthenticatedUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaQueryAuthenticatedUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      tags:
        - MgmtPublicService
    patch:
      summary: |-
        PatchAuthenticatedUser method receives a PatchAuthenticatedUserRequest
        message and returns a PatchAuthenticatedUserResponse message.
      operationId: MgmtPublicService_PatchAuthenticatedUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaPatchAuthenticatedUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user
          description: The user to update
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alphaUser'
            required:
              - user
      tags:
        - MgmtPublicService
  /v1alpha/validate_token:
    post:
      summary: |-
        ValidateToken method receives a ValidateTokenRequest message and returns
        a ValidateTokenResponse message.
      operationId: MgmtPublicService_ValidateToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaValidateTokenResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      tags:
        - MgmtPublicService
definitions:
  HealthCheckResponseServingStatus:
    type: string
    enum:
      - SERVING_STATUS_UNSPECIFIED
      - SERVING_STATUS_SERVING
      - SERVING_STATUS_NOT_SERVING
    default: SERVING_STATUS_UNSPECIFIED
    description: |-
      - SERVING_STATUS_UNSPECIFIED: Serving status: UNSPECIFIED
       - SERVING_STATUS_SERVING: Serving status: SERVING
       - SERVING_STATUS_NOT_SERVING: Serving status: NOT SERVING
    title: ServingStatus enumerates the status of a queried service
  SessionService:
    type: string
    enum:
      - SERVICE_UNSPECIFIED
      - SERVICE_MGMT
      - SERVICE_CONNECTOR
      - SERVICE_MODEL
      - SERVICE_PIPELINE
    default: SERVICE_UNSPECIFIED
    description: |-
      - SERVICE_UNSPECIFIED: Service: UNSPECIFIED
       - SERVICE_MGMT: Service: MGMT
       - SERVICE_CONNECTOR: Service: CONNECTOR
       - SERVICE_MODEL: Service: MODEL
       - SERVICE_PIPELINE: Service: PIPELINE
    title: Service enumerates the services to collect data from
  UserUsageDataConnectorExecuteData:
    type: object
    properties:
      connector_uid:
        type: string
        title: UID for the executed connector
      execute_uid:
        type: string
        title: UID for the trigger log
      execute_time:
        type: string
        format: date-time
        title: Timestamp for the execution
      connector_definition_uid:
        type: string
        title: Definition UID of the connector
      status:
        $ref: '#/definitions/mgmtv1alphaStatus'
        title: Final status of the execution
    title: Per execute usage metadata
    required:
      - connector_uid
      - execute_uid
      - execute_time
      - connector_definition_uid
      - status
  UserUsageDataModelTriggerData:
    type: object
    properties:
      model_uid:
        type: string
        title: UID for the trigged model
      trigger_uid:
        type: string
        title: UID for the trigger log
      trigger_time:
        type: string
        format: date-time
        title: Timestamp for the trigger
      model_definition_uid:
        type: string
        title: Definition UID of the model
      model_task:
        $ref: '#/definitions/v1alphaTask'
        title: Task of the model
      status:
        $ref: '#/definitions/mgmtv1alphaStatus'
        title: Final status of the execution
    title: Per trigger usage metadata
    required:
      - model_uid
      - trigger_uid
      - trigger_time
      - model_definition_uid
      - model_task
      - status
  UserUsageDataPipelineTriggerData:
    type: object
    properties:
      pipeline_uid:
        type: string
        title: UID for the triggered pipeline
      trigger_uid:
        type: string
        title: UID for the trigger log
      trigger_time:
        type: string
        format: date-time
        title: Timestamp for the trigger
      trigger_mode:
        $ref: '#/definitions/v1alphaMode'
        title: Trigger mode
      status:
        $ref: '#/definitions/mgmtv1alphaStatus'
        title: Final status of the execution
      pipeline_release_id:
        type: string
        title: Version for the triggered release pipeline, empty string if not release
      pipeline_release_uid:
        type: string
        title: UID for the triggered release pipeline, empty string if not release
    title: Per trigger usage metadata
    required:
      - pipeline_uid
      - trigger_uid
      - trigger_time
      - trigger_mode
      - status
      - pipeline_release_id
      - pipeline_release_uid
  basemgmtv1alphaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  basemgmtv1alphaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  basemgmtv1alphaView:
    type: string
    enum:
      - VIEW_UNSPECIFIED
      - VIEW_BASIC
      - VIEW_FULL
    default: VIEW_UNSPECIFIED
    description: |-
      View represents a view of any resource. The resource view is implemented by
      adding a parameter to the method request which allows the client to specify
      which view of the resource it wants to receive in the response.

       - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
       - VIEW_BASIC: View: BASIC
       - VIEW_FULL: View: FULL
  baseusagev1alphaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  baseusagev1alphaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  googlelongrunningOperation:
    type: object
    properties:
      name:
        type: string
        description: |-
          The server-assigned name, which is only unique within the same service that
          originally returns it. If you use the default HTTP mapping, the
          `name` should be a resource name ending with `operations/{unique_id}`.
      metadata:
        $ref: '#/definitions/protobufAny'
        description: |-
          Service-specific metadata associated with the operation.  It typically
          contains progress information and common metadata such as create time.
          Some services might not provide such metadata.  Any method that returns a
          long-running operation should document the metadata type, if any.
      done:
        type: boolean
        description: |-
          If the value is `false`, it means the operation is still in progress.
          If `true`, the operation is completed, and either `error` or `response` is
          available.
      error:
        $ref: '#/definitions/googlerpcStatus'
        description: The error result of the operation in case of failure or cancellation.
      response:
        $ref: '#/definitions/protobufAny'
        description: |-
          The normal response of the operation in case of success.  If the original
          method returns no data on success, such as `Delete`, the response is
          `google.protobuf.Empty`.  If the original method is standard
          `Get`/`Create`/`Update`, the response should be the resource.  For other
          methods, the response should have the type `XxxResponse`, where `Xxx`
          is the original method name.  For example, if the original method name
          is `TakeSnapshot()`, the inferred response type is
          `TakeSnapshotResponse`.
    description: |-
      This resource represents a long-running operation that is the result of a
      network API call.
  googlerpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
        description: |-
          The status code, which should be an enum value of
          [google.rpc.Code][google.rpc.Code].
      message:
        type: string
        description: |-
          A developer-facing error message, which should be in English. Any
          user-facing error message should be localized and sent in the
          [google.rpc.Status.details][google.rpc.Status.details] field, or localized
          by the client.
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
        description: |-
          A list of messages that carry the error details.  There is a common set of
          message types for APIs to use.
    description: |-
      The `Status` type defines a logical error model that is suitable for
      different programming environments, including REST APIs and RPC APIs. It is
      used by [gRPC](https://github.com/grpc). Each `Status` message contains
      three pieces of data: error code, error message, and error details.

      You can find out more about this error model and how to work with it in the
      [API Design Guide](https://cloud.google.com/apis/design/errors).
  mgmtv1alphaStatus:
    type: string
    enum:
      - STATUS_UNSPECIFIED
      - STATUS_COMPLETED
      - STATUS_ERRORED
    default: STATUS_UNSPECIFIED
    description: |-
      - STATUS_UNSPECIFIED: Status: UNSPECIFIED
       - STATUS_COMPLETED: Status: COMPLETED
       - STATUS_ERRORED: Status: ERRORED
    title: Status enumerates the final status of a pipeline trigger
  modelcontrollerv1alphaDeleteResourceResponse:
    type: object
    title: DeleteResourceResponse represents an empty response
  modelcontrollerv1alphaGetResourceResponse:
    type: object
    properties:
      resource:
        $ref: '#/definitions/modelcontrollerv1alphaResource'
        title: Retrieved resource state
    title: GetResourceResponse represents a response to fetch a resource's state
  modelcontrollerv1alphaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  modelcontrollerv1alphaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  modelcontrollerv1alphaResource:
    type: object
    properties:
      resource_permalink:
        type: string
        title: |-
          Permalink of a resource. For example:
          "resources/{resource_uuid}/types/{type}"
      model_state:
        $ref: '#/definitions/v1alphaModelState'
        title: Model state
      backend_state:
        $ref: '#/definitions/HealthCheckResponseServingStatus'
        title: Backend service state
      progress:
        type: integer
        format: int32
        title: Resource longrunning progress
    title: Resource represents the current information of a resource
    required:
      - resource_permalink
  modelcontrollerv1alphaUpdateResourceResponse:
    type: object
    properties:
      resource:
        $ref: '#/definitions/modelcontrollerv1alphaResource'
        title: Updated resource state
    title: UpdateResourceResponse represents a response to update a resource's state
  modelmodelv1alphaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  modelmodelv1alphaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  modelmodelv1alphaView:
    type: string
    enum:
      - VIEW_UNSPECIFIED
      - VIEW_BASIC
      - VIEW_FULL
    default: VIEW_UNSPECIFIED
    description: |-
      View represents a view of any resource. The resource view is implemented by
      adding a parameter to the method request which allows the client to specify
      which view of the resource it wants to receive in the response.

       - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
       - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
       - VIEW_FULL: View: FULL, full representation of the resource
  pipelinev1alphaState:
    type: string
    enum:
      - STATE_UNSPECIFIED
      - STATE_INACTIVE
      - STATE_ACTIVE
      - STATE_ERROR
    default: STATE_UNSPECIFIED
    description: |-
      - STATE_UNSPECIFIED: State: UNSPECIFIED
       - STATE_INACTIVE: State INACTIVE indicates the pipeline is inactive
       - STATE_ACTIVE: State ACTIVE indicates the pipeline is active
       - STATE_ERROR: State ERROR indicates the pipeline has error
    title: State enumerates the state of a pipeline
  pipelinev1alphaVisibility:
    type: string
    enum:
      - VISIBILITY_UNSPECIFIED
      - VISIBILITY_PRIVATE
      - VISIBILITY_PUBLIC
    default: VISIBILITY_UNSPECIFIED
    description: |-
      - VISIBILITY_UNSPECIFIED: Visibility: UNSPECIFIED, equivalent to PRIVATE.
       - VISIBILITY_PRIVATE: Visibility: PRIVATE
       - VISIBILITY_PUBLIC: Visibility: PUBLIC
    title: ConnectorResource visibility including public or private
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
        description: |-
          A URL/resource name that uniquely identifies the type of the serialized
          protocol buffer message. This string must contain at least
          one "/" character. The last segment of the URL's path must represent
          the fully qualified name of the type (as in
          `path/google.protobuf.Duration`). The name should be in a canonical form
          (e.g., leading "." is not accepted).

          In practice, teams usually precompile into the binary all types that they
          expect it to use in the context of Any. However, for URLs which use the
          scheme `http`, `https`, or no scheme, one can optionally set up a type
          server that maps type URLs to message definitions as follows:

          * If no scheme is provided, `https` is assumed.
          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
            value in binary format, or produce an error.
          * Applications are allowed to cache lookup results based on the
            URL, or have them precompiled into a binary to avoid any
            lookup. Therefore, binary compatibility needs to be preserved
            on changes to types. (Use versioned type names to manage
            breaking changes.)

          Note: this functionality is not currently available in the official
          protobuf release, and it is not used for type URLs beginning with
          type.googleapis.com.

          Schemes other than `http`, `https` (or the empty scheme) might be
          used with implementation specific semantics.
    additionalProperties: {}
    description: |-
      `Any` contains an arbitrary serialized protocol buffer message along with a
      URL that describes the type of the serialized message.

      Protobuf library provides support to pack/unpack Any values in the form
      of utility functions or additional generated methods of the Any type.

      Example 1: Pack and unpack a message in C++.

          Foo foo = ...;
          Any any;
          any.PackFrom(foo);
          ...
          if (any.UnpackTo(&foo)) {
            ...
          }

      Example 2: Pack and unpack a message in Java.

          Foo foo = ...;
          Any any = Any.pack(foo);
          ...
          if (any.is(Foo.class)) {
            foo = any.unpack(Foo.class);
          }
          // or ...
          if (any.isSameTypeAs(Foo.getDefaultInstance())) {
            foo = any.unpack(Foo.getDefaultInstance());
          }

      Example 3: Pack and unpack a message in Python.

          foo = Foo(...)
          any = Any()
          any.Pack(foo)
          ...
          if any.Is(Foo.DESCRIPTOR):
            any.Unpack(foo)
            ...

      Example 4: Pack and unpack a message in Go

           foo := &pb.Foo{...}
           any, err := anypb.New(foo)
           if err != nil {
             ...
           }
           ...
           foo := &pb.Foo{}
           if err := any.UnmarshalTo(foo); err != nil {
             ...
           }

      The pack methods provided by protobuf library will by default use
      'type.googleapis.com/full.type.name' as the type URL and the unpack
      methods only use the fully qualified type name after the last '/'
      in the type URL, for example "foo.bar.com/x/y.z" will yield type
      name "y.z".

      JSON

      The JSON representation of an `Any` value uses the regular
      representation of the deserialized, embedded message, with an
      additional field `@type` which contains the type URL. Example:

          package google.profile;
          message Person {
            string first_name = 1;
            string last_name = 2;
          }

          {
            "@type": "type.googleapis.com/google.profile.Person",
            "firstName": <string>,
            "lastName": <string>
          }

      If the embedded message type is well-known and has a custom JSON
      representation, that representation will be embedded adding a field
      `value` which holds the custom JSON in addition to the `@type`
      field. Example (for message [google.protobuf.Duration][]):

          {
            "@type": "type.googleapis.com/google.protobuf.Duration",
            "value": "1.212s"
          }
  protobufNullValue:
    type: string
    enum:
      - NULL_VALUE
    default: NULL_VALUE
    description: |-
      `NullValue` is a singleton enumeration to represent the null value for the
      `Value` type union.

       The JSON representation for `NullValue` is JSON `null`.

       - NULL_VALUE: Null value.
  v1alphaApiToken:
    type: object
    properties:
      name:
        type: string
        title: API token resource name. It must have the format of "tokens/*"
        readOnly: true
      uid:
        type: string
        title: API token UUID
        readOnly: true
      id:
        type: string
        description: |-
          API token resource ID (the last segment of the resource name) used to
          construct the resource name. This conforms to RFC-1034, which restricts to
          letters, numbers, and hyphen, with the first character a letter, the last a
          letter or a number, and a 63 character maximum.
          Use this field to define where it's being used.
      create_time:
        type: string
        format: date-time
        title: API token creation time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: API token update time
        readOnly: true
      access_token:
        type: string
        description: |-
          An opaque access token representing the API token string.
          To validate the token, the recipient of the token needs to call the server
          that issued the token.
        readOnly: true
      state:
        $ref: '#/definitions/v1alphaApiTokenState'
        title: API token state
        readOnly: true
      token_type:
        type: string
        title: API token type, value is fixed to "Bearer"
        readOnly: true
      ttl:
        type: integer
        format: int32
        description: Input only. The TTL in seconds for this resource.
      expire_time:
        type: string
        format: date-time
        title: API token expire time
    title: ApiToken represents the content of a API token
  v1alphaApiTokenState:
    type: string
    enum:
      - STATE_UNSPECIFIED
      - STATE_INACTIVE
      - STATE_ACTIVE
      - STATE_EXPIRED
    default: STATE_UNSPECIFIED
    description: |-
      - STATE_UNSPECIFIED: State: UNSPECIFIED
       - STATE_INACTIVE: State: INACTIVE
       - STATE_ACTIVE: State: ACTIVE
       - STATE_EXPIRED: State: EXPIRED
    title: State enumerates the state of an API token
  v1alphaBoundingBox:
    type: object
    properties:
      top:
        type: number
        format: float
        title: Bounding box top y-axis value
        readOnly: true
      left:
        type: number
        format: float
        title: Bounding box left x-axis value
        readOnly: true
      width:
        type: number
        format: float
        title: Bounding box width value
        readOnly: true
      height:
        type: number
        format: float
        title: Bounding box height value
        readOnly: true
    title: BoundingBox represents the bounding box data structure
  v1alphaCheckConnectorResourceResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1alphaConnectorResourceState'
        title: Retrieved connector_resource state
    title: |-
      CheckConnectorResourceResponse represents a response to fetch a
      connector_resource's current state
  v1alphaCheckModelAdminResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1alphaModelState'
        title: Retrieved model state
    title: |-
      CheckModelAdminResponse represents a response to fetch a model's
      current state and longrunning progress
  v1alphaClassificationInput:
    type: object
    properties:
      image_url:
        type: string
        title: Image type URL
      image_base64:
        type: string
        title: Image type base64
    title: ClassificationInput represents the input of classification task
  v1alphaClassificationInputStream:
    type: object
    properties:
      file_lengths:
        type: array
        items:
          type: integer
          format: int64
        title: The list of file length for each uploaded binary file
      content:
        type: string
        format: byte
        title: Content of images in bytes
    title: |-
      ClassificationInputStream represents the input of classification task when
      using stream method
    required:
      - file_lengths
      - content
  v1alphaClassificationOutput:
    type: object
    properties:
      category:
        type: string
        title: Classification category
        readOnly: true
      score:
        type: number
        format: float
        title: Classification score
        readOnly: true
    title: ClassificationOutput represents the output of classification task
  v1alphaComponent:
    type: object
    properties:
      id:
        type: string
        title: Component id that is given by the users
      resource_name:
        type: string
        title: A pipeline component resource name
      resource:
        $ref: '#/definitions/v1alphaConnectorResource'
        title: A pipeline component resource detail
        readOnly: true
      configuration:
        type: object
        title: Configuration for the pipeline component
      type:
        $ref: '#/definitions/v1alphaComponentType'
        title: Resource Type
        readOnly: true
      definition_name:
        type: string
        title: A pipeline component definition name
      operator_definition:
        $ref: '#/definitions/v1alphaOperatorDefinition'
        title: operator definition detail
        readOnly: true
      connector_definition:
        $ref: '#/definitions/v1alphaConnectorDefinition'
        title: connector definition detail
        readOnly: true
    title: Represents a pipeline component
    required:
      - id
      - definition_name
  v1alphaComponentType:
    type: string
    enum:
      - COMPONENT_TYPE_UNSPECIFIED
      - COMPONENT_TYPE_CONNECTOR_AI
      - COMPONENT_TYPE_CONNECTOR_DATA
      - COMPONENT_TYPE_CONNECTOR_BLOCKCHAIN
      - COMPONENT_TYPE_OPERATOR
    default: COMPONENT_TYPE_UNSPECIFIED
    description: |-
      - COMPONENT_TYPE_UNSPECIFIED: TYPE_UNSPECIFIED
       - COMPONENT_TYPE_CONNECTOR_AI: CONNECTOR_AI
       - COMPONENT_TYPE_CONNECTOR_DATA: CONNECTOR_DATA
       - COMPONENT_TYPE_CONNECTOR_BLOCKCHAIN: CONNECTOR_BLOCKCHAIN
       - COMPONENT_TYPE_OPERATOR: CONNECTOR_OPERATOR
    title: ComponentType
  v1alphaConnectUserConnectorResourceResponse:
    type: object
    properties:
      connector_resource:
        $ref: '#/definitions/v1alphaConnectorResource'
        title: A ConnectorResource resource
    title: |-
      ConnectUserConnectorResourceResponse represents a connected
      connector_resource
  v1alphaConnectorDefinition:
    type: object
    properties:
      name:
        type: string
        title: |-
          ConnectorDefinition resource name. It must have the format of
          "connector-definitions/*"
        readOnly: true
      uid:
        type: string
        title: ConnectorDefinition UUID
        readOnly: true
      id:
        type: string
        description: |-
          ConnectorDefinition resource ID (the last segment of the
          resource name) used to construct the resource name. This conforms to
          RFC-1034, which restricts to letters, numbers, and hyphen, with the first
          character a letter, the last a letter or a number, and a 63 character
          maximum.
      title:
        type: string
        title: ConnectorDefinition title
        readOnly: true
      documentation_url:
        type: string
        title: ConnectorDefinition documentation URL
        readOnly: true
      icon:
        type: string
        title: ConnectorDefinition icon
        readOnly: true
      spec:
        $ref: '#/definitions/vdpconnectorv1alphaSpec'
        title: ConnectorDefinition spec
        readOnly: true
      type:
        $ref: '#/definitions/v1alphaConnectorType'
        title: Connector Type
        readOnly: true
      tombstone:
        type: boolean
        title: |-
          ConnectorDefinition tombstone, i.e., if not set or false, the
          configuration is active, or otherwise, if true, this configuration is
          permanently off
        readOnly: true
      public:
        type: boolean
        title: |-
          ConnectorDefinition public flag, i.e., true if this connector
          definition is available to all workspaces
        readOnly: true
      custom:
        type: boolean
        title: |-
          ConnectorDefinition custom flag, i.e., whether this is a custom
          connector definition
        readOnly: true
      icon_url:
        type: string
        title: ConnectorDefinition iconUrl
        readOnly: true
      vendor:
        type: string
        title: ConnectorDefinition vendor name
        readOnly: true
      vendor_attributes:
        type: object
        title: ConnectorDefinition vendorAttributes, i.e. the vendor-specific attributes
        readOnly: true
    title: ConnectorDefinition represents the connector definition data model
  v1alphaConnectorExecuteChartRecord:
    type: object
    properties:
      connector_id:
        type: string
        title: ID for the executed connector
      connector_uid:
        type: string
        title: UID for the executed connector
      status:
        $ref: '#/definitions/mgmtv1alphaStatus'
        title: Status of connector execution
        readOnly: true
      time_buckets:
        type: array
        items:
          type: string
          format: date-time
        title: Time buckets
        readOnly: true
      execute_counts:
        type: array
        items:
          type: integer
          format: int32
        title: Aggregated execute count in each time bucket
        readOnly: true
      compute_time_duration:
        type: array
        items:
          type: number
          format: float
        title: Total compute time duration in each time bucket
        readOnly: true
    title: ConnectorExecuteChartRecord represents a aggregated chart record for connector execute
  v1alphaConnectorExecuteRecord:
    type: object
    properties:
      execute_time:
        type: string
        format: date-time
        title: Timestamp for the connector execution time
      connector_execute_id:
        type: string
        title: UID for connector execution
      connector_id:
        type: string
        title: ID for the executed connector
      connector_uid:
        type: string
        title: UID for the executed connector
      connector_definition_uid:
        type: string
        title: UID for the executed connector definition
      pipeline_id:
        type: string
        title: ID for the pipeline this connector belong to
      pipeline_uid:
        type: string
        title: UID for the pipeline this connector belong to
      pipeline_trigger_id:
        type: string
        title: UID for the trigger id of the pipeline this connector belong to
      compute_time_duration:
        type: number
        format: float
        title: Total compute time duration for this execution
        readOnly: true
      status:
        $ref: '#/definitions/mgmtv1alphaStatus'
        title: Final status for the connector execution
        readOnly: true
    title: ConnectorExecuteRecord represents a record for connector execution
  v1alphaConnectorExecuteTableRecord:
    type: object
    properties:
      connector_id:
        type: string
        title: ID for the executed connector
      connector_uid:
        type: string
        title: UID for the executed connector
      execute_count_completed:
        type: integer
        format: int32
        title: Execute count with STATUS_COMPLETED
        readOnly: true
      execute_count_errored:
        type: integer
        format: int32
        title: Execute count with STATUS_ERRORED
        readOnly: true
    title: ConnectorExecuteTableRecord represents a aggregated table record for connector execute
  v1alphaConnectorResource:
    type: object
    properties:
      name:
        type: string
        title: |-
          ConnectorResource resource name. It must have the format of
          "connector-resources/*"
        readOnly: true
      uid:
        type: string
        title: ConnectorResource UUID
        readOnly: true
      id:
        type: string
        description: |-
          ConnectorResource resource ID (the last segment of the resource name)
          used to construct the resource name. This conforms to RFC-1034, which
          restricts to letters, numbers, and hyphen, with the first character a
          letter, the last a letter or a number, and a 63 character maximum.
      connector_definition_name:
        type: string
        title: ConnectorDefinition resource
      type:
        $ref: '#/definitions/v1alphaConnectorType'
        title: ConnectorResource Type
        readOnly: true
      description:
        type: string
        title: ConnectorResource description
      configuration:
        type: object
        title: ConnectorResource configuration in JSON format
      state:
        $ref: '#/definitions/v1alphaConnectorResourceState'
        title: ConnectorResource state
        readOnly: true
      tombstone:
        type: boolean
        title: ConnectorResource tombstone
        readOnly: true
      user:
        type: string
        description: |-
          The resource name with UUID of a user, e.g.,
          "users/bfb978f8-78d3-4338-aa2b-a6c699cb07c5".
        readOnly: true
      org:
        type: string
        title: The resource name with UUID of an organization
        readOnly: true
      create_time:
        type: string
        format: date-time
        title: ConnectorResource creation time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: ConnectorResource update time
        readOnly: true
      visibility:
        $ref: '#/definitions/v1alphaConnectorResourceVisibility'
        title: ConnectorResource visibility including public or private
        readOnly: true
      connector_definition:
        $ref: '#/definitions/v1alphaConnectorDefinition'
        title: Embed the content of the connector_definition
        readOnly: true
      delete_time:
        type: string
        format: date-time
        title: ConnectorResource delete time
        readOnly: true
    title: ConnectorResource represents a connector_resource data model
    required:
      - configuration
  v1alphaConnectorResourceState:
    type: string
    enum:
      - STATE_UNSPECIFIED
      - STATE_DISCONNECTED
      - STATE_CONNECTED
      - STATE_ERROR
    default: STATE_UNSPECIFIED
    description: |-
      - STATE_UNSPECIFIED: State: UNSPECIFIED
       - STATE_DISCONNECTED: State: DISCONNECTED
       - STATE_CONNECTED: State: CONNECTED
       - STATE_ERROR: State: ERROR
    title: State enumerates the connector_resource state
  v1alphaConnectorResourceVisibility:
    type: string
    enum:
      - VISIBILITY_UNSPECIFIED
      - VISIBILITY_PRIVATE
      - VISIBILITY_PUBLIC
    default: VISIBILITY_UNSPECIFIED
    description: |-
      - VISIBILITY_UNSPECIFIED: Visibility: UNSPECIFIED, equivalent to PRIVATE.
       - VISIBILITY_PRIVATE: Visibility: PRIVATE
       - VISIBILITY_PUBLIC: Visibility: PUBLIC
    title: ConnectorResource visibility including public or private
  v1alphaConnectorType:
    type: string
    enum:
      - CONNECTOR_TYPE_UNSPECIFIED
      - CONNECTOR_TYPE_SOURCE
      - CONNECTOR_TYPE_DESTINATION
      - CONNECTOR_TYPE_AI
      - CONNECTOR_TYPE_BLOCKCHAIN
      - CONNECTOR_TYPE_DATA
      - CONNECTOR_TYPE_OPERATOR
    default: CONNECTOR_TYPE_UNSPECIFIED
    description: |-
      - CONNECTOR_TYPE_UNSPECIFIED: ConnectorType: UNSPECIFIED
       - CONNECTOR_TYPE_SOURCE: ConnectorType: SOURCE
       - CONNECTOR_TYPE_DESTINATION: ConnectorType: DESTINATION
       - CONNECTOR_TYPE_AI: ConnectorType: AI
       - CONNECTOR_TYPE_BLOCKCHAIN: ConnectorType: Blockchain
       - CONNECTOR_TYPE_DATA: ConnectorType: DATA
       - CONNECTOR_TYPE_OPERATOR: ConnectorType: OPERATOR
    title: ConnectorType enumerates connector types
  v1alphaConnectorUsageData:
    type: object
    properties:
      usages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaConnectorUsageDataUserUsageData'
        title: Usage data of all users in the connector service
    title: Connector service usage data
  v1alphaConnectorUsageDataUserUsageData:
    type: object
    properties:
      user_uid:
        type: string
        title: User UUID
      connector_execute_data:
        type: array
        items:
          type: object
          $ref: '#/definitions/UserUsageDataConnectorExecuteData'
        title: Execution data for each user
    title: Per user usage data in the connector service
    required:
      - user_uid
      - connector_execute_data
  v1alphaCreateSessionResponse:
    type: object
    properties:
      session:
        $ref: '#/definitions/v1alphaSession'
        title: A session resource
    title: CreateSessionResponse represents a response for a session response
  v1alphaCreateTokenResponse:
    type: object
    properties:
      token:
        $ref: '#/definitions/v1alphaApiToken'
        title: The created API token resource
    title: CreateTokenResponse represents a response for a API token resource
  v1alphaCreateUserAdminResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUser'
        title: A user resource
    title: CreateUserAdminResponse represents a response for a user response
  v1alphaCreateUserConnectorResourceResponse:
    type: object
    properties:
      connector_resource:
        $ref: '#/definitions/v1alphaConnectorResource'
        title: ConnectorResource resource
    title: |-
      CreateUserConnectorResourceResponse represents a response for a
      ConnectorResource resource
  v1alphaCreateUserModelBinaryFileUploadResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: Create model operation message
        readOnly: true
    title: CreateUserModelBinaryFileUploadResponse represents a response for a model
  v1alphaCreateUserModelResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: Create model operation message
        readOnly: true
    title: CreateUserModelResponse represents a response for a model
  v1alphaCreateUserPipelineReleaseResponse:
    type: object
    properties:
      release:
        $ref: '#/definitions/v1alphaPipelineRelease'
        title: The created pipeline_release resource
    title: CreateUserPipelineReleaseResponse represents a response for a pipeline_release resource
  v1alphaCreateUserPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1alphaPipeline'
        title: The created pipeline resource
    title: CreateUserPipelineResponse represents a response for a pipeline resource
  v1alphaDeleteTokenResponse:
    type: object
    title: DeleteTokenResponse represents an empty response
  v1alphaDeleteUserAdminResponse:
    type: object
    title: DeleteUserAdminResponse represents an empty response
  v1alphaDeleteUserConnectorResourceResponse:
    type: object
    title: DeleteUserConnectorResourceResponse represents an empty response
  v1alphaDeleteUserModelResponse:
    type: object
    title: DeleteUserModelResponse represents an empty response
  v1alphaDeleteUserPipelineReleaseResponse:
    type: object
    title: DeleteUserPipelineReleaseResponse represents an empty response
  v1alphaDeleteUserPipelineResponse:
    type: object
    title: DeleteUserPipelineResponse represents an empty response
  v1alphaDeployModelAdminResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: Deploy operation message
    title: DeployModelAdminResponse represents a response for a deployed model
  v1alphaDeployUserModelResponse:
    type: object
    properties:
      model_id:
        type: string
        title: |-
          Deployed model's id
          Format: users/{user}/models/{model}
    title: DeployUserModelResponse represents a response for a deployed model
  v1alphaDetectionInput:
    type: object
    properties:
      image_url:
        type: string
        title: Image type URL
      image_base64:
        type: string
        title: Image type base64
    title: DetectionInput represents the input of detection task
  v1alphaDetectionInputStream:
    type: object
    properties:
      file_lengths:
        type: array
        items:
          type: integer
          format: int64
        title: The list of file length for each uploaded binary file
      content:
        type: string
        format: byte
        title: Content of images in bytes
    title: |-
      DetectionInputStream represents the input of detection task when using stream
      method
    required:
      - file_lengths
      - content
  v1alphaDetectionObject:
    type: object
    properties:
      category:
        type: string
        title: Detection object category
        readOnly: true
      score:
        type: number
        format: float
        title: Detection object score
        readOnly: true
      bounding_box:
        $ref: '#/definitions/v1alphaBoundingBox'
        title: Detection bounding box
        readOnly: true
    title: DetectionObject represents a predicted object
  v1alphaDetectionOutput:
    type: object
    properties:
      objects:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaDetectionObject'
        title: A list of detection objects
        readOnly: true
    title: DetectionOutput represents the output of detection task
  v1alphaDisconnectUserConnectorResourceResponse:
    type: object
    properties:
      connector_resource:
        $ref: '#/definitions/v1alphaConnectorResource'
        title: A ConnectorResource resource
    title: |-
      DisconnectUserConnectorResourceResponse represents a disconnected
      connector_resource
  v1alphaExecuteUserConnectorResourceResponse:
    type: object
    properties:
      outputs:
        type: array
        items:
          type: object
        title: Outputs
    title: |-
      ExecuteUserConnectorResourceResponse represents a response for execution
      output
  v1alphaExistUsernameResponse:
    type: object
    properties:
      exists:
        type: boolean
        title: A boolean value indicating whether the username has been occupied
    title: |-
      ExistUsernameResponse represents a response about whether
      the queried username has been occupied
  v1alphaGetBulkCumulativeModelOnlineRecordsResponse:
    type: object
    properties:
      bulk_cumulative_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaGetCumulativeModelOnlineRecordsResponse'
        title: A list of cumulative model online record lists
    title: |-
      GetBulkCumulativeModelOnlineRecordsResponse represents a response to
      GetBulkCumulativeModelOnlineRecordsRequest
    required:
      - bulk_cumulative_records
  v1alphaGetBulkCumulativePipelineTriggerRecordsResponse:
    type: object
    properties:
      bulk_cumulative_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaGetCumulativePipelineTriggerRecordsResponse'
        title: A list of cumulative pipeline trigger record lists
    title: |-
      GetBulkCumulativePipelineTriggerRecordsResponse represents a response to
      GetBulkCumulativePipelineTriggerRecordsRequest
    required:
      - bulk_cumulative_records
  v1alphaGetBulkModelOnlinePriceResponse:
    type: object
    properties:
      bulk_prices:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaGetModelOnlinePriceResponse'
        title: A list of model online price lists
    title: |-
      GetBulkModelOnlinePriceResponse represents a response to
      GetBulkModelOnlinePriceRequest
    required:
      - bulk_prices
  v1alphaGetBulkModelOnlineRecordsResponse:
    type: object
    properties:
      bulk_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaGetModelOnlineRecordsResponse'
        title: A list of model online record lists
    title: |-
      GetBulkModelOnlineRecordsResponse represents a response to
      GetBulkModelOnlineRecordsRequest
    required:
      - bulk_records
  v1alphaGetBulkModelOnlineSummaryResponse:
    type: object
    properties:
      bulk_summaries:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaGetModelOnlineSummaryResponse'
        title: A list of model online usage summaries
    title: |-
      GetBulkModelOnlineSummaryResponse represents a response to
      GetBulkModelOnlineSummaryRequest
    required:
      - bulk_summaries
  v1alphaGetBulkPipelineTriggerPriceResponse:
    type: object
    properties:
      bulk_prices:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaGetPipelineTriggerPriceResponse'
        title: A list of pipeline trigger price lists
    title: |-
      GetBulkPipelineTriggerPriceResponse represents a response to
      GetBulkPipelineTriggerPriceRequest
    required:
      - bulk_prices
  v1alphaGetBulkPipelineTriggerRecordsResponse:
    type: object
    properties:
      bulk_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaGetPipelineTriggerRecordsResponse'
        title: A list of pipeline trigger record lists
    title: |-
      GetBulkPipelineTriggerRecordsResponse represents a response to
      GetBulkPipelineTriggerRecordsRequest
    required:
      - bulk_records
  v1alphaGetBulkPipelineTriggerSummariesResponse:
    type: object
    properties:
      bulk_summaries:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaGetPipelineTriggerSummaryResponse'
        title: A list of pipeline trigger usage summaries
    title: |-
      GetBulkPipelineTriggerSummariesResponse represents a response to
      GetBulkPipelineTriggerSummariesRequest
    required:
      - bulk_summaries
  v1alphaGetConnectorDefinitionResponse:
    type: object
    properties:
      connector_definition:
        $ref: '#/definitions/v1alphaConnectorDefinition'
        title: A ConnectorDefinition resource
    title: |-
      GetConnectorDefinitionResponse represents a
      ConnectorDefinition response
  v1alphaGetCumulativeModelOnlineRecordsRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUserData'
        title: User information
      model:
        $ref: '#/definitions/v1alphaModelData'
        title: Model information
      time_interval:
        $ref: '#/definitions/v1alphaTimeInterval'
        title: Time interval
    title: |-
      GetCumulativeModelOnlineRecordsRequest represents a query for cumulative
      model online records
    required:
      - user
      - model
      - time_interval
  v1alphaGetCumulativeModelOnlineRecordsResponse:
    type: object
    properties:
      cumulative_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaModelUsageRecord'
        title: A list of model online records in cumulative format
    title: |-
      GetCumulativeModelOnlineRecordsResponse represents a response to
      GetCumulativeModelOnlineRecordsRequest
    required:
      - cumulative_records
  v1alphaGetCumulativePipelineTriggerRecordsRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUserData'
        title: User information
      pipeline:
        $ref: '#/definitions/v1alphaPipelineData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1alphaTimeInterval'
        title: Time interval
    title: |-
      GetCumulativePipelineTriggerRecordsRequest represents a query for cumulative
      pipeline trigger records
    required:
      - user
      - pipeline
  v1alphaGetCumulativePipelineTriggerRecordsResponse:
    type: object
    properties:
      cumulative_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPipelineUsageRecord'
        title: Pipeline trigger records where values are in cumulative formats
    title: |-
      GetCumulativePipelineTriggerRecordsResponse represents a response to
      GetCumulativePipelineTriggerRecordsRequest
    required:
      - cumulative_records
  v1alphaGetModelDefinitionResponse:
    type: object
    properties:
      model_definition:
        $ref: '#/definitions/v1alphaModelDefinition'
        title: A model definition instance
    title: GetModelDefinitionResponse represents a response for a model definition
  v1alphaGetModelOnlinePriceRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUserData'
        title: User information
      model:
        $ref: '#/definitions/v1alphaModelData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1alphaTimeInterval'
        title: Time interval
    title: |-
      GetPipelineTriggerPriceRequest represents a query for price data of the
      billing periods covered by the time interval
    required:
      - user
      - model
      - time_interval
  v1alphaGetModelOnlinePriceResponse:
    type: object
    properties:
      price:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPriceData'
        title: |-
          A list of model online prices given the billing periods covered by the time
          interval
    title: |-
      GetModelOnlinePriceResponse represents a response to
      GetModelOnlinePriceRequest
    required:
      - price
  v1alphaGetModelOnlineRecordsRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUserData'
        title: User information
      model:
        $ref: '#/definitions/v1alphaModelData'
        title: Model information
      time_interval:
        $ref: '#/definitions/v1alphaTimeInterval'
        title: Time interval
    title: GetModelOnlineRecordsRequest represent a query for model online records
    required:
      - user
      - model
      - time_interval
  v1alphaGetModelOnlineRecordsResponse:
    type: object
    properties:
      records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaModelUsageRecord'
        title: A list of model trigger records
    title: |-
      GetModelOnlineRecordsResponse represents a response to
      GetModelOnlineRecordsRequest
    required:
      - records
  v1alphaGetModelOnlineSummaryRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUserData'
        title: User information
      model:
        $ref: '#/definitions/v1alphaModelData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1alphaTimeInterval'
        title: Time interval
    title: GetModelOnlineSummaryRequest represents a query for model online summary
    required:
      - user
      - model
      - time_interval
  v1alphaGetModelOnlineSummaryResponse:
    type: object
    properties:
      summary:
        $ref: '#/definitions/v1alphaUsageSummary'
        title: The total model online usage in the time interval
    title: |-
      GetModelOnlineSummaryResponse represents a response to
      GetModelOnlineSummaryRequest
    required:
      - summary
  v1alphaGetModelOperationResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: The retrieved model operation
    title: GetModelOperationResponse represents a response for a model operation
  v1alphaGetModelsResponse:
    type: object
    properties:
      models:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaModelData'
        title: A list of model informations
    title: GetPipelinesResponse represents a respond to GetModelsRequest
    required:
      - models
  v1alphaGetOperationResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: The retrieved longrunning operation
        readOnly: true
    title: |-
      GetOperationResponse represents a response for a longrunning
      operation
  v1alphaGetOperatorDefinitionResponse:
    type: object
    properties:
      operator_definition:
        $ref: '#/definitions/v1alphaOperatorDefinition'
        title: A Operator resource
    title: |-
      GetOperatorDefinitionResponse represents a
      Operator response
  v1alphaGetPipelineTriggerPriceRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUserData'
        title: User information
      pipeline:
        $ref: '#/definitions/v1alphaPipelineData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1alphaTimeInterval'
        title: Time interval
    title: |-
      GetPipelineTriggerPriceRequest represents a query for pipeline trigger prices
      given the billing periods covered by the time interval
    required:
      - user
      - pipeline
      - time_interval
  v1alphaGetPipelineTriggerPriceResponse:
    type: object
    properties:
      price:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPriceData'
        title: |-
          A list of pipeline trigger prices given the billing periods covered by the
          time interval
    title: |-
      GetPipelineTriggerPriceResponse represents a response to
      GetPipelineTriggerPriceRequest
    required:
      - price
  v1alphaGetPipelineTriggerRecordsRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUserData'
        title: User information
      pipeline:
        $ref: '#/definitions/v1alphaPipelineData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1alphaTimeInterval'
        title: Time interval
    title: |-
      GetPipelineTriggerRecordsRequest represents a query for pipeline trigger
      records
    required:
      - user
      - pipeline
  v1alphaGetPipelineTriggerRecordsResponse:
    type: object
    properties:
      records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPipelineUsageRecord'
        title: A list of pipeline trigger records
    title: |-
      GetPipelineTriggerRecordsResponse represents a response to
      GetPipelineTriggerRecordsRequest
    required:
      - records
  v1alphaGetPipelineTriggerSummaryRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUserData'
        title: User information
      pipeline:
        $ref: '#/definitions/v1alphaPipelineData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1alphaTimeInterval'
        title: Time interval
    title: |-
      GetPipelineTriggerSummaryRequest represents a query for pipeline trigger
      summary
    required:
      - user
      - pipeline
  v1alphaGetPipelineTriggerSummaryResponse:
    type: object
    properties:
      summaries:
        $ref: '#/definitions/v1alphaUsageSummary'
        title: The total pipeline trigger usage in the time interval
    title: |-
      GetPipelineTriggerSummaryResponse represents a response to
      GetPipelineTriggerSummaryRequest
    required:
      - summaries
  v1alphaGetPipelinesResponse:
    type: object
    properties:
      pipelines:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPipelineData'
        title: A list of pipeline informations
    title: GetPipelinesResponse represents a respond to GetPipelineRequest
    required:
      - pipelines
  v1alphaGetTokenResponse:
    type: object
    properties:
      token:
        $ref: '#/definitions/v1alphaApiToken'
        title: An API token resource
    title: GetTokenResponse represents a response for an API token resource
  v1alphaGetUserAdminResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUser'
        title: A user resource
    title: GetUserAdminResponse represents a response for a user resource
  v1alphaGetUserConnectorResourceResponse:
    type: object
    properties:
      connector_resource:
        $ref: '#/definitions/v1alphaConnectorResource'
        title: ConnectorResource resource
    title: |-
      GetUserConnectorResourceResponse represents a response for a
      ConnectorResource resource
  v1alphaGetUserModelCardResponse:
    type: object
    properties:
      readme:
        $ref: '#/definitions/v1alphaModelCard'
        title: Retrieved model card
    title: GetUserModelCardResponse represents a response to fetch a model's README card
  v1alphaGetUserModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: The retrieved model
    title: GetUserModelResponse represents a response for a model
  v1alphaGetUserPipelineReleaseResponse:
    type: object
    properties:
      release:
        $ref: '#/definitions/v1alphaPipelineRelease'
        title: A pipeline_release resource
    title: GetUserPipelineReleaseResponse represents a response for a pipeline_release resource
  v1alphaGetUserPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1alphaPipeline'
        title: A pipeline resource
    title: GetUserPipelineResponse represents a response for a pipeline resource
  v1alphaHealthCheckRequest:
    type: object
    properties:
      service:
        type: string
        title: Service name to check for its readiness status
    title: HealthCheckRequest represents a request to health check a service
  v1alphaHealthCheckResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/HealthCheckResponseServingStatus'
        title: Status is the instance of the enum type ServingStatus
    title: HealthCheckResponse represents a response for a service heath status
  v1alphaInstanceSegmentationInput:
    type: object
    properties:
      image_url:
        type: string
        title: Image type URL
      image_base64:
        type: string
        title: Image type base64
    title: InstanceSegmentationInput represents the input of instance segmentation task
  v1alphaInstanceSegmentationInputStream:
    type: object
    properties:
      file_lengths:
        type: array
        items:
          type: integer
          format: int64
        title: The list of file length for each uploaded binary file
      content:
        type: string
        format: byte
        title: Content of images in bytes
    title: |-
      InstanceSegmentationInputStream represents the input of instance segmentation
      task when using stream method
    required:
      - file_lengths
      - content
  v1alphaInstanceSegmentationObject:
    type: object
    properties:
      rle:
        type: string
        title: Instance RLE segmentation mask
        readOnly: true
      category:
        type: string
        title: Instance category
        readOnly: true
      score:
        type: number
        format: float
        title: Instance score
        readOnly: true
      bounding_box:
        $ref: '#/definitions/v1alphaBoundingBox'
        title: Instance bounding box
        readOnly: true
    title: InstanceSegmentationObject corresponding to a instance segmentation object
  v1alphaInstanceSegmentationOutput:
    type: object
    properties:
      objects:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaInstanceSegmentationObject'
        title: A list of instance segmentation objects
        readOnly: true
    title: |-
      InstanceSegmentationOutput represents the output of instance segmentation
      task
  v1alphaKeypoint:
    type: object
    properties:
      x:
        type: number
        format: float
        title: x coordinate
        readOnly: true
      "y":
        type: number
        format: float
        title: y coordinate
        readOnly: true
      v:
        type: number
        format: float
        title: visibility
        readOnly: true
    title: Keypoint structure which include coordinate and keypoint visibility
  v1alphaKeypointInput:
    type: object
    properties:
      image_url:
        type: string
        title: Image type URL
      image_base64:
        type: string
        title: Image type base64
    title: KeypointInput represents the input of keypoint detection task
  v1alphaKeypointInputStream:
    type: object
    properties:
      file_lengths:
        type: array
        items:
          type: integer
          format: int64
        title: The list of file length for each uploaded binary file
      content:
        type: string
        format: byte
        title: Content of images in bytes
    title: |-
      KeypointInputStream represents the input of keypoint detection task when
      using stream method
    required:
      - file_lengths
      - content
  v1alphaKeypointObject:
    type: object
    properties:
      keypoints:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaKeypoint'
        title: Keypoints
        readOnly: true
      score:
        type: number
        format: float
        title: Keypoint score
        readOnly: true
      bounding_box:
        $ref: '#/definitions/v1alphaBoundingBox'
        title: Bounding box object
        readOnly: true
    title: KeypointObject corresponding to a person object
  v1alphaKeypointOutput:
    type: object
    properties:
      objects:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaKeypointObject'
        title: A list of keypoint objects
        readOnly: true
    title: KeypointOutput represents the output of keypoint detection task
  v1alphaListConnectorDefinitionsResponse:
    type: object
    properties:
      connector_definitions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaConnectorDefinition'
        title: A list of ConnectorDefinition resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of ConnectorDefinition resources
    title: |-
      ListConnectorDefinitionsResponse represents a response for a list
      of ConnectorDefinitions
  v1alphaListConnectorExecuteChartRecordsResponse:
    type: object
    properties:
      connector_execute_chart_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaConnectorExecuteChartRecord'
        title: A list of connector execute records
    title: |-
      ListConnectorExecuteChartRecordsResponse represents a response for a list
      of connector execute chart record
  v1alphaListConnectorExecuteRecordsResponse:
    type: object
    properties:
      connector_execute_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaConnectorExecuteRecord'
        title: A list of connector execute records
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of connector execute records
    title: |-
      ListConnectorExecuteRecordsResponse represents a response for a list
      of connector execute record
  v1alphaListConnectorExecuteTableRecordsResponse:
    type: object
    properties:
      connector_execute_table_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaConnectorExecuteTableRecord'
        title: A list of connector execute records
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of connector execute records
    title: |-
      ListConnectorExecuteTableRecordsResponse represents a response for a list
      of connector execute table record
  v1alphaListConnectorResourcesAdminResponse:
    type: object
    properties:
      connector_resources:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaConnectorResource'
        title: A list of ConnectorResource resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of connector_resource resources
    title: |-
      ListConnectorResourcesAdminResponse represents a response for a list of
      ConnectorResource resources
  v1alphaListConnectorResourcesResponse:
    type: object
    properties:
      connector_resources:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaConnectorResource'
        title: A list of ConnectorResource resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of connector_resource resources
    title: |-
      ListConnectorResourcesResponse represents a response for a list of
      ConnectorResource resources
  v1alphaListModelDefinitionsResponse:
    type: object
    properties:
      model_definitions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaModelDefinition'
        title: a list of ModelDefinition instances
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of model definitions
    title: |-
      ListModelDefinitionsResponse represents a response to list all supported
      model definitions
  v1alphaListModelsAdminResponse:
    type: object
    properties:
      models:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaModel'
        title: a list of Models
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of models
    title: ListModelsAdminResponse represents a response for a list of models
  v1alphaListModelsResponse:
    type: object
    properties:
      models:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaModel'
        title: a list of Models
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of models
    title: ListModelsResponse represents a response for a list of models
  v1alphaListOperatorDefinitionsResponse:
    type: object
    properties:
      operator_definitions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaOperatorDefinition'
        title: A list of Operator resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of Operator resources
    title: |-
      ListOperatorDefinitionsResponse represents a response for a list
      of OperatorDefinitions
  v1alphaListPipelineReleasesAdminResponse:
    type: object
    properties:
      releases:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPipelineRelease'
        title: A list of pipeline resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of pipeline resources
    title: |-
      ListPipelineReleasesAdminResponse represents a response for a list of pipeline_releases
      The recipe returned will be permaLinks instead of resourceName temporary,
      this will be refactored soon
  v1alphaListPipelineTriggerChartRecordsResponse:
    type: object
    properties:
      pipeline_trigger_chart_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPipelineTriggerChartRecord'
        title: A list of pipeline trigger records
    title: |-
      ListPipelineTriggerChartRecordsResponse represents a response for a list
      of pipeline trigger chart record
  v1alphaListPipelineTriggerRecordsResponse:
    type: object
    properties:
      pipeline_trigger_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPipelineTriggerRecord'
        title: A list of pipeline trigger records
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of pipeline trigger records
    title: |-
      ListPipelineTriggerRecordsResponse represents a response for a list
      of pipeline trigger record
  v1alphaListPipelineTriggerTableRecordsResponse:
    type: object
    properties:
      pipeline_trigger_table_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPipelineTriggerTableRecord'
        title: A list of pipeline trigger table records
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of pipeline trigger records
    title: |-
      ListPipelineTriggerTableRecordsResponse represents a response for a list
      of pipeline trigger table record
  v1alphaListPipelinesAdminResponse:
    type: object
    properties:
      pipelines:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPipeline'
        title: A list of pipeline resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of pipeline resources
    title: |-
      ListPipelinesAdminResponse represents a response for a list of pipelines
      The recipe returned will be permaLinks instead of resourceName temporary,
      this will be refactored soon
  v1alphaListPipelinesResponse:
    type: object
    properties:
      pipelines:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPipeline'
        title: A list of pipeline resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of pipeline resources
    title: ListPipelinesResponse represents a response for a list of pipelines
  v1alphaListTokensResponse:
    type: object
    properties:
      tokens:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaApiToken'
        title: A list of API tokens resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of API tokens resources
    title: ListTokensResponse represents a response for a list of API tokens
  v1alphaListUserConnectorResourcesResponse:
    type: object
    properties:
      connector_resources:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaConnectorResource'
        title: A list of ConnectorResource resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of connector_resource resources
    title: |-
      ListUserConnectorResourcesResponse represents a response for a list of
      ConnectorResource resources
  v1alphaListUserModelsResponse:
    type: object
    properties:
      models:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaModel'
        title: a list of Models
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of models
    title: ListUserModelsResponse represents a response for a list of models
  v1alphaListUserPipelineReleasesResponse:
    type: object
    properties:
      releases:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPipelineRelease'
        title: A list of pipeline_release resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of pipeline_release resources
    title: ListUserPipelineReleasesResponse represents a response for a list of pipeline_releases
  v1alphaListUserPipelinesResponse:
    type: object
    properties:
      pipelines:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPipeline'
        title: A list of pipeline resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of pipeline resources
    title: ListUserPipelinesResponse represents a response for a list of pipelines
  v1alphaListUsersAdminResponse:
    type: object
    properties:
      users:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaUser'
        title: A list of users
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of users
    title: ListUsersAdminResponse represents a response for a list of users
  v1alphaLookUpConnectorDefinitionAdminResponse:
    type: object
    properties:
      connector_definition:
        $ref: '#/definitions/v1alphaConnectorDefinition'
        title: Connector resource
    title: |-
      LookUpConnectorDefinitionAdminResponse represents a response for a
      connector definition
  v1alphaLookUpConnectorResourceAdminResponse:
    type: object
    properties:
      connector_resource:
        $ref: '#/definitions/v1alphaConnectorResource'
        title: ConnectorResource resource
    title: |-
      LookUpConnectorResourceAdminResponse represents a response for a
      connector_resource
  v1alphaLookUpConnectorResourceResponse:
    type: object
    properties:
      connector_resource:
        $ref: '#/definitions/v1alphaConnectorResource'
        title: ConnectorResource resource
    title: |-
      LookUpConnectorResourceResponse represents a response for a
      connector_resource
  v1alphaLookUpModelAdminResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: A model resource
    title: LookUpModelResponse represents a response for a model
  v1alphaLookUpModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: A model resource
    title: LookUpModelResponse represents a response for a model
  v1alphaLookUpOperatorDefinitionAdminResponse:
    type: object
    properties:
      operator_definition:
        $ref: '#/definitions/v1alphaOperatorDefinition'
        title: operator resource
    title: |-
      LookUpOperatorAdminResponse represents a response for a
      operator
  v1alphaLookUpPipelineAdminResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1alphaPipeline'
        title: A pipeline resource
    title: LookUpPipelineAdminResponse represents a response for a pipeline resource
  v1alphaLookUpPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1alphaPipeline'
        title: A pipeline resource
    title: LookUpPipelineResponse represents a response for a pipeline resource
  v1alphaLookUpUserAdminResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUser'
        title: A user resource
    title: LookUpUserAdminResponse represents a response for a user resource by admin
  v1alphaMgmtUsageData:
    type: object
    properties:
      usages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaUser'
        title: Repeated user usage data
    title: Management service usage data
  v1alphaMode:
    type: string
    enum:
      - MODE_UNSPECIFIED
      - MODE_SYNC
      - MODE_ASYNC
    default: MODE_UNSPECIFIED
    description: |-
      - MODE_UNSPECIFIED: Mode: UNSPECIFIED
       - MODE_SYNC: Mode: SYNC
       - MODE_ASYNC: Mode: ASYNC
    title: Mode enumerates the pipeline modes
  v1alphaModel:
    type: object
    properties:
      name:
        type: string
        title: |-
          Resource name. It must have the format of "users/{user}/models/{model}".
          For example: "users/instill-ai/models/yolov4"
        readOnly: true
      uid:
        type: string
        title: Model ID in UUIDv4
        readOnly: true
      id:
        type: string
        description: |-
          Resource ID (the last segment of the resource name) used to construct the
          resource name. This conforms to RFC-1034, which restricts to letters,
          numbers, and hyphen, with the first character a letter, the last a letter
          or a number, and a 63 character maximum.
      description:
        type: string
        title: Model description
      model_definition:
        type: string
        title: Model definition resource name
      configuration:
        type: object
        title: |-
          Model configuration represents the configuration JSON that has been
          validated using the `model_spec` JSON schema of a ModelDefinition
      task:
        $ref: '#/definitions/v1alphaTask'
        title: Model task
        readOnly: true
      state:
        $ref: '#/definitions/v1alphaModelState'
        title: Model state
        readOnly: true
      visibility:
        $ref: '#/definitions/v1alphaModelVisibility'
        title: Model visibility including public or private
        readOnly: true
      user:
        type: string
        description: |-
          The resource name with UUID of a user, e.g.,
          "users/bfb978f8-78d3-4338-aa2b-a6c699cb07c5".
        readOnly: true
      org:
        type: string
        title: The resource name with UUID of an organization
        readOnly: true
      create_time:
        type: string
        format: date-time
        title: Model create time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: Model update time
        readOnly: true
      delete_time:
        type: string
        format: date-time
        title: Model delete time
        readOnly: true
    title: Model represents a model
  v1alphaModelCard:
    type: object
    properties:
      name:
        type: string
        title: |-
          Resource name. It must have the format of
          "users/{user}/models/{model}/readme"
        readOnly: true
      size:
        type: integer
        format: int32
        title: Size of the file
        readOnly: true
      type:
        type: string
        description: Type of the resource. Fixed to "file".
        readOnly: true
      content:
        type: string
        format: byte
        title: Content of the README file in bytes and base64 format
        readOnly: true
      encoding:
        type: string
        description: Encoding type of the content. Fixed to "base64".
        readOnly: true
    description: |-
      ModelCard represents the README card for a model. There
      exists one and exactly one README card per model.
  v1alphaModelData:
    type: object
    properties:
      uid:
        type: string
        title: Model unique id that is auto generated
      id:
        type: string
        title: Model id that is given by the users
      instance_id:
        type: string
        title: The id of the model instance that is deployed
      task:
        type: string
        title: The AI task supported by this model
    title: Pipeline records definition
    required:
      - uid
      - id
      - instance_id
      - task
  v1alphaModelDefinition:
    type: object
    properties:
      name:
        type: string
        title: |-
          ModelDefinition resource name. It must have the format of
          "model-definitions/{model-definition}"
        readOnly: true
      uid:
        type: string
        title: ModelDefinition ID in UUIDv4
        readOnly: true
      id:
        type: string
        description: |-
          ModelDefinition resource ID (the last segment of the resource name) used to
          construct the resource name.
        readOnly: true
      title:
        type: string
        title: ModelDefinition display official title
        readOnly: true
      documentation_url:
        type: string
        title: ModelDefinition documentation url
        readOnly: true
      icon:
        type: string
        title: ModelDefinition icon
        readOnly: true
      release_stage:
        $ref: '#/definitions/v1alphaReleaseStage'
        title: ModelDefinition release stage
        readOnly: true
      model_spec:
        type: object
        description: |-
          ModelDefinition model specification represents the JSON schema used to
          validate the JSON configurations of a model created from a specific model
          source. Must be a valid JSON that includes what fields are needed to
          create/display a model.
        readOnly: true
      create_time:
        type: string
        format: date-time
        title: ModelDefinition create time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: ModelDefinition update time
        readOnly: true
    title: |-
      /////////////////////////////////////////////////////////////////
      ModelDefinition represents the definition of a model
  v1alphaModelState:
    type: string
    enum:
      - STATE_UNSPECIFIED
      - STATE_OFFLINE
      - STATE_ONLINE
      - STATE_ERROR
    default: STATE_UNSPECIFIED
    description: |-
      - STATE_UNSPECIFIED: State: UNSPECIFIED
       - STATE_OFFLINE: State: OFFLINE
       - STATE_ONLINE: State: ONLINE
       - STATE_ERROR: State: ERROR
    title: State enumerates a model state
  v1alphaModelUsageData:
    type: object
    properties:
      usages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaModelUsageDataUserUsageData'
        title: Usage data of all users in the model service
    title: Model service usage data
  v1alphaModelUsageDataUserUsageData:
    type: object
    properties:
      user_uid:
        type: string
        title: User UUID
      model_trigger_data:
        type: array
        items:
          type: object
          $ref: '#/definitions/UserUsageDataModelTriggerData'
        title: Trigger data for each user
    title: Per user usage data in the model service
    required:
      - user_uid
      - model_trigger_data
  v1alphaModelUsageRecord:
    type: object
    properties:
      deploy_time:
        type: string
        format: date-time
        title: Time when the model is ONLINE
      record_time:
        type: string
        format: date-time
        title: Time when model online usage is recorded
      value:
        type: integer
        format: int32
        title: |-
          The model online usage record that is logged in cumulative manner. This
          value records the cumulative usage since model is online in the current
          billing period
    title: Model online usage record definition
    required:
      - deploy_time
      - record_time
      - value
  v1alphaModelVisibility:
    type: string
    enum:
      - VISIBILITY_UNSPECIFIED
      - VISIBILITY_PRIVATE
      - VISIBILITY_PUBLIC
    default: VISIBILITY_UNSPECIFIED
    description: |-
      - VISIBILITY_UNSPECIFIED: Visibility: UNSPECIFIED, equivalent to PRIVATE.
       - VISIBILITY_PRIVATE: Visibility: PRIVATE
       - VISIBILITY_PUBLIC: Visibility: PUBLIC
    title: Model visibility including public or private
  v1alphaNullMessage:
    type: object
    title: Nul Message for gRPC REQ/RES
  v1alphaOcrInput:
    type: object
    properties:
      image_url:
        type: string
        title: Image type URL
      image_base64:
        type: string
        title: Image type base64
    title: OcrInput represents the input of ocr task
  v1alphaOcrInputStream:
    type: object
    properties:
      file_lengths:
        type: array
        items:
          type: integer
          format: int64
        title: The list of file length for each uploaded binary file
      content:
        type: string
        format: byte
        title: Content of images in bytes
    title: OcrInputStream represents the input of ocr task when using stream method
    required:
      - file_lengths
      - content
  v1alphaOcrObject:
    type: object
    properties:
      text:
        type: string
        title: OCR text
        readOnly: true
      score:
        type: number
        format: float
        title: OCR text score
        readOnly: true
      bounding_box:
        $ref: '#/definitions/v1alphaBoundingBox'
        title: OCR bounding box
        readOnly: true
    title: OcrObject represents a predicted ocr object
  v1alphaOcrOutput:
    type: object
    properties:
      objects:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaOcrObject'
        title: A list of OCR objects
        readOnly: true
    title: OcrOutput represents the output of ocr task
  v1alphaOperatorDefinition:
    type: object
    properties:
      name:
        type: string
        title: |-
          Operator resource name. It must have the format of
          "operator-definitions/*"
        readOnly: true
      uid:
        type: string
        title: Operator UUID
        readOnly: true
      id:
        type: string
        description: |-
          Operator resource ID (the last segment of the
          resource name) used to construct the resource name. This conforms to
          RFC-1034, which restricts to letters, numbers, and hyphen, with the first
          character a letter, the last a letter or a number, and a 63 character
          maximum.
      title:
        type: string
        title: Operator title
        readOnly: true
      documentation_url:
        type: string
        title: Operator documentation URL
        readOnly: true
      icon:
        type: string
        title: Operator icon
        readOnly: true
      spec:
        $ref: '#/definitions/vdppipelinev1alphaSpec'
        title: Operator spec
        readOnly: true
      tombstone:
        type: boolean
        title: |-
          Operator tombstone, i.e., if not set or false, the
          configuration is active, or otherwise, if true, this configuration is
          permanently off
        readOnly: true
      public:
        type: boolean
        title: |-
          Operator public flag, i.e., true if this operator
          definition is available to all workspaces
        readOnly: true
      custom:
        type: boolean
        title: |-
          Operator custom flag, i.e., whether this is a custom
          operator definition
        readOnly: true
      icon_url:
        type: string
        title: Operator iconUrl
        readOnly: true
    title: Operator represents the operator definition data model
  v1alphaOwnerType:
    type: string
    enum:
      - OWNER_TYPE_UNSPECIFIED
      - OWNER_TYPE_USER
      - OWNER_TYPE_ORGANIZATION
    default: OWNER_TYPE_UNSPECIFIED
    description: |-
      - OWNER_TYPE_UNSPECIFIED: OwnerType: UNSPECIFIED
       - OWNER_TYPE_USER: OwnerType: USER
       - OWNER_TYPE_ORGANIZATION: OwnerType: ORGANIZATION
    title: OwnerType enumerates the owner type of any resource
  v1alphaPatchAuthenticatedUserResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUser'
        title: A user resource
    title: |-
      PatchAuthenticatedUserResponse represents a response for
      the authenticated user resource
  v1alphaPipeline:
    type: object
    properties:
      name:
        type: string
        title: Pipeline resource name. It must have the format of "users/{user}/pipelines/*"
        readOnly: true
      uid:
        type: string
        title: Pipeline UUID
        readOnly: true
      id:
        type: string
        description: |-
          Pipeline resource ID (the last segment of the resource name) used to
          construct the resource name. This conforms to RFC-1034, which restricts to
          letters, numbers, and hyphen, with the first character a letter, the last a
          letter or a number, and a 63 character maximum.
      description:
        type: string
        title: Pipeline description
      recipe:
        $ref: '#/definitions/v1alphaRecipe'
        title: Pipeline recipe
      user:
        type: string
        description: |-
          The resource name with UUID of a user, e.g.,
          "users/bfb978f8-78d3-4338-aa2b-a6c699cb07c5".
        readOnly: true
      org:
        type: string
        title: The resource name with UUID of an organization
        readOnly: true
      create_time:
        type: string
        format: date-time
        title: Pipeline creation time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: Pipeline update time
        readOnly: true
      visibility:
        $ref: '#/definitions/pipelinev1alphaVisibility'
        title: Visibility
      openapi_schema:
        type: object
        title: OpenAPI schema
        readOnly: true
      delete_time:
        type: string
        format: date-time
        title: Pipeline delete time
        readOnly: true
    title: Pipeline represents the content of a pipeline
  v1alphaPipelineData:
    type: object
    properties:
      uid:
        type: string
        title: Pipeline unique id that is auto generated
      id:
        type: string
        title: Pipeline id assigned by users
      task:
        type: string
        title: Pipeline task indicate the AI task this pipeline supports
    title: Pipeline records definition
    required:
      - uid
      - id
      - task
  v1alphaPipelineRelease:
    type: object
    properties:
      name:
        type: string
        title: PipelineRelease resource name. It must have the format of "users/*/pipelines/*/releases/*"
        readOnly: true
      uid:
        type: string
        title: PipelineRelease UUID
        readOnly: true
      id:
        type: string
        title: |-
          PipelineRelease resource ID (the last segment of the resource name) used to
          construct the resource name. Must be a sematic version vX.Y.Z
      description:
        type: string
        title: PipelineRelease description
      recipe:
        $ref: '#/definitions/v1alphaRecipe'
        title: Pipeline recipe snapshot
        readOnly: true
      create_time:
        type: string
        format: date-time
        title: Pipeline creation time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: Pipeline update time
        readOnly: true
      visibility:
        $ref: '#/definitions/pipelinev1alphaVisibility'
        title: Visibility
      openapi_schema:
        type: object
        title: OpenAPI schema
        readOnly: true
      delete_time:
        type: string
        format: date-time
        title: Pipeline delete time
        readOnly: true
    title: PipelineRelease represents the content of a pipeline release
  v1alphaPipelineTriggerChartRecord:
    type: object
    properties:
      pipeline_id:
        type: string
        title: ID for the triggered pipeline
      pipeline_uid:
        type: string
        title: UID for the triggered pipeline
      trigger_mode:
        $ref: '#/definitions/v1alphaMode'
        title: Trigger mode
      status:
        $ref: '#/definitions/mgmtv1alphaStatus'
        title: Status of pipeline trigger
        readOnly: true
      time_buckets:
        type: array
        items:
          type: string
          format: date-time
        title: Time buckets
        readOnly: true
      trigger_counts:
        type: array
        items:
          type: integer
          format: int32
        title: Aggregated trigger count in each time bucket
        readOnly: true
      compute_time_duration:
        type: array
        items:
          type: number
          format: float
        title: Total compute time duration in each time bucket
        readOnly: true
      pipeline_release_id:
        type: string
        title: Version for the triggered pipeline if it is a release pipeline, else emtpy
        readOnly: true
      pipeline_release_uid:
        type: string
        title: UID for the triggered pipeline if it is a release pipeline, else emtpy
        readOnly: true
    title: PipelineTriggerChartRecord represents a aggregated chart record for pipeline trigger
  v1alphaPipelineTriggerRecord:
    type: object
    properties:
      trigger_time:
        type: string
        format: date-time
        title: Timestamp for the pipeline trigger time
      pipeline_trigger_id:
        type: string
        title: UID for each pipeline trigger
      pipeline_id:
        type: string
        title: ID for the triggered pipeline
      pipeline_uid:
        type: string
        title: UID for the triggered pipeline
      trigger_mode:
        $ref: '#/definitions/v1alphaMode'
        title: Trigger mode
      compute_time_duration:
        type: number
        format: float
        title: Total compute time duration for this pipeline trigger
        readOnly: true
      status:
        $ref: '#/definitions/mgmtv1alphaStatus'
        title: Final status for pipeline trigger
        readOnly: true
      pipeline_release_id:
        type: string
        title: Version for the triggered pipeline if it is a release pipeline, else emtpy
        readOnly: true
      pipeline_release_uid:
        type: string
        title: UID for the triggered pipeline if it is a release pipeline, else emtpy
        readOnly: true
    title: PipelineTriggerRecord represents a record for pipeline trigger
  v1alphaPipelineTriggerTableRecord:
    type: object
    properties:
      pipeline_id:
        type: string
        title: ID for the triggered pipeline
      pipeline_uid:
        type: string
        title: UID for the triggered pipeline
      trigger_count_completed:
        type: integer
        format: int32
        title: Trigger count with STATUS_COMPLETED
        readOnly: true
      trigger_count_errored:
        type: integer
        format: int32
        title: Trigger count with STATUS_ERRORED
        readOnly: true
      pipeline_release_id:
        type: string
        title: Version for the triggered pipeline if it is a release pipeline, else emtpy
        readOnly: true
      pipeline_release_uid:
        type: string
        title: UID for the triggered pipeline if it is a release pipeline, else emtpy
        readOnly: true
    title: PipelineTriggerTableRecord represents a aggregated table record for pipeline trigger
  v1alphaPipelineUsageData:
    type: object
    properties:
      usages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPipelineUsageDataUserUsageData'
        title: Usage data of all users in the pipeline service
    title: Pipeline service usage data
  v1alphaPipelineUsageDataUserUsageData:
    type: object
    properties:
      user_uid:
        type: string
        title: User UUID
      pipeline_trigger_data:
        type: array
        items:
          type: object
          $ref: '#/definitions/UserUsageDataPipelineTriggerData'
        title: Trigger data for each user
    title: Per user usage data in the pipeline service
    required:
      - user_uid
      - pipeline_trigger_data
  v1alphaPipelineUsageRecord:
    type: object
    properties:
      request_id:
        type: string
        description: A unique request id given by vdp when trigger the pipeline.
      operation_id:
        type: string
        title: A unique operation id given by vdp
      status:
        type: string
        title: The HTTP status received when user trigger the pipeline
      trigger_time:
        type: string
        format: date-time
        title: Time when the pipeline is triggered
      record_time:
        type: string
        format: date-time
        title: Time when the pipeline trigger usage is recorded
      value:
        type: integer
        format: int32
        title: |-
          The pipeline trigger usage record. The unit of the usage should be
          consistent with Stripe
    title: Pipeline trigger usage record definition
    required:
      - request_id
      - operation_id
      - status
      - trigger_time
      - record_time
      - value
  v1alphaPriceData:
    type: object
    properties:
      time:
        $ref: '#/definitions/v1alphaTimeInterval'
        title: Time when the price record is generated
      currency:
        type: string
        title: The currency of the price
        readOnly: true
      amount:
        type: number
        format: float
        title: The price of the query usage in the current billing period
        readOnly: true
    title: Pricing information
    required:
      - time
  v1alphaPublishUserModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: Published model
    title: PublishUserModelResponse represents a response for the published model
  v1alphaQueryAuthenticatedUserResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUser'
        title: A user resource
    title: |-
      QueryAuthenticatedUserResponse represents a response for
      the authenticated user resource
  v1alphaRecipe:
    type: object
    properties:
      version:
        type: string
        title: Recipe schema version
      components:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaComponent'
        title: List of pipeline components
    title: Pipeline represents a pipeline recipe
  v1alphaReleaseStage:
    type: string
    enum:
      - RELEASE_STAGE_UNSPECIFIED
      - RELEASE_STAGE_ALPHA
      - RELEASE_STAGE_BETA
      - RELEASE_STAGE_GENERALLY_AVAILABLE
      - RELEASE_STAGE_CUSTOM
    default: RELEASE_STAGE_UNSPECIFIED
    description: |-
      - RELEASE_STAGE_UNSPECIFIED: ReleaseStage: UNSPECIFIED
       - RELEASE_STAGE_ALPHA: ReleaseStage: ALPHA
       - RELEASE_STAGE_BETA: ReleaseStage: BETA
       - RELEASE_STAGE_GENERALLY_AVAILABLE: ReleaseStage: GENERALLY_AVAILABLE
       - RELEASE_STAGE_CUSTOM: ReleaseStage: CUSTOM
    title: ReleaseStage enumerates the release stages
  v1alphaRenameUserConnectorResourceResponse:
    type: object
    properties:
      connector_resource:
        $ref: '#/definitions/v1alphaConnectorResource'
        title: A ConnectorResource resource
    title: |-
      RenameUserConnectorResourceResponse represents a renamed ConnectorResource
      resource
  v1alphaRenameUserModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: Renamed model
    title: RenameUserModelResponse represents a response for a model
  v1alphaRenameUserPipelineReleaseResponse:
    type: object
    properties:
      release:
        $ref: '#/definitions/v1alphaPipelineRelease'
        title: A pipeline resource
    title: RenameUserPipelineReleaseResponse represents a renamed pipeline release resource
  v1alphaRenameUserPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1alphaPipeline'
        title: A pipeline resource
    title: RenameUserPipelineResponse represents a renamed pipeline resource
  v1alphaReportModelOnlineRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUserData'
        title: User information
      model:
        $ref: '#/definitions/v1alphaModelData'
        title: Model information
      cum_usage_record:
        $ref: '#/definitions/v1alphaModelUsageRecord'
        title: Model online record
    title: |-
      ReportModelOnlineRequest represents a request for reporting a model-online
      record
    required:
      - user
      - model
      - cum_usage_record
  v1alphaReportModelOnlineResponse:
    type: object
    properties:
      "null":
        $ref: '#/definitions/v1alphaNullMessage'
        title: Null message for empty response
    title: |-
      ReportModelOnlineResponse represents a respond to a model-online-record
      report request
  v1alphaReportModelOnlinesResponse:
    type: object
    properties:
      "null":
        $ref: '#/definitions/v1alphaNullMessage'
        title: Null message for empty response
    title: |-
      ReportModelOnlinesResponse represents a respond to a model-online-records
      reporting bulk request
  v1alphaReportPipelineTriggerRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUserData'
        title: User information
      pipeline:
        $ref: '#/definitions/v1alphaPipelineData'
        title: Pipeline information
      usage_record:
        $ref: '#/definitions/v1alphaPipelineUsageRecord'
        title: Pipeline trigger record
    title: |-
      ReportPipelineTriggerRequest represents a request for reporting a
      pipeline-trigger record
    required:
      - user
      - pipeline
      - usage_record
  v1alphaReportPipelineTriggerResponse:
    type: object
    properties:
      "null":
        $ref: '#/definitions/v1alphaNullMessage'
        title: Null message for empty response
    title: |-
      ReportPipelineTriggerResponse represents a respond to a
      pipeline-trigger-record report request
  v1alphaReportPipelineTriggersResponse:
    type: object
    properties:
      "null":
        $ref: '#/definitions/v1alphaNullMessage'
        title: Null message for empty response
    title: |-
      ReportPipelineTriggersResponse represents a respond to a
      pipeline-trigger-records reporting bulk request
  v1alphaRestoreUserPipelineReleaseResponse:
    type: object
    properties:
      release:
        $ref: '#/definitions/v1alphaPipelineRelease'
        title: A pipeline resource
    title: RestoreUserPipelineReleaseResponse
  v1alphaSemanticSegmentationInput:
    type: object
    properties:
      image_url:
        type: string
        title: Image type URL
      image_base64:
        type: string
        title: Image type base64
    title: SemanticSegmentationInput represents the input of semantic segmentation task
  v1alphaSemanticSegmentationInputStream:
    type: object
    properties:
      file_lengths:
        type: array
        items:
          type: integer
          format: int64
        title: The list of file length for each uploaded binary file
      content:
        type: string
        format: byte
        title: Content of images in bytes
    title: |-
      SemanticSegmentationInputStream represents the input of semantic segmentation
      task when using stream method
    required:
      - file_lengths
      - content
  v1alphaSemanticSegmentationOutput:
    type: object
    properties:
      stuffs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaSemanticSegmentationStuff'
        title: A list of semantic segmentation stuffs
        readOnly: true
    title: |-
      SemanticSegmentationOutput represents the output of semantic segmentation
      task
  v1alphaSemanticSegmentationStuff:
    type: object
    properties:
      rle:
        type: string
        title: RLE segmentation mask
        readOnly: true
      category:
        type: string
        title: Stuff category
        readOnly: true
    title: SemanticSegmentationStuff corresponding to a semantic segmentation stuff
  v1alphaSendSessionReportResponse:
    type: object
    title: SendReportResponse represents an empty response
  v1alphaSession:
    type: object
    properties:
      name:
        type: string
        title: Resource name in the format of 'sessions/uid'
        readOnly: true
      uid:
        type: string
        title: Resource UUID
        readOnly: true
      service:
        $ref: '#/definitions/SessionService'
        title: name of the service to collect data from
      edition:
        type: string
        title: 'Session edition, allowed values include: ''local-ce'' and ''local-ce:dev'''
      version:
        type: string
        title: Version of the service
      arch:
        type: string
        title: Architecture of the system
      os:
        type: string
        title: Operating system
      uptime:
        type: string
        format: int64
        title: Session service uptime
      report_time:
        type: string
        format: date-time
        title: Report time
      token:
        type: string
        description: |-
          Token to send report. The token is generated by the server and sent to
          the client. Client needs to use the token to send report to the server.
        readOnly: true
      create_time:
        type: string
        format: date-time
        title: Session creation time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: Session update time
        readOnly: true
      owner_uid:
        type: string
        title: Owner UUID of the instance, can also be considered as instance UUID
    title: |-
      Session represents a unique session whenever a new instance of VDP service
      gets started. The usage server returns a token that should be used as part of
      the challenge when sending a report with data collected from this session
    required:
      - service
      - edition
      - version
      - arch
      - os
      - uptime
      - report_time
      - owner_uid
  v1alphaSessionReport:
    type: object
    properties:
      session_uid:
        type: string
        title: Session uid
      token:
        type: string
        title: Session token
      pow:
        type: string
        title: Proof-of-work See https://en.wikipedia.org/wiki/Proof_of_work
      session:
        $ref: '#/definitions/v1alphaSession'
        title: Session
      mgmt_usage_data:
        $ref: '#/definitions/v1alphaMgmtUsageData'
        title: Management service usage data
      connector_usage_data:
        $ref: '#/definitions/v1alphaConnectorUsageData'
        title: Connector service usage data
      model_usage_data:
        $ref: '#/definitions/v1alphaModelUsageData'
        title: Model service usage data
      pipeline_usage_data:
        $ref: '#/definitions/v1alphaPipelineUsageData'
        title: Pipeline service usage data
    title: |-
      SessionReport represents a report to be sent to the server that includes the
      usage data of a session
    required:
      - session_uid
      - token
      - pow
      - session
  v1alphaSetDefaultUserPipelineReleaseResponse:
    type: object
    properties:
      release:
        $ref: '#/definitions/v1alphaPipelineRelease'
        title: A pipeline resource
    title: SetDefaultUserPipelineReleaseResponse
  v1alphaTask:
    type: string
    enum:
      - TASK_UNSPECIFIED
      - TASK_CLASSIFICATION
      - TASK_DETECTION
      - TASK_KEYPOINT
      - TASK_OCR
      - TASK_INSTANCE_SEGMENTATION
      - TASK_SEMANTIC_SEGMENTATION
      - TASK_TEXT_TO_IMAGE
      - TASK_TEXT_GENERATION
      - TASK_IMAGE_TO_IMAGE
      - TASK_TEXT_EMBEDDINGS
      - TASK_SPEECH_RECOGNITION
    default: TASK_UNSPECIFIED
    description: |-
      - TASK_UNSPECIFIED: Task: UNSPECIFIED
       - TASK_CLASSIFICATION: Task: CLASSIFICATION
       - TASK_DETECTION: Task: DETECTION
       - TASK_KEYPOINT: Task: KEYPOINT
       - TASK_OCR: Task: OCR
       - TASK_INSTANCE_SEGMENTATION: Task: INSTANCE SEGMENTATION
       - TASK_SEMANTIC_SEGMENTATION: Task: SEMANTIC SEGMENTATION
       - TASK_TEXT_TO_IMAGE: Task: TEXT TO IMAGE
       - TASK_TEXT_GENERATION: Task: TEXT GENERATION
       - TASK_IMAGE_TO_IMAGE: Task: IMAGE TO IMAGE
       - TASK_TEXT_EMBEDDINGS: Task: TEXT EMBEDDINGS
       - TASK_SPEECH_RECOGNITION: Task: SPEECH RECOGNITION
    title: Task enumerates the AI task type
  v1alphaTaskInput:
    type: object
    properties:
      classification:
        $ref: '#/definitions/v1alphaClassificationInput'
        title: The classification input
      detection:
        $ref: '#/definitions/v1alphaDetectionInput'
        title: The detection input
      keypoint:
        $ref: '#/definitions/v1alphaKeypointInput'
        title: The keypoint input
      ocr:
        $ref: '#/definitions/v1alphaOcrInput'
        title: The ocr input
      instance_segmentation:
        $ref: '#/definitions/v1alphaInstanceSegmentationInput'
        title: The instance segmentation input
      semantic_segmentation:
        $ref: '#/definitions/v1alphaSemanticSegmentationInput'
        title: The semantic segmentation input
      text_to_image:
        $ref: '#/definitions/v1alphaTextToImageInput'
        title: The text to image input
      text_generation:
        $ref: '#/definitions/v1alphaTextGenerationInput'
        title: The text generation input
      unspecified:
        $ref: '#/definitions/v1alphaUnspecifiedInput'
        title: The unspecified task input
    title: Input represents the input to trigger a model
  v1alphaTaskInputStream:
    type: object
    properties:
      classification:
        $ref: '#/definitions/v1alphaClassificationInputStream'
        title: The classification input
      detection:
        $ref: '#/definitions/v1alphaDetectionInputStream'
        title: The detection input
      keypoint:
        $ref: '#/definitions/v1alphaKeypointInputStream'
        title: The keypoint input
      ocr:
        $ref: '#/definitions/v1alphaOcrInputStream'
        title: The ocr input
      instance_segmentation:
        $ref: '#/definitions/v1alphaInstanceSegmentationInputStream'
        title: The instance segmentation input
      semantic_segmentation:
        $ref: '#/definitions/v1alphaSemanticSegmentationInputStream'
        title: The semantic segmentation input
      text_to_image:
        $ref: '#/definitions/v1alphaTextToImageInput'
        title: The text to image input
      text_generation:
        $ref: '#/definitions/v1alphaTextGenerationInput'
        title: The text generation input
      unspecified:
        $ref: '#/definitions/v1alphaUnspecifiedInput'
        title: The unspecified task input
    title: TaskInputStream represents the input to trigger a model with stream method
  v1alphaTaskOutput:
    type: object
    properties:
      classification:
        $ref: '#/definitions/v1alphaClassificationOutput'
        title: The classification output
        readOnly: true
      detection:
        $ref: '#/definitions/v1alphaDetectionOutput'
        title: The detection output
        readOnly: true
      keypoint:
        $ref: '#/definitions/v1alphaKeypointOutput'
        title: The keypoint output
        readOnly: true
      ocr:
        $ref: '#/definitions/v1alphaOcrOutput'
        title: The ocr output
        readOnly: true
      instance_segmentation:
        $ref: '#/definitions/v1alphaInstanceSegmentationOutput'
        title: The instance segmentation output
        readOnly: true
      semantic_segmentation:
        $ref: '#/definitions/v1alphaSemanticSegmentationOutput'
        title: The semantic segmentation output
        readOnly: true
      text_to_image:
        $ref: '#/definitions/v1alphaTextToImageOutput'
        title: The text to image output
        readOnly: true
      text_generation:
        $ref: '#/definitions/v1alphaTextGenerationOutput'
        title: The text generation output
        readOnly: true
      unspecified:
        $ref: '#/definitions/v1alphaUnspecifiedOutput'
        title: The unspecified task output
        readOnly: true
    title: TaskOutput represents the output of a CV Task result from a model
  v1alphaTestUserConnectorResourceResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1alphaConnectorResourceState'
        title: Retrieved connector_resource state
    title: |-
      TestUserConnectorResourceResponse represents a response containing a
      connector_resource's current state
  v1alphaTestUserModelBinaryFileUploadResponse:
    type: object
    properties:
      task:
        $ref: '#/definitions/v1alphaTask'
        title: The task type
      task_outputs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaTaskOutput'
        title: The task output from a model
    title: |-
      TestUserModelBinaryFileUploadResponse represents a response for the
      output for testing a model
    required:
      - task
      - task_outputs
  v1alphaTestUserModelResponse:
    type: object
    properties:
      task:
        $ref: '#/definitions/v1alphaTask'
        title: The task type
      task_outputs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaTaskOutput'
        title: The task output from a model
    title: |-
      TestUserModelResponse represents a response for the output for
      testing a model
    required:
      - task
      - task_outputs
  v1alphaTextGenerationInput:
    type: object
    properties:
      prompt:
        type: string
        title: The prompt text
      output_len:
        type: integer
        format: int32
        title: The maximum number of tokens for model to generate
      bad_words_list:
        type: string
        title: The words not to avoid being generated by the model
      stop_words_list:
        type: string
        title: The trigger words to stop generation
      topk:
        type: integer
        format: int32
        title: Top k for sampling
      seed:
        type: integer
        format: int32
        title: The seed
    title: TextGenerationInput represents the input of text generation task
    required:
      - prompt
  v1alphaTextGenerationOutput:
    type: object
    properties:
      text:
        type: string
        title: The text generated by the model
        readOnly: true
    title: TextGenerationOutput represents the output of text generation task
  v1alphaTextToImageInput:
    type: object
    properties:
      prompt:
        type: string
        title: The prompt text
      steps:
        type: integer
        format: int32
        title: The steps, default is 5
      cfg_scale:
        type: number
        format: float
        title: The guidance scale, default is 7.5
      seed:
        type: integer
        format: int32
        title: The seed, default is 0
      samples:
        type: integer
        format: int32
        title: The number of generated samples, default is 1
    title: TextToImageInput represents the input of text to image task
    required:
      - prompt
  v1alphaTextToImageOutput:
    type: object
    properties:
      images:
        type: array
        items:
          type: string
        title: List of generated images
        readOnly: true
    title: TextToImageOutput represents the output of text to image task
  v1alphaTimeInterval:
    type: object
    properties:
      start_time:
        type: string
        format: date-time
        title: Start time of the interval
      end_time:
        type: string
        format: date-time
        title: End time of the interval
    title: Time interval
    required:
      - start_time
      - end_time
  v1alphaTrace:
    type: object
    properties:
      success:
        type: boolean
        title: Success or not
      inputs:
        type: array
        items:
          type: object
        title: Inputs of the component
      outputs:
        type: array
        items:
          type: object
        title: Outputs of the component
      error:
        type: object
        title: Error of the component
      compute_time_in_seconds:
        type: number
        format: float
        title: Compute Time
    title: Trace for the intermediate component
  v1alphaTriggerAsyncUserPipelineReleaseResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: Trigger async pipeline operation message
        readOnly: true
    title: |-
      TriggerAsyncUserPipelineReleaseResponse represents a response for the longrunning
      operation of a pipeline
  v1alphaTriggerAsyncUserPipelineResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: Trigger async pipeline operation message
        readOnly: true
    title: |-
      TriggerAsyncUserPipelineResponse represents a response for the longrunning
      operation of a pipeline
  v1alphaTriggerMetadata:
    type: object
    properties:
      traces:
        type: object
        additionalProperties:
          $ref: '#/definitions/v1alphaTrace'
        title: 'The traces of the pipeline inference, {component_id: Trace}'
    title: The metadata
  v1alphaTriggerUserModelBinaryFileUploadResponse:
    type: object
    properties:
      task:
        $ref: '#/definitions/v1alphaTask'
        title: The task type
      task_outputs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaTaskOutput'
        title: The task output from a model
    title: |-
      TriggerUserModelBinaryFileUploadResponse represents a response for the
      output for testing a model
    required:
      - task
      - task_outputs
  v1alphaTriggerUserModelResponse:
    type: object
    properties:
      task:
        $ref: '#/definitions/v1alphaTask'
        title: The task type
      task_outputs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaTaskOutput'
        title: The task output from a model
    title: |-
      TriggerUserModelResponse represents a response for the output for
      triggering a model
  v1alphaTriggerUserPipelineReleaseResponse:
    type: object
    properties:
      outputs:
        type: array
        items:
          type: object
        title: The multiple model inference outputs
      metadata:
        $ref: '#/definitions/v1alphaTriggerMetadata'
        title: 'The traces of the pipeline inference, {component_id: Trace}'
    title: |-
      TriggerUserPipelineReleaseResponse represents a response for the output
      of a pipeline, i.e., the multiple model inference outputs
  v1alphaTriggerUserPipelineResponse:
    type: object
    properties:
      outputs:
        type: array
        items:
          type: object
        title: The multiple model inference outputs
      metadata:
        $ref: '#/definitions/v1alphaTriggerMetadata'
        title: 'The traces of the pipeline inference, {component_id: Trace}'
    title: |-
      TriggerUserPipelineResponse represents a response for the output
      of a pipeline, i.e., the multiple model inference outputs
  v1alphaUndeployModelAdminResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: Undeploy operation message
    title: UndeployModelAdminResponse represents a response for a undeployed model
  v1alphaUndeployUserModelResponse:
    type: object
    properties:
      model_id:
        type: string
        title: |-
          Undeployed model's id
          Format: users/{user}/models/{model}
    title: UndeployUserModelResponse represents a response for a undeployed model
  v1alphaUnpublishUserModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: Unpublished model
    title: UnpublishUserModelResponse represents a response for the unpublished model
  v1alphaUnspecifiedInput:
    type: object
    properties:
      raw_inputs:
        type: array
        items:
          type: object
        title: A list of unspecified task inputs
    title: UnspecifiedInput represents the input of unspecified task
  v1alphaUnspecifiedOutput:
    type: object
    properties:
      raw_outputs:
        type: array
        items:
          type: object
        title: A list of unspecified task outputs
        readOnly: true
    title: UnspecifiedOutput represents the output of unspecified task
  v1alphaUpdateUserAdminResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1alphaUser'
        title: A user resource
    title: UpdateUserAdminResponse represents a response for a user resource
  v1alphaUpdateUserConnectorResourceResponse:
    type: object
    properties:
      connector_resource:
        $ref: '#/definitions/v1alphaConnectorResource'
        title: ConnectorResource resource
    title: |-
      UpdateUserConnectorResourceResponse represents a response for a
      ConnectorResource resource
  v1alphaUpdateUserModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: The updated model
    title: UpdateUserModelResponse represents a response for a model
  v1alphaUpdateUserPipelineReleaseResponse:
    type: object
    properties:
      release:
        $ref: '#/definitions/v1alphaPipelineRelease'
        title: An updated pipeline resource
    title: UpdateUserPipelineReleaseResponse represents a response for a pipeline resource
  v1alphaUpdateUserPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1alphaPipeline'
        title: An updated pipeline resource
    title: UpdateUserPipelineResponse represents a response for a pipeline resource
  v1alphaUsageSummary:
    type: object
    properties:
      time:
        type: string
        format: date-time
        title: Time when the summary is generated
      value:
        type: integer
        format: int32
        title: The total usage since the beginning of the current billing period
    title: Usage summary definition
    required:
      - time
      - value
  v1alphaUser:
    type: object
    properties:
      name:
        type: string
        description: |-
          Resource name. It must have the format of "users/*".
          For example: "users/local-user".
        readOnly: true
      uid:
        type: string
        description: |-
          User ID in UUIDv4. This field is optionally set by users
          (optional on resource creation, server-generated if unset).
      id:
        type: string
        description: |-
          Resource ID (the last segment of the resource name), also the user
          username. This conforms to RFC-1034, which restricts to letters, numbers,
          and hyphen, with the first character a letter, the last a letter or a
          number, and a 63 character maximum.
          Note that the ID can be updated.
      type:
        $ref: '#/definitions/v1alphaOwnerType'
        title: 'Owner type: fixed to `OWNER_TYPE_USER`'
        readOnly: true
      create_time:
        type: string
        format: date-time
        title: User creation time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: User update time
        readOnly: true
      email:
        type: string
        title: User email
      customer_id:
        type: string
        description: Stripe customer ID. This field is used in Instill Cloud.
        readOnly: true
      first_name:
        type: string
        title: User first name
      last_name:
        type: string
        title: User last name
      org_name:
        type: string
        title: User company or institution name
      role:
        type: string
        title: |-
          User role. Allowed roles:
           - "manager"
           - "ai-researcher"
           - "ai-engineer"
           - "data-engineer",
           - "data-scientist",
           - "analytics-engineer"
           - "hobbyist"
      newsletter_subscription:
        type: boolean
        title: User newsletter subscription
      cookie_token:
        type: string
        title: User console cookie token
    title: User represents the content of a user
    required:
      - id
      - email
      - newsletter_subscription
  v1alphaUserData:
    type: object
    properties:
      uid:
        type: string
        title: User unique id
      name:
        type: string
        title: User name, which is not necessary for service queries
    title: User records definition
    required:
      - uid
  v1alphaValidateTokenResponse:
    type: object
    properties:
      user_uid:
        type: string
        title: user_uid
        readOnly: true
    title: Response for validating the token
  v1alphaValidateUserPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1alphaPipeline'
        title: A pipeline resource
    title: ValidateUserPipelineResponse represents an response of validated pipeline
  v1alphaWatchUserConnectorResourceResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1alphaConnectorResourceState'
        title: Retrieved connector_resource state
    title: |-
      WatchUserConnectorResourceResponse represents a response to fetch a
      connector_resource's current state
  v1alphaWatchUserModelResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1alphaModelState'
        title: Retrieved model state
      progress:
        type: integer
        format: int32
        title: Retrieved model logrunning progress
    title: |-
      WatchUserModelResponse represents a public response to
      fetch a model current state and longrunning progress
  v1alphaWatchUserPipelineReleaseResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/pipelinev1alphaState'
        title: Retrieved pipeline state
    title: |-
      WatchUserPipelineReleaseResponse represents a response to fetch a pipeline's
      current state
  vdpconnectorv1alphaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  vdpconnectorv1alphaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  vdpconnectorv1alphaSpec:
    type: object
    properties:
      resource_specification:
        type: object
        title: Spec resource specification
      component_specification:
        type: object
        title: Spec connector specification
      openapi_specifications:
        type: object
        title: Spec openapi specification
    title: |-
      //////////////////////////////////
      Spec represents a spec data model
    required:
      - resource_specification
      - component_specification
      - openapi_specifications
  vdpconnectorv1alphaView:
    type: string
    enum:
      - VIEW_UNSPECIFIED
      - VIEW_BASIC
      - VIEW_FULL
      - VIEW_CONFIGURATION
    default: VIEW_UNSPECIFIED
    description: |-
      - VIEW_UNSPECIFIED: View: UNSPECIFIED
       - VIEW_BASIC: View: BASIC
       - VIEW_FULL: View: FULL
       - VIEW_CONFIGURATION: View: CONFIGURATION
    title: View enumerates the definition views
  vdpcontrollerv1alphaDeleteResourceResponse:
    type: object
    title: DeleteResourceResponse represents an empty response
  vdpcontrollerv1alphaGetResourceResponse:
    type: object
    properties:
      resource:
        $ref: '#/definitions/vdpcontrollerv1alphaResource'
        title: Retrieved resource state
    title: GetResourceResponse represents a response to fetch a resource's state
  vdpcontrollerv1alphaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  vdpcontrollerv1alphaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  vdpcontrollerv1alphaResource:
    type: object
    properties:
      resource_permalink:
        type: string
        title: |-
          Permalink of a resouce. For example:
          "resources/{resource_uuid}/types/{type}"
      pipeline_state:
        $ref: '#/definitions/pipelinev1alphaState'
        title: Pipeline state
      connector_state:
        $ref: '#/definitions/v1alphaConnectorResourceState'
        title: ConnectorResource state
      backend_state:
        $ref: '#/definitions/HealthCheckResponseServingStatus'
        title: Backend service state
      progress:
        type: integer
        format: int32
        title: Resource longrunning progress
    title: Resource represents the current information of a resource
    required:
      - resource_permalink
  vdpcontrollerv1alphaUpdateResourceResponse:
    type: object
    properties:
      resource:
        $ref: '#/definitions/vdpcontrollerv1alphaResource'
        title: Updated resource state
    title: UpdateResourceResponse represents a response to update a resource's state
  vdppipelinev1alphaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  vdppipelinev1alphaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1alphaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  vdppipelinev1alphaSpec:
    type: object
    properties:
      component_specification:
        type: object
        title: Spec operator specification
    title: View enumerates the definition views
    required:
      - component_specification
  vdppipelinev1alphaView:
    type: string
    enum:
      - VIEW_UNSPECIFIED
      - VIEW_BASIC
      - VIEW_FULL
      - VIEW_RECIPE
    default: VIEW_UNSPECIFIED
    description: |-
      View represents a view of any resource. The resource view is implemented by
      adding a parameter to the method request which allows the client to specify
      which view of the resource it wants to receive in the response.

       - VIEW_UNSPECIFIED: View: UNSPECIFIED
       - VIEW_BASIC: View: BASIC
       - VIEW_FULL: View: FULL
       - VIEW_RECIPE: View: RECIPE: will return recipe
