swagger: "2.0"
info:
  title: "\U0001F52E Core"
  description: Core endpoints to manage user resources
  version: v0.26.0-beta
  contact:
    name: Instill AI
    url: https://github.com/instill-ai
    email: hello@instill.tech
  license:
    name: Elastic License 2.0 (ELv2)
    url: https://github.com/instill-ai/protobufs/blob/main/LICENSE
tags:
  - name: MgmtPublicService
    description: Public Core endpoints
host: api.instill.tech
basePath: /core
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1beta/{organization_membership_name}:
    delete:
      summary: Delete an organization membership
      description: Deletes a user membership within an organization.
      operationId: MgmtPublicService_DeleteOrganizationMembership
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaDeleteOrganizationMembershipResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization_membership_name
          description: |-
            The resource name of the membership, which allows its access by
            organization and user ID.
            - Format: `organizations/{organization.id}/memberships/{user.id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/memberships/[^/]+
      tags:
        - MgmtPublicService
  /v1beta/user:
    get:
      summary: Get the authenticated user
      description: Returns the details of the authenticated user.
      operationId: MgmtPublicService_GetAuthenticatedUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetAuthenticatedUserResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      tags:
        - MgmtPublicService
    patch:
      summary: Update the authenticated user
      description: |-
        Updates the information of the authenticated user.

        In REST requests, only the supplied user fields will be taken into account
        when updating the resource.
      operationId: MgmtPublicService_PatchAuthenticatedUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaPatchAuthenticatedUserResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user
          description: The user fields that will replace the existing ones.
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1betaAuthenticatedUser'
      tags:
        - MgmtPublicService
  /v1beta/users:
    get:
      summary: List users
      description: Returns a paginated list of users.
      operationId: MgmtPublicService_ListUsers
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListUsersResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of users to return. If this parameter is unspecified,
            at most 10 pipelines will be returned. The cap value for this parameter is
            100 (i.e. any value above that will be coerced to 100).
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token.
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View allows clients to specify the desired resource view in the response.

             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
        - name: filter
          description: |-
            Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
            expression.
            - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1beta/{user_membership_name}:
    delete:
      summary: Delete a user membership
      description: Accesses and deletes a user membership by parent and membership IDs.
      operationId: MgmtPublicService_DeleteUserMembership
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaDeleteUserMembershipResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user_membership_name
          description: |-
            The resource name of the membership, which allows its access by user and
            organization ID.
            - Format: `users/{user.id}/memberships/{organization.id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/memberships/[^/]+
      tags:
        - MgmtPublicService
definitions:
  HealthCheckResponseServingStatus:
    type: string
    enum:
      - SERVING_STATUS_SERVING
      - SERVING_STATUS_NOT_SERVING
    description: |-
      - SERVING_STATUS_SERVING: Serving status: SERVING
       - SERVING_STATUS_NOT_SERVING: Serving status: NOT SERVING
    title: ServingStatus enumerates the status of a queried service
  SessionService:
    type: string
    enum:
      - SERVICE_MGMT
      - SERVICE_CONNECTOR
      - SERVICE_MODEL
      - SERVICE_PIPELINE
      - SERVICE_ARTIFACT
    description: |-
      - SERVICE_MGMT: Service: MGMT
       - SERVICE_CONNECTOR: Service: CONNECTOR
       - SERVICE_MODEL: Service: MODEL
       - SERVICE_PIPELINE: Service: PIPELINE
       - SERVICE_ARTIFACT: Service: ARTIFACT
    title: Service enumerates the services to collect data from
  UserUsageDataConnectorExecuteData:
    type: object
    properties:
      connector_uid:
        type: string
        title: UID for the executed connector
      execute_uid:
        type: string
        title: UID for the execute log
      execute_time:
        type: string
        format: date-time
        title: Timestamp for the execution
      connector_definition_uid:
        type: string
        title: Definition UID of the connector
      status:
        $ref: '#/definitions/mgmtv1betaStatus'
        title: Final status of the execution
      user_uid:
        type: string
        title: UUID of the user who execute the connector
      user_type:
        $ref: '#/definitions/v1betaOwnerType'
        title: Type of the user who execute the connector
    title: Per execute usage metadata
    required:
      - connector_uid
      - execute_uid
      - execute_time
      - connector_definition_uid
      - status
      - user_uid
      - user_type
  UserUsageDataModelTriggerData:
    type: object
    properties:
      model_uid:
        type: string
        title: UID for the trigged model
      trigger_uid:
        type: string
        title: UID for the trigger log
      trigger_time:
        type: string
        format: date-time
        title: Timestamp for the trigger
      model_definition_uid:
        type: string
        title: Definition UID of the model
      model_task:
        $ref: '#/definitions/v1alphaTask'
        title: Task of the model
      status:
        $ref: '#/definitions/mgmtv1betaStatus'
        title: Final status of the execution
      user_uid:
        type: string
        title: UUID of the user who trigger the model
      user_type:
        $ref: '#/definitions/v1betaOwnerType'
        title: Type of the user who trigger the model
    title: Per trigger usage metadata
    required:
      - model_uid
      - trigger_uid
      - trigger_time
      - model_definition_uid
      - model_task
      - status
      - user_uid
      - user_type
  UserUsageDataPipelineTriggerData:
    type: object
    properties:
      pipeline_uid:
        type: string
        title: UID for the triggered pipeline
      trigger_uid:
        type: string
        title: UID for the trigger log
      trigger_time:
        type: string
        format: date-time
        title: Timestamp for the trigger
      trigger_mode:
        $ref: '#/definitions/v1betaMode'
        title: Trigger mode
      status:
        $ref: '#/definitions/mgmtv1betaStatus'
        title: Final status of the execution
      pipeline_release_id:
        type: string
        title: Version for the triggered release pipeline, empty string if not release
      pipeline_release_uid:
        type: string
        title: UID for the triggered release pipeline, empty string if not release
      user_uid:
        type: string
        title: UUID of the user who trigger the pipeline
      user_type:
        $ref: '#/definitions/v1betaOwnerType'
        title: Type of the user who trigger the pipeline
      pipeline_id:
        type: string
        title: ID for the triggered pipeline
    title: Per trigger usage metadata
    required:
      - pipeline_uid
      - trigger_uid
      - trigger_time
      - trigger_mode
      - status
      - pipeline_release_id
      - pipeline_release_uid
      - user_uid
      - user_type
      - pipeline_id
  coreusagev1betaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1betaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  coreusagev1betaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1betaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  googlerpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  mgmtv1betaStatus:
    type: string
    enum:
      - STATUS_COMPLETED
      - STATUS_ERRORED
    description: |-
      Status describes the output of an execution.

       - STATUS_COMPLETED: Successfully completed.
       - STATUS_ERRORED: Finished with error.
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  v1alphaTask:
    type: string
    enum:
      - TASK_CLASSIFICATION
      - TASK_DETECTION
      - TASK_KEYPOINT
      - TASK_OCR
      - TASK_INSTANCE_SEGMENTATION
      - TASK_SEMANTIC_SEGMENTATION
      - TASK_TEXT_TO_IMAGE
      - TASK_TEXT_GENERATION
      - TASK_TEXT_GENERATION_CHAT
      - TASK_VISUAL_QUESTION_ANSWERING
      - TASK_IMAGE_TO_IMAGE
      - TASK_TEXT_EMBEDDINGS
      - TASK_SPEECH_RECOGNITION
    description: |-
      Task enumerates the AI task that a model is designed to solve.

       - TASK_CLASSIFICATION: Image Classification - classify images into predefined categories.
       - TASK_DETECTION: Object Detection - detect and localize multiple objects in images.
       - TASK_KEYPOINT: Keypoint Detection - detect and localize multiple keypoints of objects in images.
       - TASK_OCR: OCR (Optical Character Recognition) - detect and recognize text in images.
       - TASK_INSTANCE_SEGMENTATION: Instance Segmentation - detect, localize and delineate multiple objects in images.
       - TASK_SEMANTIC_SEGMENTATION: Semantic Segmentation - classify image pixels into predefined categories.
       - TASK_TEXT_TO_IMAGE: Text to Image - generate images from input text prompts.
       - TASK_TEXT_GENERATION: Text Generation - generate texts from input text prompts.
       - TASK_TEXT_GENERATION_CHAT: Conversational Text Generation - generate text as responses to a dialog input.
       - TASK_VISUAL_QUESTION_ANSWERING: Visual Question Answering - generate text as a response to a visual prompt.
       - TASK_IMAGE_TO_IMAGE: Image to Image - generate an image from another image.
       - TASK_TEXT_EMBEDDINGS: Text Embeddings - generate an embedding (a representation as coordinates) from a text input.
       - TASK_SPEECH_RECOGNITION: Speech Recognition - transcribe the words in an audio input.
  v1betaArtifactUsageData:
    type: object
    properties:
      usages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaArtifactUsageDataUserUsageData'
        title: Usage data of all users in the artifact service
    title: Artifact service usage data
  v1betaArtifactUsageDataUserUsageData:
    type: object
    properties:
      owner_uid:
        type: string
        title: Owner UUID
      owner_type:
        $ref: '#/definitions/v1betaOwnerType'
        title: Owner type
    title: Per user usage data in the artifact service
    required:
      - owner_uid
      - owner_type
  v1betaAuthenticatedUser:
    type: object
    properties:
      name:
        type: string
        description: |-
          The name of the user, defined by its ID.
          - Format: `users/{user.id}`.
        readOnly: true
      uid:
        type: string
        description: |-
          User UUID. This field is optionally set by users on creation (it will be
          server-generated if unspecified).
      id:
        type: string
        description: |-
          Resource ID (used in `name` as the last segment). This conforms to
          RFC-1034, which restricts to letters, numbers, and hyphen, with the first
          character a letter, the last a letter or a number, and a 63 character
          maximum.

          Note that the ID can be updated.
      create_time:
        type: string
        format: date-time
        description: Creation time.
        readOnly: true
      update_time:
        type: string
        format: date-time
        description: Update time.
        readOnly: true
      email:
        type: string
        description: Email.
      customer_id:
        type: string
        description: Stripe customer ID. This field is used in Instill Cloud.
        readOnly: true
      role:
        type: string
        description: |-
          Role.

          It must be one of the following allowed roles:
          - `manager`
          - `ai-researcher`
          - `ai-engineer`
          - `data-engineer`
          - `data-scientist`
          - `analytics-engineer`
          - `hobbyist`
      newsletter_subscription:
        type: boolean
        description: This defines whether the user is subscribed to Instill AI's newsletter.
      cookie_token:
        type: string
        description: Console cookie token.
      onboarding_status:
        $ref: '#/definitions/v1betaOnboardingStatus'
        description: Onboarding Status.
      profile:
        $ref: '#/definitions/v1betaUserProfile'
        description: Profile.
    description: |-
      AuthenticatedUser contains the information of an authenticated user, i.e.,
      the public user information plus some fields that should only be accessed by
      the user themselves.
    required:
      - id
      - email
      - newsletter_subscription
  v1betaConnectorUsageData:
    type: object
    properties:
      usages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaConnectorUsageDataUserUsageData'
        title: Usage data of all users in the connector service
    title: Connector service usage data
  v1betaConnectorUsageDataUserUsageData:
    type: object
    properties:
      owner_uid:
        type: string
        title: Owner UUID
      connector_execute_data:
        type: array
        items:
          type: object
          $ref: '#/definitions/UserUsageDataConnectorExecuteData'
        title: Execution data for each user
      owner_type:
        $ref: '#/definitions/v1betaOwnerType'
        title: Owner type
    title: Per user usage data in the connector service
    required:
      - owner_uid
      - connector_execute_data
      - owner_type
  v1betaCreateSessionResponse:
    type: object
    properties:
      session:
        $ref: '#/definitions/v1betaSession'
        title: A session resource
    title: CreateSessionResponse represents a response for a session response
  v1betaDeleteOrganizationMembershipResponse:
    type: object
    description: DeleteOrganizationMembershipResponse is an empty response.
  v1betaDeleteUserMembershipResponse:
    type: object
    description: DeleteUserMembershipResponse is an empty response.
  v1betaGetAuthenticatedUserResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaAuthenticatedUser'
        description: The authenticated user resource.
    description: GetAuthenticatedUserResponse contains the requested authenticated user.
  v1betaGetBulkCumulativeModelOnlineRecordsResponse:
    type: object
    properties:
      bulk_cumulative_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaGetCumulativeModelOnlineRecordsResponse'
        title: A list of cumulative model online record lists
    title: |-
      GetBulkCumulativeModelOnlineRecordsResponse represents a response to
      GetBulkCumulativeModelOnlineRecordsRequest
    required:
      - bulk_cumulative_records
  v1betaGetBulkCumulativePipelineTriggerRecordsResponse:
    type: object
    properties:
      bulk_cumulative_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaGetCumulativePipelineTriggerRecordsResponse'
        title: A list of cumulative pipeline trigger record lists
    title: |-
      GetBulkCumulativePipelineTriggerRecordsResponse represents a response to
      GetBulkCumulativePipelineTriggerRecordsRequest
    required:
      - bulk_cumulative_records
  v1betaGetBulkModelOnlinePriceResponse:
    type: object
    properties:
      bulk_prices:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaGetModelOnlinePriceResponse'
        title: A list of model online price lists
    title: |-
      GetBulkModelOnlinePriceResponse represents a response to
      GetBulkModelOnlinePriceRequest
    required:
      - bulk_prices
  v1betaGetBulkModelOnlineRecordsResponse:
    type: object
    properties:
      bulk_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaGetModelOnlineRecordsResponse'
        title: A list of model online record lists
    title: |-
      GetBulkModelOnlineRecordsResponse represents a response to
      GetBulkModelOnlineRecordsRequest
    required:
      - bulk_records
  v1betaGetBulkModelOnlineSummaryResponse:
    type: object
    properties:
      bulk_summaries:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaGetModelOnlineSummaryResponse'
        title: A list of model online usage summaries
    title: |-
      GetBulkModelOnlineSummaryResponse represents a response to
      GetBulkModelOnlineSummaryRequest
    required:
      - bulk_summaries
  v1betaGetBulkPipelineTriggerPriceResponse:
    type: object
    properties:
      bulk_prices:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaGetPipelineTriggerPriceResponse'
        title: A list of pipeline trigger price lists
    title: |-
      GetBulkPipelineTriggerPriceResponse represents a response to
      GetBulkPipelineTriggerPriceRequest
    required:
      - bulk_prices
  v1betaGetBulkPipelineTriggerRecordsResponse:
    type: object
    properties:
      bulk_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaGetPipelineTriggerRecordsResponse'
        title: A list of pipeline trigger record lists
    title: |-
      GetBulkPipelineTriggerRecordsResponse represents a response to
      GetBulkPipelineTriggerRecordsRequest
    required:
      - bulk_records
  v1betaGetBulkPipelineTriggerSummariesResponse:
    type: object
    properties:
      bulk_summaries:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaGetPipelineTriggerSummaryResponse'
        title: A list of pipeline trigger usage summaries
    title: |-
      GetBulkPipelineTriggerSummariesResponse represents a response to
      GetBulkPipelineTriggerSummariesRequest
    required:
      - bulk_summaries
  v1betaGetCumulativeModelOnlineRecordsRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      model:
        $ref: '#/definitions/v1betaModelData'
        title: Model information
      time_interval:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time interval
    title: |-
      GetCumulativeModelOnlineRecordsRequest represents a query for cumulative
      model online records
    required:
      - user
      - model
      - time_interval
  v1betaGetCumulativeModelOnlineRecordsResponse:
    type: object
    properties:
      cumulative_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaModelUsageRecord'
        title: A list of model online records in cumulative format
    title: |-
      GetCumulativeModelOnlineRecordsResponse represents a response to
      GetCumulativeModelOnlineRecordsRequest
    required:
      - cumulative_records
  v1betaGetCumulativePipelineTriggerRecordsRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      pipeline:
        $ref: '#/definitions/v1betaPipelineData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time interval
    title: |-
      GetCumulativePipelineTriggerRecordsRequest represents a query for cumulative
      pipeline trigger records
    required:
      - user
      - pipeline
  v1betaGetCumulativePipelineTriggerRecordsResponse:
    type: object
    properties:
      cumulative_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipelineUsageRecord'
        title: Pipeline trigger records where values are in cumulative formats
    title: |-
      GetCumulativePipelineTriggerRecordsResponse represents a response to
      GetCumulativePipelineTriggerRecordsRequest
    required:
      - cumulative_records
  v1betaGetModelOnlinePriceRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      model:
        $ref: '#/definitions/v1betaModelData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time interval
    title: |-
      GetPipelineTriggerPriceRequest represents a query for price data of the
      billing periods covered by the time interval
    required:
      - user
      - model
      - time_interval
  v1betaGetModelOnlinePriceResponse:
    type: object
    properties:
      price:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPriceData'
        title: |-
          A list of model online prices given the billing periods covered by the time
          interval
    title: |-
      GetModelOnlinePriceResponse represents a response to
      GetModelOnlinePriceRequest
    required:
      - price
  v1betaGetModelOnlineRecordsRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      model:
        $ref: '#/definitions/v1betaModelData'
        title: Model information
      time_interval:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time interval
    title: GetModelOnlineRecordsRequest represent a query for model online records
    required:
      - user
      - model
      - time_interval
  v1betaGetModelOnlineRecordsResponse:
    type: object
    properties:
      records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaModelUsageRecord'
        title: A list of model trigger records
    title: |-
      GetModelOnlineRecordsResponse represents a response to
      GetModelOnlineRecordsRequest
    required:
      - records
  v1betaGetModelOnlineSummaryRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      model:
        $ref: '#/definitions/v1betaModelData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time interval
    title: GetModelOnlineSummaryRequest represents a query for model online summary
    required:
      - user
      - model
      - time_interval
  v1betaGetModelOnlineSummaryResponse:
    type: object
    properties:
      summary:
        $ref: '#/definitions/v1betaUsageSummary'
        title: The total model online usage in the time interval
    title: |-
      GetModelOnlineSummaryResponse represents a response to
      GetModelOnlineSummaryRequest
    required:
      - summary
  v1betaGetModelsResponse:
    type: object
    properties:
      models:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaModelData'
        title: A list of model informations
    title: GetPipelinesResponse represents a respond to GetModelsRequest
    required:
      - models
  v1betaGetOrganizationAdminResponse:
    type: object
    properties:
      organization:
        $ref: '#/definitions/v1betaOrganization'
        title: A organization resource
    title: GetOrganizationAdminResponse represents a response for a organization resource
  v1betaGetOrganizationSubscriptionAdminResponse:
    type: object
    properties:
      subscription:
        $ref: '#/definitions/v1betaOrganizationSubscription'
        title: Subscription
    title: GetOrganizationSubscriptionAdminResponse
  v1betaGetPipelineTriggerPriceRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      pipeline:
        $ref: '#/definitions/v1betaPipelineData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time interval
    title: |-
      GetPipelineTriggerPriceRequest represents a query for pipeline trigger prices
      given the billing periods covered by the time interval
    required:
      - user
      - pipeline
      - time_interval
  v1betaGetPipelineTriggerPriceResponse:
    type: object
    properties:
      price:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPriceData'
        title: |-
          A list of pipeline trigger prices given the billing periods covered by the
          time interval
    title: |-
      GetPipelineTriggerPriceResponse represents a response to
      GetPipelineTriggerPriceRequest
    required:
      - price
  v1betaGetPipelineTriggerRecordsRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      pipeline:
        $ref: '#/definitions/v1betaPipelineData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time interval
    title: |-
      GetPipelineTriggerRecordsRequest represents a query for pipeline trigger
      records
    required:
      - user
      - pipeline
  v1betaGetPipelineTriggerRecordsResponse:
    type: object
    properties:
      records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipelineUsageRecord'
        title: A list of pipeline trigger records
    title: |-
      GetPipelineTriggerRecordsResponse represents a response to
      GetPipelineTriggerRecordsRequest
    required:
      - records
  v1betaGetPipelineTriggerSummaryRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      pipeline:
        $ref: '#/definitions/v1betaPipelineData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time interval
    title: |-
      GetPipelineTriggerSummaryRequest represents a query for pipeline trigger
      summary
    required:
      - user
      - pipeline
  v1betaGetPipelineTriggerSummaryResponse:
    type: object
    properties:
      summaries:
        $ref: '#/definitions/v1betaUsageSummary'
        title: The total pipeline trigger usage in the time interval
    title: |-
      GetPipelineTriggerSummaryResponse represents a response to
      GetPipelineTriggerSummaryRequest
    required:
      - summaries
  v1betaGetPipelinesResponse:
    type: object
    properties:
      pipelines:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipelineData'
        title: A list of pipeline informations
    title: GetPipelinesResponse represents a respond to GetPipelineRequest
    required:
      - pipelines
  v1betaGetUserAdminResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUser'
        title: A user resource
    title: GetUserAdminResponse represents a response for a user resource
  v1betaGetUserSubscriptionAdminResponse:
    type: object
    properties:
      subscription:
        $ref: '#/definitions/v1betaUserSubscription'
        title: Subscription
    title: GetUserSubscriptionAdminResponse
  v1betaHealthCheckRequest:
    type: object
    properties:
      service:
        type: string
        title: Service name to check for its readiness status
    title: HealthCheckRequest represents a request to health check a service
  v1betaHealthCheckResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/HealthCheckResponseServingStatus'
        title: Status is the instance of the enum type ServingStatus
    title: HealthCheckResponse represents a response for a service heath status
  v1betaListOrganizationsAdminResponse:
    type: object
    properties:
      organizations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaOrganization'
        title: A list of organizations
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        description: Total number of organizations.
    title: ListOrganizationsAdminResponse represents a response for a list of organizations
  v1betaListUsersAdminResponse:
    type: object
    properties:
      users:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaUser'
        title: A list of users
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        description: Total number of users.
    title: ListUsersAdminResponse represents a response for a list of users
  v1betaListUsersResponse:
    type: object
    properties:
      users:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaUser'
        description: A list of user resources.
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        description: Total number of users.
    description: ListUsersResponse contains a list of users.
  v1betaLookUpOrganizationAdminResponse:
    type: object
    properties:
      organization:
        $ref: '#/definitions/v1betaOrganization'
        title: A organization resource
    title: LookUpOrganizationAdminResponse represents a response for a organization resource by admin
  v1betaLookUpUserAdminResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUser'
        title: A user resource
    title: LookUpUserAdminResponse represents a response for a user resource by admin
  v1betaMgmtUsageData:
    type: object
    properties:
      user_usages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaAuthenticatedUser'
        title: Repeated user usage data
      org_usages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaOrganization'
        title: Repeated org usage data
    title: Management service usage data
  v1betaMode:
    type: string
    enum:
      - MODE_SYNC
      - MODE_ASYNC
    description: |-
      Mode describes the execution mode of the pipeline (sync or async).

       - MODE_SYNC: Synchronous (result is returned in the response).
       - MODE_ASYNC: Asynchronous (response only contains acknowledgement).
  v1betaModelData:
    type: object
    properties:
      uid:
        type: string
        title: Model unique id that is auto generated
      id:
        type: string
        title: Model id that is given by the users
      instance_id:
        type: string
        title: The id of the model instance that is deployed
      task:
        type: string
        title: The AI task supported by this model
    title: Pipeline records definition
    required:
      - uid
      - id
      - instance_id
      - task
  v1betaModelUsageData:
    type: object
    properties:
      usages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaModelUsageDataUserUsageData'
        title: Usage data of all users in the model service
    title: Model service usage data
  v1betaModelUsageDataUserUsageData:
    type: object
    properties:
      owner_uid:
        type: string
        title: Owner UUID
      model_trigger_data:
        type: array
        items:
          type: object
          $ref: '#/definitions/UserUsageDataModelTriggerData'
        title: Trigger data for each user
      owner_type:
        $ref: '#/definitions/v1betaOwnerType'
        title: Owner type
    title: Per user usage data in the model service
    required:
      - owner_uid
      - model_trigger_data
      - owner_type
  v1betaModelUsageRecord:
    type: object
    properties:
      deploy_time:
        type: string
        format: date-time
        title: Time when the model is ONLINE
      record_time:
        type: string
        format: date-time
        title: Time when model online usage is recorded
      value:
        type: integer
        format: int32
        title: |-
          The model online usage record that is logged in cumulative manner. This
          value records the cumulative usage since model is online in the current
          billing period
    title: Model online usage record definition
    required:
      - deploy_time
      - record_time
      - value
  v1betaNullMessage:
    type: object
    title: Nul Message for gRPC REQ/RES
  v1betaOnboardingStatus:
    type: string
    enum:
      - ONBOARDING_STATUS_IN_PROGRESS
      - ONBOARDING_STATUS_COMPLETED
    description: |-
      OnboardingStatus describes the status of the user onboarding process.

       - ONBOARDING_STATUS_IN_PROGRESS: In progress, i.e., the user has initiated the onboarding process
      but has not yet completed it.
       - ONBOARDING_STATUS_COMPLETED: Completed.
  v1betaOrganization:
    type: object
    properties:
      name:
        type: string
        description: |-
          The name of the organization, defined by its ID.
          - Format: `organization/{organization.id}`.
        readOnly: true
      uid:
        type: string
        description: Organization UUID.
        readOnly: true
      id:
        type: string
        description: |-
          Resource ID (used in `name` as the last segment). This conforms to
          RFC-1034, which restricts to letters, numbers, and hyphen, with the first
          character a letter, the last a letter or a number, and a 63 character
          maximum.

          Note that the ID can be updated.
      create_time:
        type: string
        format: date-time
        description: Creation time.
        readOnly: true
      update_time:
        type: string
        format: date-time
        description: Update time.
        readOnly: true
      owner:
        $ref: '#/definitions/v1betaUser'
        description: The user that owns the organization.
        readOnly: true
      profile:
        $ref: '#/definitions/v1betaOrganizationProfile'
        description: Profile.
    description: |-
      Organizations group several users. As entities, they can own resources such
      as pipelines or releases.
    required:
      - id
  v1betaOrganizationProfile:
    type: object
    properties:
      display_name:
        type: string
        description: Display name.
      bio:
        type: string
        description: Biography.
      avatar:
        type: string
        description: Avatar in base64 format.
      public_email:
        type: string
        description: Public email.
      social_profile_links:
        type: object
        additionalProperties:
          type: string
        description: |-
          Social profile links list the links to the organization's social profiles.
          The key represents the provider, and the value is the corresponding URL.
    description: OrganizationProfile describes the public data of an organization.
  v1betaOrganizationSubscription:
    type: object
    properties:
      plan:
        $ref: '#/definitions/v1betaOrganizationSubscriptionPlan'
        description: Plan identifier.
      detail:
        $ref: '#/definitions/v1betaStripeSubscriptionDetail'
        description: Details of the associated Stripe subscription.
      max_seats:
        type: integer
        format: int32
        description: Maximum number of seats allowed.
      used_seats:
        type: integer
        format: int32
        description: Number of used seats within the organization subscription.
    description: OrganizationSubscription details describe the plan (i.e., features) an organization has access to.
  v1betaOrganizationSubscriptionPlan:
    type: string
    enum:
      - PLAN_FREEMIUM
      - PLAN_TEAM
      - PLAN_ENTERPRISE
    description: |-
      Enumerates the plan types for the organization subscription.

       - PLAN_FREEMIUM: Freemium plan.
       - PLAN_TEAM: Team plan.
       - PLAN_ENTERPRISE: Enterprise plan.
  v1betaOwnerType:
    type: string
    enum:
      - OWNER_TYPE_USER
      - OWNER_TYPE_ORGANIZATION
    description: |-
      - OWNER_TYPE_USER: OwnerType: USER
       - OWNER_TYPE_ORGANIZATION: OwnerType: ORGANIZATION
    title: OwnerType enumerates the owner type of any resource
  v1betaPatchAuthenticatedUserResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaAuthenticatedUser'
        description: The updated user resource.
    title: |-
      PatchAuthenticatedUserResponse contains the updated user.
      the authenticated user resource
  v1betaPipelineData:
    type: object
    properties:
      uid:
        type: string
        title: Pipeline unique id that is auto generated
      id:
        type: string
        title: Pipeline id assigned by users
      task:
        type: string
        title: Pipeline task indicate the AI task this pipeline supports
    title: Pipeline records definition
    required:
      - uid
      - id
      - task
  v1betaPipelineUsageData:
    type: object
    properties:
      usages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipelineUsageDataUserUsageData'
        title: Usage data of all users in the pipeline service
    title: Pipeline service usage data
  v1betaPipelineUsageDataUserUsageData:
    type: object
    properties:
      owner_uid:
        type: string
        title: Owner UUID
      pipeline_trigger_data:
        type: array
        items:
          type: object
          $ref: '#/definitions/UserUsageDataPipelineTriggerData'
        title: Trigger data for each user
      owner_type:
        $ref: '#/definitions/v1betaOwnerType'
        title: Owner type
    title: Per user usage data in the pipeline service
    required:
      - owner_uid
      - pipeline_trigger_data
      - owner_type
  v1betaPipelineUsageRecord:
    type: object
    properties:
      request_id:
        type: string
        description: A unique request id given by vdp when trigger the pipeline.
      operation_id:
        type: string
        title: A unique operation id given by vdp
      status:
        type: string
        title: The HTTP status received when user trigger the pipeline
      trigger_time:
        type: string
        format: date-time
        title: Time when the pipeline is triggered
      record_time:
        type: string
        format: date-time
        title: Time when the pipeline trigger usage is recorded
      value:
        type: integer
        format: int32
        title: |-
          The pipeline trigger usage record. The unit of the usage should be
          consistent with Stripe
    title: Pipeline trigger usage record definition
    required:
      - request_id
      - operation_id
      - status
      - trigger_time
      - record_time
      - value
  v1betaPriceData:
    type: object
    properties:
      time:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time when the price record is generated
      currency:
        type: string
        title: The currency of the price
        readOnly: true
      amount:
        type: number
        format: float
        title: The price of the query usage in the current billing period
        readOnly: true
    title: Pricing information
    required:
      - time
  v1betaReportModelOnlineRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      model:
        $ref: '#/definitions/v1betaModelData'
        title: Model information
      cum_usage_record:
        $ref: '#/definitions/v1betaModelUsageRecord'
        title: Model online record
    title: |-
      ReportModelOnlineRequest represents a request for reporting a model-online
      record
    required:
      - user
      - model
      - cum_usage_record
  v1betaReportModelOnlineResponse:
    type: object
    properties:
      "null":
        $ref: '#/definitions/v1betaNullMessage'
        title: Null message for empty response
    title: |-
      ReportModelOnlineResponse represents a respond to a model-online-record
      report request
  v1betaReportModelOnlinesResponse:
    type: object
    properties:
      "null":
        $ref: '#/definitions/v1betaNullMessage'
        title: Null message for empty response
    title: |-
      ReportModelOnlinesResponse represents a respond to a model-online-records
      reporting bulk request
  v1betaReportPipelineTriggerRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      pipeline:
        $ref: '#/definitions/v1betaPipelineData'
        title: Pipeline information
      usage_record:
        $ref: '#/definitions/v1betaPipelineUsageRecord'
        title: Pipeline trigger record
    title: |-
      ReportPipelineTriggerRequest represents a request for reporting a
      pipeline-trigger record
    required:
      - user
      - pipeline
      - usage_record
  v1betaReportPipelineTriggerResponse:
    type: object
    properties:
      "null":
        $ref: '#/definitions/v1betaNullMessage'
        title: Null message for empty response
    title: |-
      ReportPipelineTriggerResponse represents a respond to a
      pipeline-trigger-record report request
  v1betaReportPipelineTriggersResponse:
    type: object
    properties:
      "null":
        $ref: '#/definitions/v1betaNullMessage'
        title: Null message for empty response
    title: |-
      ReportPipelineTriggersResponse represents a respond to a
      pipeline-trigger-records reporting bulk request
  v1betaSendSessionReportResponse:
    type: object
    title: SendReportResponse represents an empty response
  v1betaSession:
    type: object
    properties:
      name:
        type: string
        title: Resource name in the format of 'sessions/uid'
        readOnly: true
      uid:
        type: string
        title: Resource UUID
        readOnly: true
      service:
        $ref: '#/definitions/SessionService'
        title: name of the service to collect data from
      edition:
        type: string
        title: 'Session edition, allowed values include: ''local-ce'' and ''local-ce:dev'''
      version:
        type: string
        title: Version of the service
      arch:
        type: string
        title: Architecture of the system
      os:
        type: string
        title: Operating system
      uptime:
        type: string
        format: int64
        title: Session service uptime
      report_time:
        type: string
        format: date-time
        title: Report time
      token:
        type: string
        description: |-
          Token to send report. The token is generated by the server and sent to
          the client. Client needs to use the token to send report to the server.
        readOnly: true
      create_time:
        type: string
        format: date-time
        title: Session creation time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: Session update time
        readOnly: true
      owner_uid:
        type: string
        title: Owner UUID of the instance, can also be considered as instance UUID
    title: |-
      Session represents a unique session whenever a new instance of VDP service
      gets started. The usage server returns a token that should be used as part of
      the challenge when sending a report with data collected from this session
    required:
      - service
      - edition
      - version
      - arch
      - os
      - uptime
      - report_time
      - owner_uid
  v1betaSessionReport:
    type: object
    properties:
      session_uid:
        type: string
        title: Session uid
      token:
        type: string
        title: Session token
      pow:
        type: string
        title: Proof-of-work See https://en.wikipedia.org/wiki/Proof_of_work
      session:
        $ref: '#/definitions/v1betaSession'
        title: Session
      mgmt_usage_data:
        $ref: '#/definitions/v1betaMgmtUsageData'
        title: Management service usage data
      connector_usage_data:
        $ref: '#/definitions/v1betaConnectorUsageData'
        title: Connector service usage data
      model_usage_data:
        $ref: '#/definitions/v1betaModelUsageData'
        title: Model service usage data
      pipeline_usage_data:
        $ref: '#/definitions/v1betaPipelineUsageData'
        title: Pipeline service usage data
      artifact_usage_data:
        $ref: '#/definitions/v1betaArtifactUsageData'
        title: Artifact service usage data
    title: |-
      SessionReport represents a report to be sent to the server that includes the
      usage data of a session
    required:
      - session_uid
      - token
      - pow
      - session
  v1betaStripeSubscriptionDetail:
    type: object
    properties:
      product_name:
        type: string
        description: Product name associated with the subscription in Stripe.
      id:
        type: string
        description: Unique identifier for the subscription.
      item_id:
        type: string
        description: Identifier for the specific item within the subscription.
      price:
        type: number
        format: float
        description: Price of the subscription.
      canceled_at:
        type: integer
        format: int32
        description: Optional timestamp indicating when the subscription was canceled, if applicable.
      trial_end:
        type: integer
        format: int32
        description: Optional timestamp indicating when the trial ended, if applicable.
      status:
        $ref: '#/definitions/v1betaStripeSubscriptionDetailStatus'
        description: Status of the subscription.
      description:
        type: string
        description: Description of the subscription.
    description: StripeSubscriptionDetail describes the details of a subscription in Stripe.
  v1betaStripeSubscriptionDetailStatus:
    type: string
    enum:
      - STATUS_INCOMPLETE
      - STATUS_INCOMPLETE_EXPIRED
      - STATUS_TRIALING
      - STATUS_ACTIVE
      - STATUS_PAST_DUE
      - STATUS_CANCELED
      - STATUS_UNPAID
      - STATUS_PAUSED
    description: |-
      Enumerates the status types for the user's subscription.

       - STATUS_INCOMPLETE: Incomplete.
       - STATUS_INCOMPLETE_EXPIRED: Incomplete Expired.
       - STATUS_TRIALING: Trialing.
       - STATUS_ACTIVE: Active.
       - STATUS_PAST_DUE: Past due.
       - STATUS_CANCELED: Canceled.
       - STATUS_UNPAID: Unpaid.
       - STATUS_PAUSED: Paused.
  v1betaTimeInterval:
    type: object
    properties:
      start_time:
        type: string
        format: date-time
        title: Start time of the interval
      end_time:
        type: string
        format: date-time
        title: End time of the interval
    title: Time interval
    required:
      - start_time
      - end_time
  v1betaUsageSummary:
    type: object
    properties:
      time:
        type: string
        format: date-time
        title: Time when the summary is generated
      value:
        type: integer
        format: int32
        title: The total usage since the beginning of the current billing period
    title: Usage summary definition
    required:
      - time
      - value
  v1betaUser:
    type: object
    properties:
      name:
        type: string
        description: |-
          The name of the user, defined by its ID.
          - Format: `users/{user.id}`.
        readOnly: true
      uid:
        type: string
        description: |-
          User UUID. This field is optionally set by users on creation (it will be
          server-generated if unspecified).
      id:
        type: string
        description: |-
          Resource ID (used in `name` as the last segment). This conforms to
          RFC-1034, which restricts to letters, numbers, and hyphen, with the first
          character a letter, the last a letter or a number, and a 63 character
          maximum.

          Note that the ID can be updated.
      create_time:
        type: string
        format: date-time
        description: Creation time.
        readOnly: true
      update_time:
        type: string
        format: date-time
        description: Update time.
        readOnly: true
      profile:
        $ref: '#/definitions/v1betaUserProfile'
        description: Profile.
    description: |-
      User describes an individual that interacts with Instill AI. It doesn't
      contain any private information about the user.
    required:
      - id
  v1betaUserData:
    type: object
    properties:
      uid:
        type: string
        title: User unique id
      name:
        type: string
        title: User name, which is not necessary for service queries
    title: User records definition
    required:
      - uid
  v1betaUserProfile:
    type: object
    properties:
      display_name:
        type: string
        description: Display name.
      bio:
        type: string
        description: Biography.
      avatar:
        type: string
        description: Avatar in base64 format.
      public_email:
        type: string
        description: Public email.
      company_name:
        type: string
        description: Company name.
      social_profile_links:
        type: object
        additionalProperties:
          type: string
        description: |-
          Social profile links list the links to the user's social profiles.
          The key represents the provider, and the value is the corresponding URL.
    description: UserProfile describes the public data of a user.
  v1betaUserSubscription:
    type: object
    properties:
      plan:
        $ref: '#/definitions/v1betaUserSubscriptionPlan'
        description: Plan identifier.
      detail:
        $ref: '#/definitions/v1betaStripeSubscriptionDetail'
        description: Details of the associated Stripe subscription.
    description: UserSubscription details describe the plan (i.e., features) a user has access to.
  v1betaUserSubscriptionPlan:
    type: string
    enum:
      - PLAN_FREEMIUM
      - PLAN_PRO
    description: |-
      Enumerates the plan types for the user subscription.

       - PLAN_FREEMIUM: Freemium plan.
       - PLAN_PRO: Pro plan.
  v1betaView:
    type: string
    enum:
      - VIEW_BASIC
      - VIEW_FULL
    description: |-
      View defines how a resource is presented. It can be used as a parameter in a
      method request to allow clients to select the amount of information they
      want in the response.

       - VIEW_BASIC: Default view, only includes basic information.
       - VIEW_FULL: Full representation.
securityDefinitions:
  Bearer:
    type: apiKey
    description: Enter the token with the `Bearer ` prefix, e.g. `Bearer abcde12345`
    name: Authorization
    in: header
    x-default: Bearer instill_sk_***
security:
  - Bearer: []
externalDocs:
  description: More about Instill AI
  url: https://www.instill.tech/docs
