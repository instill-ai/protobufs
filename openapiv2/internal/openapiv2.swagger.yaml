swagger: "2.0"
info:
  title: Instill AI API
  description: Interface definitions for the Instill AI endpoints exposed over HTTP
  version: 0.4-beta
  contact:
    name: Instill AI
    url: https://github.com/instill-ai
    email: hello@instill.tech
  license:
    name: Elastic License 2.0 (ELv2)
    url: https://github.com/instill-ai/protobufs/blob/main/LICENSE
tags:
  - name: PipelineService
  - name: ModelService
  - name: MgmtPrivateService
  - name: MgmtPublicService
  - name: UsageService
  - name: ControllerPrivateService
  - name: ModelPrivateService
  - name: ModelPublicService
  - name: ControllerPrivateService
  - name: PipelinePrivateService
    description: Private methods to interact with Pipeline resources.
  - name: PipelinePublicService
host: https://api.instill.tech
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1alpha/__liveness:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: ModelPublicService_Liveness
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/modelmodelv1alphaLivenessResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - ModelPublicService
  /v1alpha/__readiness:
    get:
      summary: |-
        Readiness method receives a ReadinessRequest message and returns a
        ReadinessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: ModelPublicService_Readiness
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/modelmodelv1alphaReadinessResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - ModelPublicService
  /v1alpha/{model.name/readme}:
    get:
      summary: |-
        GetUserModelCard method receives a GetUserModelCardRequest message
        and returns a GetUserModelCardResponseUser
      operationId: ModelPublicService_GetUserModelCard
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetUserModelCardResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: model.name/readme
          description: |-
            Resource name of the model card.
            For example "// Format: users/{user}/models/{model}/readme"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/models/[^/]+/readme
      tags:
        - ModelPublicService
  /v1alpha/{model.name/watch}/watch:
    get:
      summary: |-
        WatchUserModel method receives a WatchUserModelRequest message
        and returns a WatchModelResponse
      operationId: ModelPublicService_WatchUserModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaWatchUserModelResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: model.name/watch
          description: |-
            Resource name of the model.
            Format: users/{user}/models/{model}
          in: path
          required: true
          type: string
          pattern: users/[^/]+/models/[^/]+
      tags:
        - ModelPublicService
  /v1alpha/{model.name}:
    get:
      summary: |-
        GetUserModel method receives a GetUserModelRequest message and returns a
        GetUserModelResponse
      operationId: ModelPublicService_GetUserModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetUserModelResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: model.name
          description: |-
            Resource name of the model.
            Format: users/{user}/models/{model}
          in: path
          required: true
          type: string
          pattern: users/[^/]+/models/[^/]+
        - name: view
          description: |-
            Model view (default is VIEW_BASIC)
            VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
            VIEW_FULL: show full information

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
             - VIEW_FULL: View: FULL, full representation of the resource
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
      tags:
        - ModelPublicService
    delete:
      summary: |-
        DeleteUserModel method receives a DeleteUserModelRequest message and returns a
        DeleteUserModelResponse
      operationId: ModelPublicService_DeleteUserModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeleteUserModelResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: model.name
          description: |-
            Resource name of the model.
            Format: users/{user}/models/{model}
          in: path
          required: true
          type: string
          pattern: users/[^/]+/models/[^/]+
      tags:
        - ModelPublicService
    patch:
      summary: |-
        UpdateUserModel method receives a UpdateUserModelRequest message and returns a
        UpdateUserModelResponse
      operationId: ModelPublicService_UpdateUserModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUpdateUserModelResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: model.name
          description: |-
            Resource name. It must have the format of "users/{user}/models/{model}".
            For example: "users/instill-ai/models/yolov4"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/models/[^/]+
        - name: model
          description: The model to update
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                title: Model ID in UUIDv4
                readOnly: true
              id:
                type: string
                description: |-
                  Resource ID (the last segment of the resource name) used to construct the
                  resource name. This conforms to RFC-1034, which restricts to letters,
                  numbers, and hyphen, with the first character a letter, the last a letter
                  or a number, and a 63 character maximum.
              description:
                type: string
                title: Model description
              model_definition:
                type: string
                title: Model definition resource name
              configuration:
                type: object
                title: |-
                  Model configuration represents the configuration JSON that has been
                  validated using the `model_spec` JSON schema of a ModelDefinition
              task:
                $ref: '#/definitions/v1alphaTask'
                title: Model task
                readOnly: true
              state:
                $ref: '#/definitions/v1alphaModelState'
                title: Model state
                readOnly: true
              visibility:
                $ref: '#/definitions/v1alphaModelVisibility'
                title: Model visibility including public or private
                readOnly: true
              create_time:
                type: string
                format: date-time
                title: Model create time
                readOnly: true
              update_time:
                type: string
                format: date-time
                title: Model update time
                readOnly: true
              delete_time:
                type: string
                format: date-time
                title: Model delete time
                readOnly: true
              owner_name:
                type: string
                title: Owner Name
                readOnly: true
              owner:
                type: object
                title: Owner details
                readOnly: true
            title: The model to update
      tags:
        - ModelPublicService
  /v1alpha/{model_definition.name}:
    get:
      summary: |-
        GetModelDefinition method receives a GetModelDefinitionRequest message and
        returns a GetModelDefinitionResponse
      operationId: ModelPublicService_GetModelDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetModelDefinitionResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: model_definition.name
          description: |-
            Resource name of the model definition.
            For example "model-definitions/{uuid}"
          in: path
          required: true
          type: string
          pattern: model-definitions/[^/]+
        - name: view
          description: |-
            Definition view (default is VIEW_BASIC)
            VIEW_UNSPECIFIED/VIEW_BASIC: omit `ModelDefinition.model_spec` and
            `ModelDefinition.model_spec`
            VIEW_FULL: show full information

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
             - VIEW_FULL: View: FULL, full representation of the resource
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
      tags:
        - ModelPublicService
  /v1alpha/{name}:
    get:
      summary: |-
        GetModelOperation method receives a
        GetModelOperationRequest message and returns a
        GetModelOperationResponse message.
      operationId: ModelPublicService_GetModelOperation
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaGetModelOperationResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: The name of the operation resource.
          in: path
          required: true
          type: string
          pattern: operations/[^/]+
        - name: view
          description: |-
            View (default is VIEW_BASIC)
            VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`,
            `Model.configuration` VIEW_FULL: show full information

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
             - VIEW_FULL: View: FULL, full representation of the resource
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
      tags:
        - ModelPublicService
  /v1alpha/{name}/deploy:
    post:
      summary: DeployUserModel deploy a model to online state
      operationId: ModelPublicService_DeployUserModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeployUserModelResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: |-
            Resource name for the model to be deployed.
            Format: users/{user}/models/{model}
          in: path
          required: true
          type: string
          pattern: users/[^/]+/models/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: DeployUserModelRequest represents a request to deploy a model to online state
      tags:
        - ModelPublicService
  /v1alpha/{name}/publish:
    post:
      summary: |-
        PublishUserModel method receives a PublisUserhModelRequest message and returns a
        PublishUserModelResponse
      operationId: ModelPublicService_PublishUserModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaPublishUserModelResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: |-
            Resource name of the model.
            Format: users/{user}/models/{model}
          in: path
          required: true
          type: string
          pattern: users/[^/]+/models/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: PublisUserhModelRequest represents a request to publish a model
      tags:
        - ModelPublicService
  /v1alpha/{name}/rename:
    post:
      summary: RenameUserModel method rename a model
      operationId: ModelPublicService_RenameUserModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaRenameUserModelResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: |-
            Resource name for the model to be renamed.
            Format: users/{user}/models/{model}
          in: path
          required: true
          type: string
          pattern: users/[^/]+/models/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              new_model_id:
                type: string
                title: |-
                  New ID of this model
                  Format: users/{user}/models/{new_model_id}
            title: RenameUserModelRequest represents a request to rename a model
            required:
              - new_model_id
      tags:
        - ModelPublicService
  /v1alpha/{name}/test:
    post:
      summary: |-
        TestUserModel method receives a TestUserModelRequest message
        and returns a TestUserModelResponse message.
      operationId: ModelPublicService_TestUserModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaTestUserModelResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: |-
            The resource name of the model to trigger.
            Format: users/{user}/models/{model}
          in: path
          required: true
          type: string
          pattern: users/[^/]+/models/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              task_inputs:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1alphaTaskInput'
                title: Input to trigger the model
            title: TestUserModelRequest represents a request to test a model
            required:
              - task_inputs
      tags:
        - ModelPublicService
  /v1alpha/{name}/trigger:
    post:
      summary: /////////////////////////////////////////////////////
      description: |-
        TriggerUserModel method receives a TriggerUserModelRequest message
        and returns a TriggerUserModelResponse message.
      operationId: ModelPublicService_TriggerUserModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaTriggerUserModelResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: |-
            The resource name of the model to trigger.
            Format: users/{user}/models/{model}
          in: path
          required: true
          type: string
          pattern: users/[^/]+/models/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              task_inputs:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1alphaTaskInput'
                title: Input to trigger the model
            title: TriggerUserModelRequest represents a request to trigger a model
            required:
              - task_inputs
      tags:
        - ModelPublicService
  /v1alpha/{name}/undeploy:
    post:
      summary: UndeployUserModel undeploy a model to offline state
      operationId: ModelPublicService_UndeployUserModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUndeployUserModelResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: |-
            Resource name for the model to be undeployed.
            Format: users/{user}/models/{model}
          in: path
          required: true
          type: string
          pattern: users/[^/]+/models/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: |-
              UndeployUserModelRequest represents a request to undeploy a model to offline
              state
      tags:
        - ModelPublicService
  /v1alpha/{name}/unpublish:
    post:
      summary: |-
        UnpublishUserModel method receives a UnpublishUserModelRequest message and returns
        a UnpublishUserModelResponse
      operationId: ModelPublicService_UnpublishUserModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUnpublishUserModelResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: |-
            Resource name of the model.
            Format: users/{user}/models/{model}
          in: path
          required: true
          type: string
          pattern: users/[^/]+/models/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: UnpublishUserModelRequest represents a request to unpublish a model
      tags:
        - ModelPublicService
  /v1alpha/{parent}/models:
    get:
      summary: |-
        LisUsertModels method receives a ListUserModelsRequest message and returns a
        ListUserModelsResponse
      operationId: ModelPublicService_ListUserModels
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListUserModelsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent
          description: |-
            The parent resource where this connector resource will be created.
            Format: users/{users}
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: page_size
          description: |-
            Page size: the maximum number of resources to return. The service may
            return fewer than this value. If unspecified, at most 10 models will be
            returned. The maximum value is 100; values above 100 will be coereced to
            100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            Model view (default is VIEW_BASIC)
            VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
            VIEW_FULL: show full information

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
             - VIEW_FULL: View: FULL, full representation of the resource
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
        - name: show_deleted
          description: Return soft_deleted models
          in: query
          required: false
          type: boolean
      tags:
        - ModelPublicService
    post:
      summary: |-
        CreateUserModel method receives a CreateUserModelRequest message and returns a
        CreateUserModelResponse
      operationId: ModelPublicService_CreateUserModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCreateUserModelResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent
          description: |-
            The parent resource where this connector resource will be created.
            Format: users/{users}
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: model
          description: |-
            The model to be created

            The model `name` field is used to identify the model to create.
            Format: users/{user}/models/{model}
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alphaModel'
            required:
              - model
      tags:
        - ModelPublicService
  /v1alpha/{permalink}/lookUp:
    get:
      summary: |-
        LookUpUodel method receives a LookUpModelRequest message and returns a
        LookUpModelResponse
      operationId: ModelPublicService_LookUpModel
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaLookUpModelResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: permalink
          description: |-
            Permalink of a model. For example:
            Format: models/{uid}
          in: path
          required: true
          type: string
          pattern: models/[^/]+
        - name: view
          description: |-
            Model view (default is VIEW_BASIC)
            VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
            VIEW_FULL: show full information

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
             - VIEW_FULL: View: FULL, full representation of the resource
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
      tags:
        - ModelPublicService
  /v1alpha/{resource.resource_permalink}:
    get:
      summary: |-
        GetResource method receives a GetResourceRequest message
        and returns a GetResourceResponse
      operationId: ControllerPrivateService_GetResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/controllerv1alphaGetResourceResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: resource.resource_permalink
          description: |-
            Permalink of a resource. For example:
            "resources/{resource_uuid}/types/{type}"
          in: path
          required: true
          type: string
          pattern: resources/[^/]+/types/[^/]+
      tags:
        - ControllerPrivateService
    delete:
      summary: |-
        DeleteResource method receives a DeleteResourceRequest message
        and returns a DeleteResourceResponse
      operationId: ControllerPrivateService_DeleteResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/controllerv1alphaDeleteResourceResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: resource.resource_permalink
          description: |-
            Permalink of a resource. For example:
            "resources/{resource_uuid}/types/{type}"
          in: path
          required: true
          type: string
          pattern: resources/[^/]+/types/[^/]+
      tags:
        - ControllerPrivateService
    patch:
      summary: |-
        UpdateResource method receives a UpdateResourceRequest message
        and returns a UpdateResourceResponse
      operationId: ControllerPrivateService_UpdateResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/controllerv1alphaUpdateResourceResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: resource.resource_permalink
          description: |-
            Permalink of a resource. For example:
            "resources/{resource_uuid}/types/{type}"
          in: path
          required: true
          type: string
          pattern: resources/[^/]+/types/[^/]+
        - name: resource
          description: Resource state
          in: body
          required: true
          schema:
            type: object
            properties:
              model_state:
                $ref: '#/definitions/v1alphaModelState'
                title: Model state
              backend_state:
                $ref: '#/definitions/HealthCheckResponseServingStatus'
                title: Backend service state
              progress:
                type: integer
                format: int32
                title: Resource longrunning progress
            title: Resource state
        - name: workflow_id
          description: Resource long-running workflow id
          in: query
          required: false
          type: string
      tags:
        - ControllerPrivateService
  /v1alpha/admin/{model_permalink}/check:
    get:
      summary: |-
        CheckModelAdmin method receives a CheckModelAdminRequest message and returns a
        CheckModelAdminResponse
      operationId: ModelPrivateService_CheckModelAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCheckModelAdminResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: model_permalink
          description: |-
            Permalink of a model. For example:
            "models/{uid}"
          in: path
          required: true
          type: string
          pattern: models/[^/]+
      tags:
        - ModelPrivateService
  /v1alpha/admin/{model_permalink}/deploy:
    post:
      summary: DeployModelAdmin deploy a model to online state
      operationId: ModelPrivateService_DeployModelAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeployModelAdminResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: model_permalink
          description: |-
            Permalink for the model to be deployed.
            Format: "models/{uid}"
          in: path
          required: true
          type: string
          pattern: models/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: DeployModelAdminRequest represents a request to deploy a model to online state
      tags:
        - ModelPrivateService
  /v1alpha/admin/{model_permalink}/undeploy:
    post:
      summary: UndeployModelAdmin undeploy a model to offline state
      operationId: ModelPrivateService_UndeployModelAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUndeployModelAdminResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: model_permalink
          description: |-
            Permalink for the model to be undeployed.
            Format: "models/{uid}"
          in: path
          required: true
          type: string
          pattern: models/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: |-
              UndeployModelAdminRequest represents a request to undeploy a model to offline
              state
      tags:
        - ModelPrivateService
  /v1alpha/admin/{permalink}/lookUp:
    get:
      summary: |-
        LookUpModelAdmin method receives a LookUpModelAdminRequest message and
        returns a LookUpModelAdminResponse
      operationId: ModelPrivateService_LookUpModelAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaLookUpModelAdminResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: permalink
          description: |-
            Permalink of a model. For example:
            "models/{uid}"
          in: path
          required: true
          type: string
          pattern: models/[^/]+
        - name: view
          description: |-
            Model view (default is VIEW_BASIC)
            VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
            VIEW_FULL: show full information

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
             - VIEW_FULL: View: FULL, full representation of the resource
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
      tags:
        - ModelPrivateService
  /v1alpha/admin/models:
    get:
      summary: |-
        ListModelsAdmin method receives a ListModelsAdminRequest message and
        returns a ListModelsAdminResponse
      operationId: ModelPrivateService_ListModelsAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListModelsAdminResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            Page size: the maximum number of resources to return. The service may
            return fewer than this value. If unspecified, at most 10 models will be
            returned. The maximum value is 100; values above 100 will be coereced to
            100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            Model view (default is VIEW_BASIC)
            VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
            VIEW_FULL: show full information

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
             - VIEW_FULL: View: FULL, full representation of the resource
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
        - name: show_deleted
          description: Return soft_deleted models
          in: query
          required: false
          type: boolean
      tags:
        - ModelPrivateService
  /v1alpha/health/controller:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: ControllerPrivateService_Liveness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/modelcontrollerv1alphaLivenessResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - ControllerPrivateService
  /v1alpha/health/model:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: ModelPublicService_Liveness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/modelmodelv1alphaLivenessResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - ModelPublicService
  /v1alpha/model-definitions:
    get:
      summary: |-
        ListModelDefinitions method receives a ListModelDefinitionsRequest message
        and returns a ListModelDefinitionsResponse
      operationId: ModelPublicService_ListModelDefinitions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListModelDefinitionsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            Page size: the maximum number of resources to return. The service may
            return fewer than this value. If unspecified, at most 10 ModelDefinitions
            will be returned. The maximum value is 100; values above 100 will be
            coereced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            Definition view (default is VIEW_BASIC)
            VIEW_UNSPECIFIED/VIEW_BASIC: omit `ModelDefinition.model_spec` and
            `ModelDefinition.model_spec`
            VIEW_FULL: show full information

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
             - VIEW_FULL: View: FULL, full representation of the resource
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
      tags:
        - ModelPublicService
  /v1alpha/models:
    get:
      summary: |-
        ListModels method receives a ListModelsRequest message and returns a
        ListModelsResponse
      operationId: ModelPublicService_ListModels
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListModelsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            Page size: the maximum number of resources to return. The service may
            return fewer than this value. If unspecified, at most 10 models will be
            returned. The maximum value is 100; values above 100 will be coereced to
            100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            Model view (default is VIEW_BASIC)
            VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
            VIEW_FULL: show full information

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
             - VIEW_FULL: View: FULL, full representation of the resource
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
        - name: show_deleted
          description: Return soft_deleted models
          in: query
          required: false
          type: boolean
      tags:
        - ModelPublicService
  /v1alpha/ready/model:
    get:
      summary: |-
        Readiness method receives a ReadinessRequest message and returns a
        ReadinessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: ModelPublicService_Readiness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/modelmodelv1alphaReadinessResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - ModelPublicService
  /v1beta/__liveness:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: PipelinePublicService_Liveness
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/vdppipelinev1betaLivenessResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - PipelinePublicService
  /v1beta/__readiness:
    get:
      summary: |-
        Readiness method receives a ReadinessRequest message and returns a
        ReadinessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: PipelinePublicService_Readiness
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/vdppipelinev1betaReadinessResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - PipelinePublicService
  /v1beta/{connector.name_1}:
    get:
      summary: |-
        GetOrganizationConnector method receives a GetOrganizationConnectorRequest
        message and returns a GetOrganizationConnectorResponse message.
      operationId: PipelinePublicService_GetOrganizationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetOrganizationConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: connector.name_1
          description: |-
            Connectorconnector name. It must have the format of
            "connectors/*"
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/connectors/[^/]+
        - name: view
          description: |-
            Connector view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_CONFIGURATION: Contains the connector configuration.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_CONFIGURATION
      tags:
        - PipelinePublicService
    delete:
      summary: |-
        DeleteOrganizationConnector method receives a
        DeleteOrganizationConnectorRequest message and returns a
        DeleteOrganizationConnectorResponse message.
      operationId: PipelinePublicService_DeleteOrganizationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaDeleteOrganizationConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: connector.name_1
          description: |-
            connector name. It must have the format of
            "connectors/*"
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/connectors/[^/]+
      tags:
        - PipelinePublicService
    patch:
      summary: |-
        UpdateOrganizationConnector method receives a
        UpdateOrganizationConnectorRequest message and returns a
        UpdateOrganizationConnectorResponse message.
      operationId: PipelinePublicService_UpdateOrganizationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaUpdateOrganizationConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: connector.name_1
          description: |-
            The name of the connector, defined by its ID.
            - Format: `connectors/{id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/connectors/[^/]+
        - name: connector
          description: connector
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Connector UUID.
                readOnly: true
              id:
                type: string
                description: |-
                  Connector resource ID (used in the name as the last segment). This conforms
                  to RFC-1034, which restricts to letters, numbers, and hyphen, with the
                  first character a letter, the last a letter or a number, and a 63
                  character maximum.
              connector_definition_name:
                type: string
                description: ConnectorDefinition that describes the connector configuration.
              type:
                $ref: '#/definitions/v1betaConnectorType'
                description: Connector type.
                readOnly: true
              description:
                type: string
                description: Connector description.
              configuration:
                type: object
                description: Connector configuration in JSON format.
              state:
                $ref: '#/definitions/v1betaConnectorState'
                description: Connector state.
                readOnly: true
              tombstone:
                type: boolean
                description: |-
                  Connector tombstone. If true, this configuration is permanently off.
                  Otherwise, the configuration is active.
                readOnly: true
              create_time:
                type: string
                format: date-time
                description: Connector creation time.
                readOnly: true
              update_time:
                type: string
                format: date-time
                description: Connector update time.
                readOnly: true
              visibility:
                $ref: '#/definitions/v1betaConnectorVisibility'
                description: Connector visibility.
                readOnly: true
              connector_definition:
                $ref: '#/definitions/v1betaConnectorDefinition'
                description: Embed content of the ConnectorDefinition.
                readOnly: true
              delete_time:
                type: string
                format: date-time
                description: Connector deletion time.
                readOnly: true
              owner_name:
                type: string
                description: Owner name.
                readOnly: true
              owner:
                type: object
                description: Owner details.
                readOnly: true
            title: connector
            required:
              - configuration
      tags:
        - PipelinePublicService
  /v1beta/{connector.name_1}/testConnection:
    post:
      summary: |-
        TestOrganizationConnector method receives a TestOrganizationConnectorRequest
        message and returns a TestOrganizationConnectorResponse
      operationId: PipelinePublicService_TestOrganizationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaTestOrganizationConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: connector.name_1
          description: |-
            connector name. It must have the format of
            "connectors/*"
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/connectors/[^/]+
      tags:
        - PipelinePublicService
  /v1beta/{connector.name_1}/watch:
    get:
      summary: |-
        WatchOrganizationConnector method receives a
        WatchOrganizationConnectorRequest message and returns a
        WatchOrganizationConnectorResponse
      operationId: PipelinePublicService_WatchOrganizationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaWatchOrganizationConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: connector.name_1
          description: |-
            connector name. It must have the format of
            "connectors/*"
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/connectors/[^/]+
      tags:
        - PipelinePublicService
  /v1beta/{connector.name}:
    get:
      summary: |-
        GetUserConnector method receives a GetUserConnectorRequest
        message and returns a GetUserConnectorResponse message.
      operationId: PipelinePublicService_GetUserConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetUserConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: connector.name
          description: |-
            Connectorconnector name. It must have the format of
            "connectors/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connectors/[^/]+
        - name: view
          description: |-
            Connector view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_CONFIGURATION: Contains the connector configuration.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_CONFIGURATION
      tags:
        - PipelinePublicService
    delete:
      summary: |-
        DeleteUserConnector method receives a
        DeleteUserConnectorRequest message and returns a
        DeleteUserConnectorResponse message.
      operationId: PipelinePublicService_DeleteUserConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaDeleteUserConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: connector.name
          description: |-
            connector name. It must have the format of
            "connectors/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connectors/[^/]+
      tags:
        - PipelinePublicService
    patch:
      summary: |-
        UpdateUserConnector method receives a
        UpdateUserConnectorRequest message and returns a
        UpdateUserConnectorResponse message.
      operationId: PipelinePublicService_UpdateUserConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaUpdateUserConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: connector.name
          description: |-
            The name of the connector, defined by its ID.
            - Format: `connectors/{id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connectors/[^/]+
        - name: connector
          description: connector
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Connector UUID.
                readOnly: true
              id:
                type: string
                description: |-
                  Connector resource ID (used in the name as the last segment). This conforms
                  to RFC-1034, which restricts to letters, numbers, and hyphen, with the
                  first character a letter, the last a letter or a number, and a 63
                  character maximum.
              connector_definition_name:
                type: string
                description: ConnectorDefinition that describes the connector configuration.
              type:
                $ref: '#/definitions/v1betaConnectorType'
                description: Connector type.
                readOnly: true
              description:
                type: string
                description: Connector description.
              configuration:
                type: object
                description: Connector configuration in JSON format.
              state:
                $ref: '#/definitions/v1betaConnectorState'
                description: Connector state.
                readOnly: true
              tombstone:
                type: boolean
                description: |-
                  Connector tombstone. If true, this configuration is permanently off.
                  Otherwise, the configuration is active.
                readOnly: true
              create_time:
                type: string
                format: date-time
                description: Connector creation time.
                readOnly: true
              update_time:
                type: string
                format: date-time
                description: Connector update time.
                readOnly: true
              visibility:
                $ref: '#/definitions/v1betaConnectorVisibility'
                description: Connector visibility.
                readOnly: true
              connector_definition:
                $ref: '#/definitions/v1betaConnectorDefinition'
                description: Embed content of the ConnectorDefinition.
                readOnly: true
              delete_time:
                type: string
                format: date-time
                description: Connector deletion time.
                readOnly: true
              owner_name:
                type: string
                description: Owner name.
                readOnly: true
              owner:
                type: object
                description: Owner details.
                readOnly: true
            title: connector
            required:
              - configuration
      tags:
        - PipelinePublicService
  /v1beta/{connector.name}/testConnection:
    post:
      summary: |-
        TestUserConnector method receives a TestUserConnectorRequest
        message and returns a TestUserConnectorResponse
      operationId: PipelinePublicService_TestUserConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaTestUserConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: connector.name
          description: |-
            connector name. It must have the format of
            "connectors/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connectors/[^/]+
      tags:
        - PipelinePublicService
  /v1beta/{connector.name}/watch:
    get:
      summary: |-
        WatchUserConnector method receives a
        WatchUserConnectorRequest message and returns a
        WatchUserConnectorResponse
      operationId: PipelinePublicService_WatchUserConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaWatchUserConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: connector.name
          description: |-
            connector name. It must have the format of
            "connectors/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connectors/[^/]+
      tags:
        - PipelinePublicService
  /v1beta/{connector_definition.name}:
    get:
      summary: |-
        GetConnectorDefinition method receives a
        GetConnectorDefinitionRequest message and returns a
        GetGetConnectorDefinitionResponse message.
      operationId: PipelinePublicService_GetConnectorDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetConnectorDefinitionResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: connector_definition.name
          description: |-
            ConnectorDefinition resource name. It must have the format of
            "connector-definitions/*"
          in: path
          required: true
          type: string
          pattern: connector-definitions/[^/]+
        - name: view
          description: |-
            ConnectorDefinition resource view (default is
            DEFINITION_VIEW_BASIC)

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
      tags:
        - PipelinePublicService
  /v1beta/{membership.name_1}:
    get:
      summary: |-
        GetOrganizationMembership method receives a GetOrganizationMembershipRequest message and returns a
        GetOrganizationMembershipResponse message.
      operationId: MgmtPublicService_GetOrganizationMembership
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetOrganizationMembershipResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: membership.name_1
          description: Membership resource name. It must have the format of "organizations/*/memberships/*"
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/memberships/[^/]+
        - name: view
          description: |-
            Membership resource view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
      tags:
        - MgmtPublicService
    delete:
      summary: |-
        DeleteOrganizationMembership method receives a DeleteOrganizationMembershipRequest message and returns
        a DeleteOrganizationMembershipResponse message.
      operationId: MgmtPublicService_DeleteOrganizationMembership
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaDeleteOrganizationMembershipResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: membership.name_1
          description: Membership resource name. It must have the format of "organizations/*/membership/*"
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/memberships/[^/]+
      tags:
        - MgmtPublicService
    put:
      summary: |-
        UpdateOrganizationMembership method receives a UpdateOrganizationMembershipRequest message and returns
        a UpdateOrganizationMembershipResponse message.
      operationId: MgmtPublicService_UpdateOrganizationMembership
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaUpdateOrganizationMembershipResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: membership.name_1
          description: Resource name. It must have the format of "organizations/*/memberships/*"
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/memberships/[^/]+
        - name: membership
          description: A membership resource to update
          in: body
          required: true
          schema:
            type: object
            properties:
              role:
                type: string
                title: Role
              state:
                $ref: '#/definitions/v1betaMembershipState'
                title: State
                readOnly: true
              user:
                $ref: '#/definitions/mgmtv1betaUser'
                title: User
                readOnly: true
              organization:
                $ref: '#/definitions/v1betaOrganization'
                title: Organization
                readOnly: true
            title: A membership resource to update
            required:
              - role
        - name: update_mask
          description: Update mask for a membership resource
          in: query
          required: true
          type: string
      tags:
        - MgmtPublicService
  /v1beta/{membership.name}:
    get:
      summary: |-
        GetUserMembership method receives a GetUserMembershipRequest message and returns a
        GetUserMembershipResponse message.
      operationId: MgmtPublicService_GetUserMembership
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetUserMembershipResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: membership.name
          description: Membership resource name. It must have the format of "users/*/memberships/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/memberships/[^/]+
        - name: view
          description: |-
            Membership resource view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
      tags:
        - MgmtPublicService
    delete:
      summary: |-
        DeleteUserMembership method receives a DeleteUserMembershipRequest message and returns
        a DeleteUserMembershipResponse message.
      operationId: MgmtPublicService_DeleteUserMembership
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaDeleteUserMembershipResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: membership.name
          description: Membership resource name. It must have the format of "users/*/membership/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/memberships/[^/]+
      tags:
        - MgmtPublicService
    put:
      summary: |-
        UpdateUserMembership method receives a UpdateUserMembershipRequest message and returns
        a UpdateUserMembershipResponse message.
      operationId: MgmtPublicService_UpdateUserMembership
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaUpdateUserMembershipResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: membership.name
          description: Resource name. It must have the format of "users/*/memberships/*".
          in: path
          required: true
          type: string
          pattern: users/[^/]+/memberships/[^/]+
        - name: membership
          description: A membership resource to update
          in: body
          required: true
          schema:
            type: object
            properties:
              role:
                type: string
                title: Role
                readOnly: true
              state:
                $ref: '#/definitions/v1betaMembershipState'
                title: State
              user:
                $ref: '#/definitions/mgmtv1betaUser'
                title: User
                readOnly: true
              organization:
                $ref: '#/definitions/v1betaOrganization'
                title: Organization
                readOnly: true
            title: A membership resource to update
            required:
              - state
        - name: update_mask
          description: Update mask for a membership resource
          in: query
          required: true
          type: string
      tags:
        - MgmtPublicService
  /v1beta/{name_1}/connect:
    post:
      summary: |-
        Connect a connector.
        The "state" of the connector after connecting is "CONNECTED".
        ConnectOrganizationConnector can be called on Connector in the
        state `DISCONNECTED`; Connector in a different state (including
        `CONNECTED`) returns an error.
      operationId: PipelinePublicService_ConnectOrganizationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaConnectOrganizationConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name_1
          description: |-
            connector name. It must have the format of
            "connectors/*"
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/connectors/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: |-
              ConnectOrganizationConnectorRequest represents a request to connect a
              connector
      tags:
        - PipelinePublicService
  /v1beta/{name_1}/disconnect:
    post:
      summary: |-
        Disconnect a connector.
        The "state" of the connector after disconnecting is "DISCONNECTED".
        DisconnectOrganizationConnector can be called on Connector in the
        state `CONNECTED`; Connector in a different state (including
        `DISCONNECTED`) returns an error.
      operationId: PipelinePublicService_DisconnectOrganizationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaDisconnectOrganizationConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name_1
          description: |-
            connector name. It must have the format of
            "connectors/*"
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/connectors/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: |-
              DisconnectOrganizationConnectorRequest represents a request to disconnect a
              connector
      tags:
        - PipelinePublicService
  /v1beta/{name_1}/execute:
    post:
      summary: |-
        ExecuteOrganizationConnector method receives a
        ExecuteOrganizationConnectorRequest message and returns a
        ExecuteOrganizationConnectorResponse message.
      operationId: PipelinePublicService_ExecuteOrganizationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaExecuteOrganizationConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name_1
          description: |-
            Name of a connector. For example:
            "connectors/{name}"
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/connectors/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              inputs:
                type: array
                items:
                  type: object
                title: Inputs
              task:
                type: string
                title: Task
            title: |-
              ExecuteOrganizationConnectorRequest represents a private request to execution
              connector
      tags:
        - PipelinePublicService
  /v1beta/{name_1}/rename:
    post:
      summary: |-
        RenameUserPipelineRelease method receives a RenameUserPipelineReleaseRequest message and returns
        a RenameUserPipelineReleaseResponse message.
      operationId: PipelinePublicService_RenameUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaRenameUserPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name_1
          description: Pipeline release resource name. It must have the format of "users/*/pipelines/*/releases/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+/releases/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              new_pipeline_release_id:
                type: string
                title: |-
                  Pipeline new resource id to replace with the pipeline resource name to be
                  "users/*/pipelines/*/releases/{new_pipeline_id}"
            title: |-
              RenameUserPipelineReleaseRequest represents a request to rename the pipeline release resource
              name
            required:
              - new_pipeline_release_id
      tags:
        - PipelinePublicService
  /v1beta/{name_1}/restore:
    post:
      summary: |-
        RestoreOrganizationPipelineRelease method receives a RestoreOrganizationPipelineReleaseRequest message
        and returns a RestoreOrganizationPipelineReleaseResponse
      operationId: PipelinePublicService_RestoreOrganizationPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaRestoreOrganizationPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name_1
          description: Pipeline resource name. It must have the format of "organizations/*/pipelines/*/releases/*"
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+/releases/[^/]+
      tags:
        - PipelinePublicService
  /v1beta/{name_1}/trigger:
    post:
      summary: |-
        TriggerUserPipelineRelease method receives a TriggeUserPipelineReleaseRequest message
        and returns a TriggerPipelineReleasePipelineResponse.
      operationId: PipelinePublicService_TriggerUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaTriggerUserPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name_1
          description: Resource name.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+/releases/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              inputs:
                type: array
                items:
                  type: object
                title: Input to the pipeline
            title: TriggerUserPipelineReleaseRequest represents a request to trigger a pipeline_released pipeline
            required:
              - inputs
      tags:
        - PipelinePublicService
  /v1beta/{name_1}/triggerAsync:
    post:
      summary: |-
        TriggerAsyncUserPipelineRelease method receives a TriggerAsyncUserPipelineReleaseRequest message and
        returns a TriggerAsyncUserPipelineReleaseResponse.
      operationId: PipelinePublicService_TriggerAsyncUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaTriggerAsyncUserPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name_1
          description: Resource name.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+/releases/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              inputs:
                type: array
                items:
                  type: object
                title: Input to the pipeline
            title: TriggerAsyncUserPipelineReleaseRequest represents a request to trigger a pipeline_released pipeline
            required:
              - inputs
      tags:
        - PipelinePublicService
  /v1beta/{name_1}/validate:
    post:
      summary: Validate a pipeline.
      operationId: PipelinePublicService_ValidateOrganizationPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaValidateOrganizationPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name_1
          description: Pipeline resource name. It must have the format of "organizations/*/pipelines/*"
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: ValidatePOrganizationipelineRequest represents a request to validate a pipeline
      tags:
        - PipelinePublicService
  /v1beta/{name_2}/rename:
    post:
      summary: |-
        RenameOrganizationPipeline method receives a RenameOrganizationPipelineRequest message and returns
        a RenameOrganizationPipelineResponse message.
      operationId: PipelinePublicService_RenameOrganizationPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaRenameOrganizationPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name_2
          description: Pipeline resource name. It must have the format of "organizations/*/pipelines/*"
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              new_pipeline_id:
                type: string
                title: |-
                  Pipeline new resource id to replace with the pipeline resource name to be
                  "organizations/*/pipelines/{new_pipeline_id}"
            title: |-
              RenameOrganizationPipelineRequest represents a request to rename the pipeline resource
              name
            required:
              - new_pipeline_id
      tags:
        - PipelinePublicService
  /v1beta/{name_2}/trigger:
    post:
      summary: |-
        TriggerOrganizationPipeline method receives a TriggerOrganizationPipelineRequest message
        and returns a TriggerOrganizationPipelineResponse.
      operationId: PipelinePublicService_TriggerOrganizationPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaTriggerOrganizationPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name_2
          description: Pipeline resource name. It must have the format of "organizations/*/pipelines/*"
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              inputs:
                type: array
                items:
                  type: object
                title: Input to the pipeline
            title: TriggerOrganizationPipelineRequest represents a request to trigger a pipeline
            required:
              - inputs
      tags:
        - PipelinePublicService
  /v1beta/{name_2}/triggerAsync:
    post:
      summary: |-
        TriggerAsyncOrganizationPipeline method receives a TriggerAsyncOrganizationPipelineRequest message and
        returns a TriggerAsyncOrganizationPipelineResponse.
      operationId: PipelinePublicService_TriggerAsyncOrganizationPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaTriggerAsyncOrganizationPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name_2
          description: Pipeline resource name. It must have the format of "organizations/*/pipelines/*"
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              inputs:
                type: array
                items:
                  type: object
                title: Input to the pipeline
            title: TriggerAsyncOrganizationPipelineRequest represents a request to trigger a async pipeline
            required:
              - inputs
      tags:
        - PipelinePublicService
  /v1beta/{name_3}/rename:
    post:
      summary: |-
        RenameOrganizationPipelineRelease method receives a RenameOrganizationPipelineReleaseRequest message and returns
        a RenameOrganizationPipelineReleaseResponse message.
      operationId: PipelinePublicService_RenameOrganizationPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaRenameOrganizationPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name_3
          description: Pipeline release resource name. It must have the format of "organizations/*/pipelines/*/releases/*"
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+/releases/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              new_pipeline_release_id:
                type: string
                title: |-
                  Pipeline new resource id to replace with the pipeline resource name to be
                  "organizations/*/pipelines/*/releases/{new_pipeline_id}"
            title: |-
              RenameOrganizationPipelineReleaseRequest represents a request to rename the pipeline release resource
              name
            required:
              - new_pipeline_release_id
      tags:
        - PipelinePublicService
  /v1beta/{name_3}/trigger:
    post:
      summary: |-
        TriggerOrganizationPipelineRelease method receives a TriggeOrganizationPipelineReleaseRequest message
        and returns a TriggerPipelineReleasePipelineResponse.
      operationId: PipelinePublicService_TriggerOrganizationPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaTriggerOrganizationPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name_3
          description: Resource name.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+/releases/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              inputs:
                type: array
                items:
                  type: object
                title: Input to the pipeline
            title: TriggerOrganizationPipelineReleaseRequest represents a request to trigger a pipeline_released pipeline
            required:
              - inputs
      tags:
        - PipelinePublicService
  /v1beta/{name_3}/triggerAsync:
    post:
      summary: |-
        TriggerAsyncOrganizationPipelineRelease method receives a TriggerAsyncOrganizationPipelineReleaseRequest message and
        returns a TriggerAsyncOrganizationPipelineReleaseResponse.
      operationId: PipelinePublicService_TriggerAsyncOrganizationPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaTriggerAsyncOrganizationPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name_3
          description: Resource name.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+/releases/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              inputs:
                type: array
                items:
                  type: object
                title: Input to the pipeline
            title: TriggerAsyncOrganizationPipelineReleaseRequest represents a request to trigger a pipeline_released pipeline
            required:
              - inputs
      tags:
        - PipelinePublicService
  /v1beta/{name_4}/rename:
    post:
      summary: |-
        RenameUserConnector method receives a
        RenameUserConnectorRequest message and returns a
        RenameUserConnectorResponse message.
      operationId: PipelinePublicService_RenameUserConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaRenameUserConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name_4
          description: |-
            connector name. It must have the format of
            "connectors/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connectors/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              new_connector_id:
                type: string
                title: |-
                  Connector new resource id to replace with the
                  connector name to be
                  "connectors/{new_connector_id}"
            title: |-
              RenameUserConnectorRequest represents a request to rename the
              connector name
            required:
              - new_connector_id
      tags:
        - PipelinePublicService
  /v1beta/{name_5}/rename:
    post:
      summary: |-
        RenameOrganizationConnector method receives a
        RenameOrganizationConnectorRequest message and returns a
        RenameOrganizationConnectorResponse message.
      operationId: PipelinePublicService_RenameOrganizationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaRenameOrganizationConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name_5
          description: |-
            connector name. It must have the format of
            "connectors/*"
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/connectors/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              new_connector_id:
                type: string
                title: |-
                  Connector new resource id to replace with the
                  connector name to be
                  "connectors/{new_connector_id}"
            title: |-
              RenameOrganizationConnectorRequest represents a request to rename the
              connector name
            required:
              - new_connector_id
      tags:
        - PipelinePublicService
  /v1beta/{name}:
    get:
      summary: |-
        GetOperation method receives a
        GetOperationRequest message and returns a
        GetOperationResponse message.
      operationId: PipelinePublicService_GetOperation
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetOperationResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: The name of the operation resource.
          in: path
          required: true
          type: string
          pattern: operations/[^/]+
      tags:
        - PipelinePublicService
  /v1beta/{name}/connect:
    post:
      summary: |-
        Connect a connector.
        The "state" of the connector after connecting is "CONNECTED".
        ConnectUserConnector can be called on Connector in the
        state `DISCONNECTED`; Connector in a different state (including
        `CONNECTED`) returns an error.
      operationId: PipelinePublicService_ConnectUserConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaConnectUserConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: |-
            connector name. It must have the format of
            "connectors/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connectors/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: |-
              ConnectUserConnectorRequest represents a request to connect a
              connector
      tags:
        - PipelinePublicService
  /v1beta/{name}/disconnect:
    post:
      summary: |-
        Disconnect a connector.
        The "state" of the connector after disconnecting is "DISCONNECTED".
        DisconnectUserConnector can be called on Connector in the
        state `CONNECTED`; Connector in a different state (including
        `DISCONNECTED`) returns an error.
      operationId: PipelinePublicService_DisconnectUserConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaDisconnectUserConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: |-
            connector name. It must have the format of
            "connectors/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connectors/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: |-
              DisconnectUserConnectorRequest represents a request to disconnect a
              connector
      tags:
        - PipelinePublicService
  /v1beta/{name}/execute:
    post:
      summary: |-
        ExecuteUserConnector method receives a
        ExecuteUserConnectorRequest message and returns a
        ExecuteUserConnectorResponse message.
      operationId: PipelinePublicService_ExecuteUserConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaExecuteUserConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: |-
            Name of a connector. For example:
            "connectors/{name}"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/connectors/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              inputs:
                type: array
                items:
                  type: object
                title: Inputs
              task:
                type: string
                title: Task
            title: |-
              ExecuteUserConnectorRequest represents a private request to execution
              connector
      tags:
        - PipelinePublicService
  /v1beta/{name}/rename:
    post:
      summary: |-
        RenameUserPipeline method receives a RenameUserPipelineRequest message and returns
        a RenameUserPipelineResponse message.
      operationId: PipelinePublicService_RenameUserPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaRenameUserPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: Pipeline resource name. It must have the format of "users/*/pipelines/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              new_pipeline_id:
                type: string
                title: |-
                  Pipeline new resource id to replace with the pipeline resource name to be
                  "users/*/pipelines/{new_pipeline_id}"
            title: |-
              RenameUserPipelineRequest represents a request to rename the pipeline resource
              name
            required:
              - new_pipeline_id
      tags:
        - PipelinePublicService
  /v1beta/{name}/restore:
    post:
      summary: |-
        RestoreUserPipelineRelease method receives a RestoreUserPipelineReleaseRequest message
        and returns a RestoreUserPipelineReleaseResponse
      operationId: PipelinePublicService_RestoreUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaRestoreUserPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: Pipeline resource name. It must have the format of "users/*/pipelines/*/releases/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+/releases/[^/]+
      tags:
        - PipelinePublicService
  /v1beta/{name}/trigger:
    post:
      summary: |-
        TriggerUserPipeline method receives a TriggerUserPipelineRequest message
        and returns a TriggerUserPipelineResponse.
      operationId: PipelinePublicService_TriggerUserPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaTriggerUserPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: Pipeline resource name. It must have the format of "users/*/pipelines/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              inputs:
                type: array
                items:
                  type: object
                title: Input to the pipeline
            title: TriggerUserPipelineRequest represents a request to trigger a pipeline
            required:
              - inputs
      tags:
        - PipelinePublicService
  /v1beta/{name}/triggerAsync:
    post:
      summary: |-
        TriggerAsyncUserPipeline method receives a TriggerAsyncUserPipelineRequest message and
        returns a TriggerAsyncUserPipelineResponse.
      operationId: PipelinePublicService_TriggerAsyncUserPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaTriggerAsyncUserPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: Pipeline resource name. It must have the format of "users/*/pipelines/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              inputs:
                type: array
                items:
                  type: object
                title: Input to the pipeline
            title: TriggerAsyncUserPipelineRequest represents a request to trigger a async pipeline
            required:
              - inputs
      tags:
        - PipelinePublicService
  /v1beta/{name}/validate:
    post:
      summary: Validate a pipeline.
      operationId: PipelinePublicService_ValidateUserPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaValidateUserPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: name
          description: Pipeline resource name. It must have the format of "users/*/pipelines/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            title: ValidatePUseripelineRequest represents a request to validate a pipeline
      tags:
        - PipelinePublicService
  /v1beta/{operator_definition.name}:
    get:
      summary: |-
        GetOperatorDefinition method receives a
        GetOperatorDefinitionRequest message and returns a
        GetGetOperatorDefinitionResponse message.
      operationId: PipelinePublicService_GetOperatorDefinition
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetOperatorDefinitionResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: operator_definition.name
          description: |-
            Operator resource name. It must have the format of
            "operator-definitions/*"
          in: path
          required: true
          type: string
          pattern: operator-definitions/[^/]+
        - name: view
          description: |-
            Operator resource view (default is
            DEFINITION_VIEW_BASIC)

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
      tags:
        - PipelinePublicService
  /v1beta/{operator_definition.permalink}/lookUp:
    get:
      summary: |-
        LookUpConnector method receives a
        LookUpConnectorRequest message and returns a
        LookUpConnectorResponse
      operationId: PipelinePublicService_LookUpConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaLookUpConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: operator_definition.permalink
          description: |-
            The permalink of the connector, which allows its access by UID.
            - Format: `connectors/{uid}`.
          in: path
          required: true
          type: string
          pattern: connectors/[^/]+
        - name: view
          description: |-
            View allows clients to specify the desired connector view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_CONFIGURATION: Contains the connector configuration.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_CONFIGURATION
      tags:
        - PipelinePublicService
  /v1beta/{organization.name}:
    get:
      summary: |-
        GetOrganization method receives a GetOrganizationRequest message and returns
        a GetOrganizationResponse message.
      operationId: MgmtPublicService_GetOrganization
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetOrganizationResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization.name
          description: |-
            Resource name of a organization. For example:
            "organizations/local-organization"
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
      tags:
        - MgmtPublicService
    delete:
      summary: |-
        DeleteOrganization method receives a DeleteOrganizationRequest message and
        returns a DeleteOrganizationResponse
      operationId: MgmtPublicService_DeleteOrganization
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaDeleteOrganizationResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization.name
          description: |-
            The resource name of the organization to be deleted,
            for example: "organizations/local-organization"
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+
      tags:
        - MgmtPublicService
    patch:
      summary: |-
        UpdateOrganization method receives a UpdateOrganizationRequest message and
        returns a UpdateOrganizationResponse
      operationId: MgmtPublicService_UpdateOrganization
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaUpdateOrganizationResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization.name
          description: |-
            Resource name. It must have the format of "organizations/*".
            For example: "organizations/local-organization".
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+
        - name: organization
          description: |-
            The organization to update

            The organization's `name` field is used to identify the organization to update.
            Format: organizations/{organization}
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Organization ID in UUIDv4.
                readOnly: true
              id:
                type: string
                description: |-
                  Resource ID (the last segment of the resource name), also the organization
                  name. This conforms to RFC-1034, which restricts to letters, numbers,
                  and hyphen, with the first character a letter, the last a letter or a
                  number, and a 63 character maximum.
                  Note that the ID can be updated.
              create_time:
                type: string
                format: date-time
                title: 'Owner type: fixed to `OWNER_TYPE_USER`'
                readOnly: true
              update_time:
                type: string
                format: date-time
                title: Organization update time
                readOnly: true
              org_name:
                type: string
                title: Organization company or institution name
              customer_id:
                type: string
                description: Stripe customer ID. This field is used in Instill Cloud.
                readOnly: true
              profile_avatar:
                type: string
                title: Profile Avatar base64
              profile_data:
                type: object
                title: Profile Data
              owner:
                $ref: '#/definitions/mgmtv1betaUser'
                title: Owner
                readOnly: true
            description: |-
              The organization's `name` field is used to identify the organization to update.
              Format: organizations/{organization}
            title: The organization to update
            required:
              - id
      tags:
        - MgmtPublicService
  /v1beta/{parent_1}/connectors:
    get:
      summary: |-
        ListOrganizationConnectors method receives a
        ListOrganizationConnectorsRequest message and returns a
        ListOrganizationConnectorsResponse message.
      operationId: PipelinePublicService_ListOrganizationConnectors
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListOrganizationConnectorsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent_1
          description: |-
            The parent resource where this connector will be created.
            Format: organizations/{organizations}
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+
        - name: page_size
          description: |-
            The maximum number of connectors to return. The service may return fewer
            than this value. If unspecified, at most 10 connectors will be returned.
            The maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            Connector view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_CONFIGURATION: Contains the connector configuration.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_CONFIGURATION
        - name: filter
          description: Filter expression to list connectors
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Return soft_deleted connectors
          in: query
          required: false
          type: boolean
      tags:
        - PipelinePublicService
    post:
      summary: |-
        CreateOrganizationConnector method receives a
        CreateOrganizationConnectorRequest message and returns a
        CreateOrganizationConnectorResponse message.
      operationId: PipelinePublicService_CreateOrganizationConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaCreateOrganizationConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent_1
          description: |-
            The parent resource where this connector will be created.
            Format: organizations/{organizations}
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+
        - name: connector
          description: connector
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1betaConnector'
            required:
              - connector
      tags:
        - PipelinePublicService
  /v1beta/{parent_1}/memberships:
    get:
      summary: |-
        ListOrganizationMemberships method receives a ListOrganizationMembershipsRequest message and returns a
        ListOrganizationMembershipsResponse message.
      operationId: MgmtPublicService_ListOrganizationMemberships
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListOrganizationMembershipsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent_1
          description: |-
            The parent resource where this connector resource will be created.
            Format: organization/{organizations}
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+
      tags:
        - MgmtPublicService
  /v1beta/{parent_1}/pipelines:
    get:
      summary: |-
        ListOrganizationPipelines method receives a ListOrganizationPipelinesRequest message and returns a
        ListOrganizationPipelinesResponse message.
      operationId: PipelinePublicService_ListOrganizationPipelines
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListOrganizationPipelinesResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent_1
          description: |-
            The parent resource where this connector resource will be created.
            Format: organizations/{organizations}
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+
        - name: page_size
          description: |-
            The maximum number of pipelines to return. The service may return fewer
            than this value. If unspecified, at most 10 pipelines will be returned. The
            maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_RECIPE: Contains the recipe of the resource.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
        - name: filter
          description: Filter expression to list pipelines
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Return soft_deleted pipeline releases
          in: query
          required: false
          type: boolean
      tags:
        - PipelinePublicService
    post:
      summary: |-
        CreateOrganizationPipeline method receives a CreateOrganizationPipelineRequest message and returns
        a CreateOrganizationPipelineResponse message.
      operationId: PipelinePublicService_CreateOrganizationPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaCreateOrganizationPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent_1
          description: |-
            The parent resource where this connector resource will be created.
            Format: organizations/{organizations}
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+
        - name: pipeline
          description: A pipeline resource to create
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1betaPipeline'
            required:
              - pipeline
      tags:
        - PipelinePublicService
  /v1beta/{parent_1}/releases:
    get:
      summary: |-
        ListOrganizationPipelineReleases method receives a ListOrganizationPipelineReleasesRequest message and returns a
        ListOrganizationPipelineReleasesResponse message.
      operationId: PipelinePublicService_ListOrganizationPipelineReleases
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListOrganizationPipelineReleasesResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent_1
          description: |-
            The parent resource where this pipeline_release will be created.
            Format: organizations/{organization}/pipelines/{pipeline}
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+
        - name: page_size
          description: |-
            The maximum number of pipeline_releases to return. The service may return fewer
            than this value. If unspecified, at most 10 pipeline_release will be returned. The
            maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_RECIPE: Contains the recipe of the resource.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
        - name: filter
          description: Filter expression to list pipeline_releases
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Return soft_deleted pipelines
          in: query
          required: false
          type: boolean
      tags:
        - PipelinePublicService
    post:
      summary: |-
        CreateOrganizationPipelineRelease method receives a CreateOrganizationPipelineReleaseRequest message and returns
        a CreateOrganizationPipelineReleaseResponse message.
      operationId: PipelinePublicService_CreateOrganizationPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaCreateOrganizationPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent_1
          description: |-
            The parent resource where this pipeline_release will be created.
            Format: organizations/{organization}/pipelines/{pipeline}
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+
        - name: release
          description: A pipeline_release resource to create
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1betaPipelineRelease'
            required:
              - release
      tags:
        - PipelinePublicService
  /v1beta/{parent_1}/subscription:
    get:
      summary: GetOrganizationSubscription
      operationId: MgmtPublicService_GetOrganizationSubscription
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetOrganizationSubscriptionResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent_1
          description: parent
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+
      tags:
        - MgmtPublicService
  /v1beta/{parent}/connectors:
    get:
      summary: |-
        ListUserConnectors method receives a
        ListUserConnectorsRequest message and returns a
        ListUserConnectorsResponse message.
      operationId: PipelinePublicService_ListUserConnectors
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListUserConnectorsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent
          description: |-
            The parent resource where this connector will be created.
            Format: users/{users}
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: page_size
          description: |-
            The maximum number of connectors to return. The service may return fewer
            than this value. If unspecified, at most 10 connectors will be returned.
            The maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            Connector view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_CONFIGURATION: Contains the connector configuration.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_CONFIGURATION
        - name: filter
          description: Filter expression to list connectors
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Return soft_deleted connectors
          in: query
          required: false
          type: boolean
      tags:
        - PipelinePublicService
    post:
      summary: |-
        CreateUserConnector method receives a
        CreateUserConnectorRequest message and returns a
        CreateUserConnectorResponse message.
      operationId: PipelinePublicService_CreateUserConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaCreateUserConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent
          description: |-
            The parent resource where this connector will be created.
            Format: users/{users}
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: connector
          description: connector
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1betaConnector'
            required:
              - connector
      tags:
        - PipelinePublicService
  /v1beta/{parent}/memberships:
    get:
      summary: |-
        ListUserMemberships method receives a ListUserMembershipsRequest message and returns a
        ListUserMembershipsResponse message.
      operationId: MgmtPublicService_ListUserMemberships
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListUserMembershipsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent
          description: |-
            The parent resource where this connector resource will be created.
            Format: users/{users}
          in: path
          required: true
          type: string
          pattern: users/[^/]+
      tags:
        - MgmtPublicService
  /v1beta/{parent}/pipelines:
    get:
      summary: |-
        ListUserPipelines method receives a ListUserPipelinesRequest message and returns a
        ListUserPipelinesResponse message.
      operationId: PipelinePublicService_ListUserPipelines
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListUserPipelinesResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent
          description: |-
            The parent resource where this connector resource will be created.
            Format: users/{users}
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: page_size
          description: |-
            The maximum number of pipelines to return. The service may return fewer
            than this value. If unspecified, at most 10 pipelines will be returned. The
            maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_RECIPE: Contains the recipe of the resource.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
        - name: filter
          description: Filter expression to list pipelines
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Return soft_deleted pipeline releases
          in: query
          required: false
          type: boolean
      tags:
        - PipelinePublicService
    post:
      summary: |-
        CreateUserPipeline method receives a CreateUserPipelineRequest message and returns
        a CreateUserPipelineResponse message.
      operationId: PipelinePublicService_CreateUserPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaCreateUserPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent
          description: |-
            The parent resource where this connector resource will be created.
            Format: users/{users}
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: pipeline
          description: A pipeline resource to create
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1betaPipeline'
            required:
              - pipeline
      tags:
        - PipelinePublicService
  /v1beta/{parent}/releases:
    get:
      summary: |-
        ListUserPipelineReleases method receives a ListUserPipelineReleasesRequest message and returns a
        ListUserPipelineReleasesResponse message.
      operationId: PipelinePublicService_ListUserPipelineReleases
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListUserPipelineReleasesResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent
          description: |-
            The parent resource where this pipeline_release will be created.
            Format: users/{user}/pipelines/{pipeline}
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
        - name: page_size
          description: |-
            The maximum number of pipeline_releases to return. The service may return fewer
            than this value. If unspecified, at most 10 pipeline_release will be returned. The
            maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_RECIPE: Contains the recipe of the resource.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
        - name: filter
          description: Filter expression to list pipeline_releases
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Return soft_deleted pipelines
          in: query
          required: false
          type: boolean
      tags:
        - PipelinePublicService
    post:
      summary: |-
        CreateUserPipelineRelease method receives a CreateUserPipelineReleaseRequest message and returns
        a CreateUserPipelineReleaseResponse message.
      operationId: PipelinePublicService_CreateUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaCreateUserPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent
          description: |-
            The parent resource where this pipeline_release will be created.
            Format: users/{user}/pipelines/{pipeline}
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
        - name: release
          description: A pipeline_release resource to create
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1betaPipelineRelease'
            required:
              - release
      tags:
        - PipelinePublicService
  /v1beta/{parent}/subscription:
    get:
      summary: GetUserSubscription
      operationId: MgmtPublicService_GetUserSubscription
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetUserSubscriptionResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent
          description: parent
          in: path
          required: true
          type: string
          pattern: users/[^/]+
      tags:
        - MgmtPublicService
  /v1beta/{permalink}/lookUp:
    get:
      summary: |-
        LookUpPipeline method receives a LookUpPipelineRequest message and returns
        a LookUpPipelineResponse
      operationId: PipelinePublicService_LookUpPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaLookUpPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: permalink
          description: |-
            Permalink of a pipeline. For example:
            "pipelines/{uid}"
          in: path
          required: true
          type: string
          pattern: pipelines/[^/]+
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_RECIPE: Contains the recipe of the resource.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
      tags:
        - PipelinePublicService
  /v1beta/{pipeline.name/watch_1}/watch:
    get:
      summary: |-
        WatchOrganizationPipelineRelease method receives a WatchOrganizationPipelineReleaseRequest message
        and returns a WatchOrganizationPipelineReleaseResponse
      operationId: PipelinePublicService_WatchOrganizationPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaWatchOrganizationPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pipeline.name/watch_1
          description: Pipeline resource name. It must have the format of "organizations/*/pipelines/*/releases/*"
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+/releases/[^/]+
      tags:
        - PipelinePublicService
  /v1beta/{pipeline.name/watch}/watch:
    get:
      summary: |-
        WatchUserPipelineRelease method receives a WatchUserPipelineReleaseRequest message
        and returns a WatchUserPipelineReleaseResponse
      operationId: PipelinePublicService_WatchUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaWatchUserPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pipeline.name/watch
          description: Pipeline resource name. It must have the format of "users/*/pipelines/*/releases/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+/releases/[^/]+
      tags:
        - PipelinePublicService
  /v1beta/{pipeline.name_1}:
    get:
      summary: |-
        GetOrganizationPipeline method receives a GetOrganizationPipelineRequest message and returns a
        GetOrganizationPipelineResponse message.
      operationId: PipelinePublicService_GetOrganizationPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetOrganizationPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pipeline.name_1
          description: Pipeline resource name. It must have the format of "organizations/*/pipelines/*"
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+
        - name: view
          description: |-
            Pipeline resource view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_RECIPE: Contains the recipe of the resource.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
      tags:
        - PipelinePublicService
    delete:
      summary: |-
        DeleteOrganizationPipeline method receives a DeleteOrganizationPipelineRequest message and returns
        a DeleteOrganizationPipelineResponse message.
      operationId: PipelinePublicService_DeleteOrganizationPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaDeleteOrganizationPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pipeline.name_1
          description: Pipeline resource name. It must have the format of "organizations/*/pipelines/*"
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+
      tags:
        - PipelinePublicService
    patch:
      summary: |-
        UpdateOrganizationPipeline method receives a UpdateOrganizationPipelineRequest message and returns
        a UpdateOrganizationPipelineResponse message.
      operationId: PipelinePublicService_UpdateOrganizationPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaUpdateOrganizationPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pipeline.name_1
          description: |-
            The name of the pipeline, defined by its owner and ID.
            - Format: `users/{user}/pipelines/{id}`.
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+
        - name: pipeline
          description: A pipeline resource to update
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Pipeline UUID.
                readOnly: true
              id:
                type: string
                description: |-
                  Pipeline resource ID (used in the name as the last segment). This conforms
                  to RFC-1034, which restricts to letters, numbers, and hyphen, with the
                  first character a letter, the last a letter or a number, and a 63
                  character maximum.
              description:
                type: string
                description: Pipeline description.
              recipe:
                $ref: '#/definitions/v1betaRecipe'
                description: Recipe describes the components of a Pipeline and how they are connected.
              create_time:
                type: string
                format: date-time
                description: Pipeline creation time.
                readOnly: true
              update_time:
                type: string
                format: date-time
                description: Pipeline update time.
                readOnly: true
              openapi_schema:
                type: object
                description: OpenAPI schema.
                readOnly: true
              delete_time:
                type: string
                format: date-time
                description: Pipeline delete time.
                readOnly: true
              sharing:
                $ref: '#/definitions/v1betaSharing'
                description: Pipeline sharing.
              metadata:
                type: object
                description: 'Metadata: store Console-related data such as pipeline builder layout.'
              owner_name:
                type: string
                description: Owner Name.
                readOnly: true
              owner:
                type: object
                description: Owner details.
                readOnly: true
              releases:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1betaPipelineRelease'
                description: Releases.
                readOnly: true
              readme:
                type: string
                description: README.
              permission:
                $ref: '#/definitions/v1betaPermission'
                description: Permission.
                readOnly: true
            title: A pipeline resource to update
      tags:
        - PipelinePublicService
  /v1beta/{pipeline.name}:
    get:
      summary: |-
        GetUserPipeline method receives a GetUserPipelineRequest message and returns a
        GetUserPipelineResponse message.
      operationId: PipelinePublicService_GetUserPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetUserPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pipeline.name
          description: Pipeline resource name. It must have the format of "users/*/pipelines/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
        - name: view
          description: |-
            Pipeline resource view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_RECIPE: Contains the recipe of the resource.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
      tags:
        - PipelinePublicService
    delete:
      summary: |-
        DeleteUserPipeline method receives a DeleteUserPipelineRequest message and returns
        a DeleteUserPipelineResponse message.
      operationId: PipelinePublicService_DeleteUserPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaDeleteUserPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pipeline.name
          description: Pipeline resource name. It must have the format of "users/*/pipelines/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
      tags:
        - PipelinePublicService
    patch:
      summary: |-
        UpdateUserPipeline method receives a UpdateUserPipelineRequest message and returns
        a UpdateUserPipelineResponse message.
      operationId: PipelinePublicService_UpdateUserPipeline
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaUpdateUserPipelineResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pipeline.name
          description: |-
            The name of the pipeline, defined by its owner and ID.
            - Format: `users/{user}/pipelines/{id}`.
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+
        - name: pipeline
          description: A pipeline resource to update
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Pipeline UUID.
                readOnly: true
              id:
                type: string
                description: |-
                  Pipeline resource ID (used in the name as the last segment). This conforms
                  to RFC-1034, which restricts to letters, numbers, and hyphen, with the
                  first character a letter, the last a letter or a number, and a 63
                  character maximum.
              description:
                type: string
                description: Pipeline description.
              recipe:
                $ref: '#/definitions/v1betaRecipe'
                description: Recipe describes the components of a Pipeline and how they are connected.
              create_time:
                type: string
                format: date-time
                description: Pipeline creation time.
                readOnly: true
              update_time:
                type: string
                format: date-time
                description: Pipeline update time.
                readOnly: true
              openapi_schema:
                type: object
                description: OpenAPI schema.
                readOnly: true
              delete_time:
                type: string
                format: date-time
                description: Pipeline delete time.
                readOnly: true
              sharing:
                $ref: '#/definitions/v1betaSharing'
                description: Pipeline sharing.
              metadata:
                type: object
                description: 'Metadata: store Console-related data such as pipeline builder layout.'
              owner_name:
                type: string
                description: Owner Name.
                readOnly: true
              owner:
                type: object
                description: Owner details.
                readOnly: true
              releases:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1betaPipelineRelease'
                description: Releases.
                readOnly: true
              readme:
                type: string
                description: README.
              permission:
                $ref: '#/definitions/v1betaPermission'
                description: Permission.
                readOnly: true
            title: A pipeline resource to update
      tags:
        - PipelinePublicService
  /v1beta/{pipeline_release.name_1}:
    get:
      summary: |-
        GetOrganizationPipelineRelease method receives a GetOrganizationPipelineReleaseRequest message and returns a
        GetOrganizationPipelineReleaseResponse message.
      operationId: PipelinePublicService_GetOrganizationPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetOrganizationPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pipeline_release.name_1
          description: PipelineRelease resource name. It must have the format of "organizations/*/pipelines/*/releases/*"
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+/releases/[^/]+
        - name: view
          description: |-
            PipelineRelease resource view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_RECIPE: Contains the recipe of the resource.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
      tags:
        - PipelinePublicService
    delete:
      summary: |-
        DeleteOrganizationPipelineRelease method receives a DeleteOrganizationPipelineReleaseRequest message and returns
        a DeleteOrganizationPipelineReleaseResponse message.
      operationId: PipelinePublicService_DeleteOrganizationPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaDeleteOrganizationPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pipeline_release.name_1
          description: PipelineRelease resource name. It must have the format of "organizations/*/pipelines/*/releases/*"
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+/pipelines/[^/]+/releases/[^/]+
      tags:
        - PipelinePublicService
  /v1beta/{pipeline_release.name}:
    get:
      summary: |-
        GetUserPipelineRelease method receives a GetUserPipelineReleaseRequest message and returns a
        GetUserPipelineReleaseResponse message.
      operationId: PipelinePublicService_GetUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetUserPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pipeline_release.name
          description: PipelineRelease resource name. It must have the format of "users/*/pipelines/*/releases/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+/releases/[^/]+
        - name: view
          description: |-
            PipelineRelease resource view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_RECIPE: Contains the recipe of the resource.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
      tags:
        - PipelinePublicService
    delete:
      summary: |-
        DeleteUserPipelineRelease method receives a DeleteUserPipelineReleaseRequest message and returns
        a DeleteUserPipelineReleaseResponse message.
      operationId: PipelinePublicService_DeleteUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaDeleteUserPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pipeline_release.name
          description: PipelineRelease resource name. It must have the format of "users/*/pipelines/*/releases/*"
          in: path
          required: true
          type: string
          pattern: users/[^/]+/pipelines/[^/]+/releases/[^/]+
      tags:
        - PipelinePublicService
  /v1beta/{release.name_1}:
    patch:
      summary: |-
        UpdateOrganizationPipelineRelease method receives a UpdateOrganizationPipelineReleaseRequest message and returns
        a UpdateOrganizationPipelineReleaseResponse message.
      operationId: PipelinePublicService_UpdateOrganizationPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaUpdateOrganizationPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: release.name_1
          description: |-
            The name of the release, defined by its owner and ID.
            - Format: `users/{user}/pipelines/{pipeline_id}/releases/{release_id}
          in: path
          required: true
          type: string
          pattern: organizationsr/[^/]+/pipelines/[^/]+/releases/[^/]+
        - name: release
          description: A pipeline release resource to update
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Release UUID.
                readOnly: true
              id:
                type: string
                description: |-
                  Release resource ID (used in the name as the last segment). It must be a
                  sematic version vX.Y.Z.
              description:
                type: string
                description: Release description.
              recipe:
                $ref: '#/definitions/v1betaRecipe'
                description: Recipe of the versioned pipeline.
                readOnly: true
              create_time:
                type: string
                format: date-time
                description: Pipeline creation time.
                readOnly: true
              update_time:
                type: string
                format: date-time
                description: Pipeline update time.
                readOnly: true
              openapi_schema:
                type: object
                description: OpenAPI schema.
                readOnly: true
              delete_time:
                type: string
                format: date-time
                description: Pipeline deletion time.
                readOnly: true
              alias:
                type: string
                description: Alias.
                readOnly: true
              metadata:
                type: object
                description: |-
                  Key-value object with console-related data such as the pipeline builder
                  layout.
              readme:
                type: string
                description: README.
            title: A pipeline release resource to update
      tags:
        - PipelinePublicService
  /v1beta/{release.name}:
    patch:
      summary: |-
        UpdateUserPipelineRelease method receives a UpdateUserPipelineReleaseRequest message and returns
        a UpdateUserPipelineReleaseResponse message.
      operationId: PipelinePublicService_UpdateUserPipelineRelease
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaUpdateUserPipelineReleaseResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: release.name
          description: |-
            The name of the release, defined by its owner and ID.
            - Format: `users/{user}/pipelines/{pipeline_id}/releases/{release_id}
          in: path
          required: true
          type: string
          pattern: usersr/[^/]+/pipelines/[^/]+/releases/[^/]+
        - name: release
          description: A pipeline release resource to update
          in: body
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
                description: Release UUID.
                readOnly: true
              id:
                type: string
                description: |-
                  Release resource ID (used in the name as the last segment). It must be a
                  sematic version vX.Y.Z.
              description:
                type: string
                description: Release description.
              recipe:
                $ref: '#/definitions/v1betaRecipe'
                description: Recipe of the versioned pipeline.
                readOnly: true
              create_time:
                type: string
                format: date-time
                description: Pipeline creation time.
                readOnly: true
              update_time:
                type: string
                format: date-time
                description: Pipeline update time.
                readOnly: true
              openapi_schema:
                type: object
                description: OpenAPI schema.
                readOnly: true
              delete_time:
                type: string
                format: date-time
                description: Pipeline deletion time.
                readOnly: true
              alias:
                type: string
                description: Alias.
                readOnly: true
              metadata:
                type: object
                description: |-
                  Key-value object with console-related data such as the pipeline builder
                  layout.
              readme:
                type: string
                description: README.
            title: A pipeline release resource to update
      tags:
        - PipelinePublicService
  /v1beta/{resource.resource_permalink}:
    get:
      summary: |-
        GetResource method receives a GetResourceRequest message
        and returns a GetResourceResponse
      operationId: ControllerPrivateService_GetResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/controllerv1betaGetResourceResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: resource.resource_permalink
          description: |-
            Permalink of a resouce. For example:
            "resources/{resource_uuid}/types/{type}"
          in: path
          required: true
          type: string
          pattern: resources/[^/]+/types/[^/]+
      tags:
        - ControllerPrivateService
    delete:
      summary: |-
        DeleteResource method receives a DeleteResourceRequest message
        and returns a DeleteResourceResponse
      operationId: ControllerPrivateService_DeleteResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/controllerv1betaDeleteResourceResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: resource.resource_permalink
          description: |-
            Permalink of a resouce. For example:
            "resources/{resource_uuid}/types/{type}"
          in: path
          required: true
          type: string
          pattern: resources/[^/]+/types/[^/]+
      tags:
        - ControllerPrivateService
    patch:
      summary: |-
        UpdateResource method receives a UpdateResourceRequest message
        and returns a UpdateResourceResponse
      operationId: ControllerPrivateService_UpdateResource
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/controllerv1betaUpdateResourceResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: resource.resource_permalink
          description: |-
            Permalink of a resouce. For example:
            "resources/{resource_uuid}/types/{type}"
          in: path
          required: true
          type: string
          pattern: resources/[^/]+/types/[^/]+
        - name: resource
          description: Resource state
          in: body
          required: true
          schema:
            type: object
            properties:
              pipeline_state:
                $ref: '#/definitions/pipelinev1betaState'
                title: Pipeline state
              connector_state:
                $ref: '#/definitions/v1betaConnectorState'
                title: Connector state
              backend_state:
                $ref: '#/definitions/HealthCheckResponseServingStatus'
                title: Backend service state
              progress:
                type: integer
                format: int32
                title: Resource longrunning progress
            title: Resource state
        - name: workflow_id
          description: Resource longrunnning workflow id
          in: query
          required: false
          type: string
      tags:
        - ControllerPrivateService
  /v1beta/{token.name}:
    get:
      summary: |-
        GetToken method receives a GetTokenRequest message and returns a
        GetTokenResponse message.
      operationId: MgmtPublicService_GetToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetTokenResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: token.name
          description: API tokens resource name. It must have the format of "tokens/*"
          in: path
          required: true
          type: string
          pattern: tokens/[^/]+
      tags:
        - MgmtPublicService
    delete:
      summary: |-
        DeleteToken method receives a DeleteTokenRequest message and returns
        a DeleteTokenResponse message.
      operationId: MgmtPublicService_DeleteToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaDeleteTokenResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: token.name
          description: API token resource name. It must have the format of "tokens/*"
          in: path
          required: true
          type: string
          pattern: tokens/[^/]+
      tags:
        - MgmtPublicService
  /v1beta/{user.name}:
    get:
      summary: |-
        GetUser method receives a GetUser message and returns a
        GetUser message.
      operationId: MgmtPublicService_GetUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetUserResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user.name
          description: |-
            Resource name of a user. For example:
            "users/local-user"
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
      tags:
        - MgmtPublicService
  /v1beta/admin/{connector_definition.permalink}/lookUp:
    get:
      summary: Get a connector definition by UID (admin only).
      description: |-
        This is a *private* method that allows admin users to access a connector
        definition by its UID.
      operationId: PipelinePrivateService_LookUpConnectorDefinitionAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaLookUpConnectorDefinitionAdminResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: connector_definition.permalink
          description: |-
            The permalink of the connector definition, which allows its access by UID.
            - Format: `connector-definitions/{uid}`
          in: path
          required: true
          type: string
          pattern: connector-definitions/[^/]+
        - name: view
          description: |-
            View allows clients to specify the desired connector definition view in
            the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
      tags:
        - PipelinePrivateService
  /v1beta/admin/{operator_definition.permalink}/lookUp:
    get:
      summary: Get an operator definition by UID (admin only).
      description: |-
        This is a *private* method that allows admin users to access an operator
        definition by its UID.
      operationId: PipelinePrivateService_LookUpOperatorDefinitionAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaLookUpOperatorDefinitionAdminResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: operator_definition.permalink
          description: |-
            The permalink of the operator definition, which allows its access by UID.
            - Format: `operator-definitions/{uid}`.
          in: path
          required: true
          type: string
          pattern: operator-definitions/[^/]+
        - name: view
          description: |-
            View allows clients to specify the desired operator definition view in the
            response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
      tags:
        - PipelinePrivateService
  /v1beta/admin/{organization.name}:
    get:
      summary: |-
        GetOrganizationAdmin method receives a GetOrganizationAdminRequest message and returns
        a GetOrganizationAdminResponse message.
      operationId: MgmtPrivateService_GetOrganizationAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetOrganizationAdminResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization.name
          description: |-
            Resource name of a organization. For example:
            "organizations/local-organization"
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
      tags:
        - MgmtPrivateService
  /v1beta/admin/{parent_1}/subscription:
    get:
      summary: GetOrganizationSubscriptionAdmin
      operationId: MgmtPrivateService_GetOrganizationSubscriptionAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetOrganizationSubscriptionAdminResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent_1
          description: parent
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+
      tags:
        - MgmtPrivateService
  /v1beta/admin/{parent}/subscription:
    get:
      summary: GetUserSubscriptionAdmin
      operationId: MgmtPrivateService_GetUserSubscriptionAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetUserSubscriptionAdminResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: parent
          description: parent
          in: path
          required: true
          type: string
          pattern: users/[^/]+
      tags:
        - MgmtPrivateService
  /v1beta/admin/{permalink_1}/lookUp:
    get:
      summary: |-
        LookUpOrganizationAdmin method receives a LookUpOrganizationAdminRequest message and
        returns a LookUpOrganizationAdminResponse
      operationId: MgmtPrivateService_LookUpOrganizationAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaLookUpOrganizationAdminResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: permalink_1
          description: |-
            Permalink of a organization. For example:
            "organizations/{uid}"
          in: path
          required: true
          type: string
          pattern: organizations/[^/]+
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
      tags:
        - MgmtPrivateService
  /v1beta/admin/{permalink_2}/lookUp:
    get:
      summary: Get a connector by UID (admin only).
      description: |-
        This is a *private* method that allows admin users to access a connector
        by its UID.
      operationId: PipelinePrivateService_LookUpConnectorAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaLookUpConnectorAdminResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: permalink_2
          description: |-
            Permalink of a connector. For example:
            "connectors/{uid}"
          in: path
          required: true
          type: string
          pattern: connectors/[^/]+
        - name: view
          description: |-
            Connector view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_CONFIGURATION: Contains the connector configuration.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_CONFIGURATION
      tags:
        - PipelinePrivateService
  /v1beta/admin/{permalink}/check:
    get:
      summary: Get a connector current state (admin only).
      description: |-
        This is a *private* method that allows admin users to access the state of
        a connector by its UID.
      operationId: PipelinePrivateService_CheckConnector
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaCheckConnectorResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: permalink
          description: |-
            The permalink of the connector, which allows its access by UID.
            - Format: `connectors/{uid}`.
          in: path
          required: true
          type: string
          pattern: connectors/[^/]+
      tags:
        - PipelinePrivateService
  /v1beta/admin/{permalink}/lookUp:
    get:
      summary: |-
        LookUpUserAdmin method receives a LookUpUserAdminRequest message and
        returns a LookUpUserAdminResponse
      operationId: MgmtPrivateService_LookUpUserAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaLookUpUserAdminResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: permalink
          description: |-
            Permalink of a user. For example:
            "users/{uid}"
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
      tags:
        - MgmtPrivateService
  /v1beta/admin/{pipeline.permalink}/lookUp:
    get:
      summary: Get a pipeline by UID (admin only).
      description: |-
        This is a *private* method that allows admin users to access any pipeline
        resource by its UID.
      operationId: PipelinePrivateService_LookUpPipelineAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaLookUpPipelineAdminResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pipeline.permalink
          description: |-
            The permalink of the pipeline, which allows its access by UID.
            - Format: `pipelines/{uid}`.
          in: path
          required: true
          type: string
          pattern: pipelines/[^/]+
        - name: view
          description: |-
            View allows clients to specify the desired pipeline view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_RECIPE: Contains the recipe of the resource.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
      tags:
        - PipelinePrivateService
  /v1beta/admin/{user.name}:
    get:
      summary: |-
        GetUserAdmin method receives a GetUserAdminRequest message and returns
        a GetUserAdminResponse message.
      operationId: MgmtPrivateService_GetUserAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaGetUserAdminResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user.name
          description: |-
            Resource name of a user. For example:
            "users/local-user"
          in: path
          required: true
          type: string
          pattern: users/[^/]+
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
      tags:
        - MgmtPrivateService
  /v1beta/admin/connectors:
    get:
      summary: List connectors (admin only).
      description: This is a *private* method that allows admin users to list *all* connectors.
      operationId: PipelinePrivateService_ListConnectorsAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListConnectorsAdminResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of connectors to return. If this parameter is
            unspecified, at most 10 pipelines will be returned. The cap value for this
            parameter is 100 (i.e. any value above that will be coerced to 100).
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token.
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View allows clients to specify the desired connector view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_CONFIGURATION: Contains the connector configuration.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_CONFIGURATION
        - name: filter
          description: |-
            Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
            expression.
            - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Include soft-deleted pipelines in the result.
          in: query
          required: false
          type: boolean
      tags:
        - PipelinePrivateService
  /v1beta/admin/organizations:
    get:
      summary: |-
        ListOrganizationsAdmin method receives a ListOrganizationsAdminRequest message and returns
        a ListOrganizationsAdminResponse message.
      operationId: MgmtPrivateService_ListOrganizationsAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListOrganizationsAdminResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            Page size: the maximum number of resources to return. The service may
            return fewer than this value. If unspecified, at most 10 organizations will be
            returned. The maximum value is 100; values above 100 will be coereced to
            100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
        - name: filter
          description: Filter expression to list organizations
          in: query
          required: false
          type: string
      tags:
        - MgmtPrivateService
  /v1beta/admin/pipelines:
    get:
      summary: List pipelines (admin only).
      description: |-
        This is a *private* method that allows admin users and internal clients to
        list *all* pipeline resources.
      operationId: PipelinePrivateService_ListPipelinesAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListPipelinesAdminResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of pipelines to return. If this parameter is
            unspecified, at most 10 pipelines will be returned. The cap value for this
            parameter is 100 (i.e. any value above that will be coerced to 100).
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token.
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View allows clients to specify the desired pipeline view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_RECIPE: Contains the recipe of the resource.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
        - name: filter
          description: |-
            Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
            expression.
            - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
            - Example: `recipe.components.definition_name:"operator-definitions/2ac8be70-0f7a-4b61-a33d-098b8acfa6f3"`.
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Include soft-deleted pipelines in the result.
          in: query
          required: false
          type: boolean
      tags:
        - PipelinePrivateService
  /v1beta/admin/releases:
    get:
      summary: List pipeline releases (admin only).
      description: |-
        This is a *private* method that allows admin users to list *all* pipeline
        releases.
      operationId: PipelinePrivateService_ListPipelineReleasesAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListPipelineReleasesAdminResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of releases to return. If this parameter is
            unspecified, at most 10 releases will be returned. The cap value for this
            parameter is 100 (i.e. any value above that will be coerced to 100).
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token.
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View allows clients to specify the desired pipeline view in the response.

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_RECIPE: Contains the recipe of the resource.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
        - name: filter
          description: |-
            Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
            expression.
            - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Include soft-deleted pipelines in the result.
          in: query
          required: false
          type: boolean
      tags:
        - PipelinePrivateService
  /v1beta/admin/users:
    get:
      summary: |-
        ListUsersAdmin method receives a ListUsersAdminRequest message and returns
        a ListUsersAdminResponse message.
      operationId: MgmtPrivateService_ListUsersAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListUsersAdminResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            Page size: the maximum number of resources to return. The service may
            return fewer than this value. If unspecified, at most 10 users will be
            returned. The maximum value is 100; values above 100 will be coereced to
            100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
        - name: filter
          description: Filter expression to list users
          in: query
          required: false
          type: string
      tags:
        - MgmtPrivateService
  /v1beta/auth/change_password:
    post:
      summary: Auth Change password endpoint
      operationId: MgmtPublicService_AuthChangePassword
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaAuthChangePasswordResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1betaAuthChangePasswordRequest'
      tags:
        - MgmtPublicService
  /v1beta/auth/login:
    post:
      summary: Auth Login endpoint
      operationId: MgmtPublicService_AuthLogin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaAuthLoginResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: username
          description: Username
          in: query
          required: true
          type: string
        - name: password
          description: Password
          in: query
          required: true
          type: string
      tags:
        - MgmtPublicService
  /v1beta/auth/logout:
    post:
      summary: Auth Logout endpoint
      operationId: MgmtPublicService_AuthLogout
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaAuthLogoutResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      tags:
        - MgmtPublicService
  /v1beta/auth/token_issuer:
    post:
      summary: AuthTokenIssuer endpoint
      operationId: MgmtPublicService_AuthTokenIssuer
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaAuthTokenIssuerResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1betaAuthTokenIssuerRequest'
      tags:
        - MgmtPublicService
  /v1beta/auth/validate_access_token:
    post:
      summary: Auth AccessToken validation endpoint
      operationId: MgmtPublicService_AuthValidateAccessToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaAuthValidateAccessTokenResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      tags:
        - MgmtPublicService
  /v1beta/check-namespace:
    post:
      summary: Check namespace
      operationId: MgmtPublicService_CheckNamespace
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaCheckNamespaceResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1betaCheckNamespaceRequest'
      tags:
        - MgmtPublicService
  /v1beta/connector-definitions:
    get:
      summary: |-
        ListConnectorDefinitions method receives a
        ListConnectorDefinitionsRequest message and returns a
        ListConnectorDefinitionsResponse message.
      operationId: PipelinePublicService_ListConnectorDefinitions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListConnectorDefinitionsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of ConnectorDefinitions to return. The
            service may return fewer than this value. If unspecified, at most 10
            ConnectorDefinitions will be returned. The maximum value is 100;
            values above 100 will be coerced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            Definition view (default is DEFINITION_VIEW_BASIC)

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
        - name: filter
          description: Filter expression to list connector definitions
          in: query
          required: false
          type: string
      tags:
        - PipelinePublicService
  /v1beta/connectors:
    get:
      summary: |-
        ListConnectors method receives a
        ListConnectorsRequest message and returns a
        ListConnectorsResponse message.
      operationId: PipelinePublicService_ListConnectors
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListConnectorsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of connectors to return. The service may return fewer
            than this value. If unspecified, at most 10 connectors will be returned.
            The maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            Connector view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_CONFIGURATION: Contains the connector configuration.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_CONFIGURATION
        - name: filter
          description: Filter expression to list connectors
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Return soft_deleted connectors
          in: query
          required: false
          type: boolean
      tags:
        - PipelinePublicService
  /v1beta/health/controller:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: ControllerPrivateService_Liveness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/vdpcontrollerv1betaLivenessResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - ControllerPrivateService
  /v1beta/health/mgmt:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: MgmtPublicService_Liveness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/coremgmtv1betaLivenessResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1beta/health/pipeline:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: PipelinePublicService_Liveness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/vdppipelinev1betaLivenessResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - PipelinePublicService
  /v1beta/health/usage:
    get:
      summary: |-
        Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: UsageService_Liveness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/coreusagev1betaLivenessResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - UsageService
  /v1beta/metrics/vdp/connector/charts:
    get:
      summary: |-
        ListConnectorExecuteChartRecords method receives a
        ListConnectorExecuteChartRecordsRequest message and returns a
        ListConnectorExecuteChartRecordsResponse message.
      operationId: MgmtPublicService_ListConnectorExecuteChartRecords
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListConnectorExecuteChartRecordsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: aggregation_window
          description: Aggregation window in nanoseconds
          in: query
          required: false
          type: integer
          format: int32
        - name: filter
          description: Filter expression to list chart record
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1beta/metrics/vdp/connector/executes:
    get:
      summary: |-
        ListConnectorExecuteRecords method receives a
        ListConnectorExecuteRecordsRequest message and returns a
        ListConnectorExecuteRecordsResponse message.
      operationId: MgmtPublicService_ListConnectorExecuteRecords
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListConnectorExecuteRecordsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of connector execution record to return. The service may
            return fewer than this value. If unspecified, at most 100 record will be
            returned. The maximum value is 1000; values above 1000 will be coerced to
            1000.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: filter
          description: Filter expression to list record
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1beta/metrics/vdp/connector/tables:
    get:
      summary: |-
        ListConnectorExecuteTableRecords method receives a
        ListConnectorExecuteTableRecordsRequest message and returns a
        ListConnectorExecuteTableRecordsResponse message.
      operationId: MgmtPublicService_ListConnectorExecuteTableRecords
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListConnectorExecuteTableRecordsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of connector execution table record to return. The
            service may return fewer than this value. If unspecified, at most 100
            record will be returned. The maximum value is 1000; values above 1000 will
            be coerced to 1000.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: filter
          description: Filter expression to list record
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1beta/metrics/vdp/pipeline/charts:
    get:
      summary: |-
        ListPipelineTriggerChartRecords method receives a
        ListPipelineTriggerChartRecordsRequest message and returns a
        ListPipelineTriggerChartRecordsResponse message.
      operationId: MgmtPublicService_ListPipelineTriggerChartRecords
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListPipelineTriggerChartRecordsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: aggregation_window
          description: Aggregation window in nanoseconds
          in: query
          required: false
          type: integer
          format: int32
        - name: filter
          description: Filter expression to list chart record
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1beta/metrics/vdp/pipeline/tables:
    get:
      summary: |-
        ListPipelineTriggerTableRecords method receives a
        ListPipelineTriggerTableRecordsRequest message and returns a
        ListPipelineTriggerTableRecordsResponse message.
      operationId: MgmtPublicService_ListPipelineTriggerTableRecords
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListPipelineTriggerTableRecordsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of pipeline trigger record to return. The service may
            return fewer than this value. If unspecified, at most 100 record will be
            returned. The maximum value is 1000; values above 1000 will be coerced to
            1000.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: filter
          description: Filter expression to list record
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1beta/metrics/vdp/pipeline/triggers:
    get:
      summary: |-
        ListPipelineTriggerRecords method receives a
        ListPipelineTriggerRecordsRequest message and returns a
        ListPipelineTriggerRecordsResponse message.
      operationId: MgmtPublicService_ListPipelineTriggerRecords
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListPipelineTriggerRecordsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of pipeline trigger record to return. The service may
            return fewer than this value. If unspecified, at most 100 record will be
            returned. The maximum value is 1000; values above 1000 will be coerced to
            1000.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: filter
          description: Filter expression to list record
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1beta/operator-definitions:
    get:
      summary: |-
        ListOperatorDefinitions method receives a
        ListOperatorDefinitionsRequest message and returns a
        ListOperatorDefinitionsResponse message.
      operationId: PipelinePublicService_ListOperatorDefinitions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListOperatorDefinitionsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of OperatorDefinitions to return. The
            service may return fewer than this value. If unspecified, at most 10
            OperatorDefinitions will be returned. The maximum value is 100;
            values above 100 will be coerced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            Definition view (default is DEFINITION_VIEW_BASIC)

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
        - name: filter
          description: Filter expression to list operator definitions
          in: query
          required: false
          type: string
      tags:
        - PipelinePublicService
  /v1beta/organizations:
    get:
      summary: |-
        ListOrganizations method receives a ListOrganizationsRequest message and returns
        a ListOrganizationsResponse message.
      operationId: MgmtPublicService_ListOrganizations
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListOrganizationsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            Page size: the maximum number of resources to return. The service may
            return fewer than this value. If unspecified, at most 10 organizations will be
            returned. The maximum value is 100; values above 100 will be coereced to
            100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
        - name: filter
          description: Filter expression to list organizations
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
    post:
      summary: |-
        CreateOrganization receives a CreateOrganizationRequest message and returns a
        a GetOrganizationResponse
      operationId: MgmtPublicService_CreateOrganization
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaCreateOrganizationResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organization
          description: |-
            The organization to be created

            The organization's `name` field is used to identify the organization to create.
            Format: organizations/{organization}
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1betaOrganization'
            required:
              - organization
      tags:
        - MgmtPublicService
  /v1beta/pipelines:
    get:
      summary: |-
        ListPipelines method receives a ListPipelinesRequest message and returns a
        ListPipelinesResponse message.
      operationId: PipelinePublicService_ListPipelines
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListPipelinesResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of pipelines to return. The service may return fewer
            than this value. If unspecified, at most 10 pipelines will be returned. The
            maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
             - VIEW_BASIC: Default view, only includes basic information.
             - VIEW_FULL: Full representation.
             - VIEW_RECIPE: Contains the recipe of the resource.
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
            - VIEW_RECIPE
        - name: filter
          description: Filter expression to list pipelines
          in: query
          required: false
          type: string
        - name: show_deleted
          description: Return soft_deleted pipelines
          in: query
          required: false
          type: boolean
      tags:
        - PipelinePublicService
  /v1beta/ready/mgmt:
    get:
      summary: |-
        Readiness method receives a ReadinessRequest message and returns a
        ReadinessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
      operationId: MgmtPublicService_Readiness2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/coremgmtv1betaReadinessResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: health_check_request.service
          description: Service name to check for its readiness status
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1beta/reports:
    post:
      summary: |-
        SendSessionReport method receives a SendSessionReportRequest message and
        returns a SendSessionReportResponse message.
      operationId: UsageService_SendSessionReport
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaSendSessionReportResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: report
          description: A report resource to create
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1betaSessionReport'
            required:
              - report
      tags:
        - UsageService
  /v1beta/sessions:
    post:
      summary: |-
        CreateSession method receives a CreateSessionRequest message and returns
        a CreateSessionResponse message.
      operationId: UsageService_CreateSession
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaCreateSessionResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: session
          description: A session resource to create
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1betaSession'
            required:
              - session
      tags:
        - UsageService
  /v1beta/tokens:
    get:
      summary: |-
        ListTokens method receives a ListTokensRequest message and returns a
        ListTokensResponse message.
      operationId: MgmtPublicService_ListTokens
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListTokensResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            The maximum number of API tokens to return. The service may return fewer
            than this value. If unspecified, at most 10 API tokens will be returned.
            The maximum value is 100; values above 100 will be coerced to 100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
    post:
      summary: |-
        CreateToken method receives a CreateTokenRequest message and returns
        a CreateTokenResponse message.
      operationId: MgmtPublicService_CreateToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaCreateTokenResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: token
          description: A token resource to create
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1betaApiToken'
            required:
              - token
      tags:
        - MgmtPublicService
  /v1beta/users:
    get:
      summary: |-
        ListUsers method receives a ListUsersRequest message and returns a
        ListUsersResponse message.
      operationId: MgmtPublicService_ListUsers
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaListUsersResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: page_size
          description: |-
            Page size: the maximum number of resources to return. The service may
            return fewer than this value. If unspecified, at most 10 users will be
            returned. The maximum value is 100; values above 100 will be coereced to
            100.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Page token
          in: query
          required: false
          type: string
        - name: view
          description: |-
            View view (default is VIEW_BASIC)

             - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
             - VIEW_BASIC: View: BASIC
             - VIEW_FULL: View: FULL
          in: query
          required: false
          type: string
          enum:
            - VIEW_BASIC
            - VIEW_FULL
        - name: filter
          description: Filter expression to list users
          in: query
          required: false
          type: string
      tags:
        - MgmtPublicService
  /v1beta/users/me:
    patch:
      summary: |-
        PatchAuthenticatedUser method receives a PatchAuthenticatedUserRequest
        message and returns a PatchAuthenticatedUserResponse message.
      operationId: MgmtPublicService_PatchAuthenticatedUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaPatchAuthenticatedUserResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: user
          description: The user to update
          in: body
          required: true
          schema:
            $ref: '#/definitions/mgmtv1betaUser'
            required:
              - user
      tags:
        - MgmtPublicService
  /v1beta/validate_token:
    post:
      summary: |-
        ValidateToken method receives a ValidateTokenRequest message and returns
        a ValidateTokenResponse message.
      operationId: MgmtPublicService_ValidateToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1betaValidateTokenResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      tags:
        - MgmtPublicService
definitions:
  AuthTokenIssuerResponseUnsignedAccessToken:
    type: object
    properties:
      aud:
        type: string
        title: aud
      iss:
        type: string
        title: iss
      sub:
        type: string
        title: sub
      jti:
        type: string
        title: jti
      exp:
        type: integer
        format: int32
        title: exp
    title: UnsignedAccessToken
  CheckNamespaceResponseNamespace:
    type: string
    enum:
      - NAMESPACE_AVAILABLE
      - NAMESPACE_USER
      - NAMESPACE_ORGANIZATION
      - NAMESPACE_RESERVED
    description: |-
      - NAMESPACE_UNSPECIFIED: UNSPECIFIED
       - NAMESPACE_AVAILABLE: Available
       - NAMESPACE_USER: User
       - NAMESPACE_ORGANIZATION: Org
       - NAMESPACE_RESERVED: Reserved
    title: Namespace type enum
  HealthCheckResponseServingStatus:
    type: string
    enum:
      - SERVING_STATUS_SERVING
      - SERVING_STATUS_NOT_SERVING
    description: |-
      - SERVING_STATUS_UNSPECIFIED: Serving status: UNSPECIFIED
       - SERVING_STATUS_SERVING: Serving status: SERVING
       - SERVING_STATUS_NOT_SERVING: Serving status: NOT SERVING
    title: ServingStatus enumerates the status of a queried service
  SessionService:
    type: string
    enum:
      - SERVICE_MGMT
      - SERVICE_CONNECTOR
      - SERVICE_MODEL
      - SERVICE_PIPELINE
    description: |-
      - SERVICE_UNSPECIFIED: Service: UNSPECIFIED
       - SERVICE_MGMT: Service: MGMT
       - SERVICE_CONNECTOR: Service: CONNECTOR
       - SERVICE_MODEL: Service: MODEL
       - SERVICE_PIPELINE: Service: PIPELINE
    title: Service enumerates the services to collect data from
  SharingShareCode:
    type: object
    properties:
      user:
        type: string
        title: user
      code:
        type: string
        title: user
      enabled:
        type: boolean
        title: enabled
      role:
        $ref: '#/definitions/v1betaRole'
        title: role
    title: Share Code
  UserUsageDataConnectorExecuteData:
    type: object
    properties:
      connector_uid:
        type: string
        title: UID for the executed connector
      execute_uid:
        type: string
        title: UID for the execute log
      execute_time:
        type: string
        format: date-time
        title: Timestamp for the execution
      connector_definition_uid:
        type: string
        title: Definition UID of the connector
      status:
        $ref: '#/definitions/mgmtv1betaStatus'
        title: Final status of the execution
      user_uid:
        type: string
        title: UUID of the user who execute the connector
      user_type:
        $ref: '#/definitions/v1betaOwnerType'
        title: Type of the user who execute the connector
    title: Per execute usage metadata
    required:
      - connector_uid
      - execute_uid
      - execute_time
      - connector_definition_uid
      - status
      - user_uid
      - user_type
  UserUsageDataModelTriggerData:
    type: object
    properties:
      model_uid:
        type: string
        title: UID for the trigged model
      trigger_uid:
        type: string
        title: UID for the trigger log
      trigger_time:
        type: string
        format: date-time
        title: Timestamp for the trigger
      model_definition_uid:
        type: string
        title: Definition UID of the model
      model_task:
        $ref: '#/definitions/v1alphaTask'
        title: Task of the model
      status:
        $ref: '#/definitions/mgmtv1betaStatus'
        title: Final status of the execution
      user_uid:
        type: string
        title: UUID of the user who trigger the model
      user_type:
        $ref: '#/definitions/v1betaOwnerType'
        title: Type of the user who trigger the model
    title: Per trigger usage metadata
    required:
      - model_uid
      - trigger_uid
      - trigger_time
      - model_definition_uid
      - model_task
      - status
      - user_uid
      - user_type
  UserUsageDataPipelineTriggerData:
    type: object
    properties:
      pipeline_uid:
        type: string
        title: UID for the triggered pipeline
      trigger_uid:
        type: string
        title: UID for the trigger log
      trigger_time:
        type: string
        format: date-time
        title: Timestamp for the trigger
      trigger_mode:
        $ref: '#/definitions/v1betaMode'
        title: Trigger mode
      status:
        $ref: '#/definitions/mgmtv1betaStatus'
        title: Final status of the execution
      pipeline_release_id:
        type: string
        title: Version for the triggered release pipeline, empty string if not release
      pipeline_release_uid:
        type: string
        title: UID for the triggered release pipeline, empty string if not release
      user_uid:
        type: string
        title: UUID of the user who trigger the pipeline
      user_type:
        $ref: '#/definitions/v1betaOwnerType'
        title: Type of the user who trigger the pipeline
    title: Per trigger usage metadata
    required:
      - pipeline_uid
      - trigger_uid
      - trigger_time
      - trigger_mode
      - status
      - pipeline_release_id
      - pipeline_release_uid
      - user_uid
      - user_type
  controllerv1alphaDeleteResourceResponse:
    type: object
    title: DeleteResourceResponse represents an empty response
  controllerv1alphaGetResourceResponse:
    type: object
    properties:
      resource:
        $ref: '#/definitions/controllerv1alphaResource'
        title: Retrieved resource state
    title: GetResourceResponse represents a response to fetch a resource's state
  controllerv1alphaResource:
    type: object
    properties:
      resource_permalink:
        type: string
        title: |-
          Permalink of a resource. For example:
          "resources/{resource_uuid}/types/{type}"
      model_state:
        $ref: '#/definitions/v1alphaModelState'
        title: Model state
      backend_state:
        $ref: '#/definitions/HealthCheckResponseServingStatus'
        title: Backend service state
      progress:
        type: integer
        format: int32
        title: Resource longrunning progress
    title: Resource represents the current information of a resource
    required:
      - resource_permalink
  controllerv1alphaUpdateResourceResponse:
    type: object
    properties:
      resource:
        $ref: '#/definitions/controllerv1alphaResource'
        title: Updated resource state
    title: UpdateResourceResponse represents a response to update a resource's state
  controllerv1betaDeleteResourceResponse:
    type: object
    title: DeleteResourceResponse represents an empty response
  controllerv1betaGetResourceResponse:
    type: object
    properties:
      resource:
        $ref: '#/definitions/controllerv1betaResource'
        title: Retrieved resource state
    title: GetResourceResponse represents a response to fetch a resource's state
  controllerv1betaResource:
    type: object
    properties:
      resource_permalink:
        type: string
        title: |-
          Permalink of a resouce. For example:
          "resources/{resource_uuid}/types/{type}"
      pipeline_state:
        $ref: '#/definitions/pipelinev1betaState'
        title: Pipeline state
      connector_state:
        $ref: '#/definitions/v1betaConnectorState'
        title: Connector state
      backend_state:
        $ref: '#/definitions/HealthCheckResponseServingStatus'
        title: Backend service state
      progress:
        type: integer
        format: int32
        title: Resource longrunning progress
    title: Resource represents the current information of a resource
    required:
      - resource_permalink
  controllerv1betaUpdateResourceResponse:
    type: object
    properties:
      resource:
        $ref: '#/definitions/controllerv1betaResource'
        title: Updated resource state
    title: UpdateResourceResponse represents a response to update a resource's state
  coremgmtv1betaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1betaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  coremgmtv1betaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1betaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  coreusagev1betaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1betaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  coreusagev1betaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1betaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  googlelongrunningOperation:
    type: object
    properties:
      name:
        type: string
        description: |-
          The server-assigned name, which is only unique within the same service that
          originally returns it. If you use the default HTTP mapping, the
          `name` should be a resource name ending with `operations/{unique_id}`.
      metadata:
        $ref: '#/definitions/protobufAny'
        description: |-
          Service-specific metadata associated with the operation.  It typically
          contains progress information and common metadata such as create time.
          Some services might not provide such metadata.  Any method that returns a
          long-running operation should document the metadata type, if any.
      done:
        type: boolean
        description: |-
          If the value is `false`, it means the operation is still in progress.
          If `true`, the operation is completed, and either `error` or `response` is
          available.
      error:
        $ref: '#/definitions/googlerpcStatus'
        description: The error result of the operation in case of failure or cancellation.
      response:
        $ref: '#/definitions/protobufAny'
        description: |-
          The normal response of the operation in case of success.  If the original
          method returns no data on success, such as `Delete`, the response is
          `google.protobuf.Empty`.  If the original method is standard
          `Get`/`Create`/`Update`, the response should be the resource.  For other
          methods, the response should have the type `XxxResponse`, where `Xxx`
          is the original method name.  For example, if the original method name
          is `TakeSnapshot()`, the inferred response type is
          `TakeSnapshotResponse`.
    description: |-
      This resource represents a long-running operation that is the result of a
      network API call.
  googlerpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
        description: |-
          The status code, which should be an enum value of
          [google.rpc.Code][google.rpc.Code].
      message:
        type: string
        description: |-
          A developer-facing error message, which should be in English. Any
          user-facing error message should be localized and sent in the
          [google.rpc.Status.details][google.rpc.Status.details] field, or localized
          by the client.
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
        description: |-
          A list of messages that carry the error details.  There is a common set of
          message types for APIs to use.
    description: |-
      The `Status` type defines a logical error model that is suitable for
      different programming environments, including REST APIs and RPC APIs. It is
      used by [gRPC](https://github.com/grpc). Each `Status` message contains
      three pieces of data: error code, error message, and error details.

      You can find out more about this error model and how to work with it in the
      [API Design Guide](https://cloud.google.com/apis/design/errors).
  mgmtv1betaStatus:
    type: string
    enum:
      - STATUS_COMPLETED
      - STATUS_ERRORED
    description: |-
      - STATUS_UNSPECIFIED: Status: UNSPECIFIED
       - STATUS_COMPLETED: Status: COMPLETED
       - STATUS_ERRORED: Status: ERRORED
    title: Status enumerates the final status of a pipeline trigger
  mgmtv1betaUser:
    type: object
    properties:
      name:
        type: string
        description: |-
          Resource name. It must have the format of "users/*".
          For example: "users/local-user".
        readOnly: true
      uid:
        type: string
        description: |-
          User ID in UUIDv4. This field is optionally set by users
          (optional on resource creation, server-generated if unset).
      id:
        type: string
        description: |-
          Resource ID (the last segment of the resource name), also the user
          username. This conforms to RFC-1034, which restricts to letters, numbers,
          and hyphen, with the first character a letter, the last a letter or a
          number, and a 63 character maximum.
          Note that the ID can be updated.
      create_time:
        type: string
        format: date-time
        title: User creation time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: User update time
        readOnly: true
      email:
        type: string
        title: User email
      customer_id:
        type: string
        description: Stripe customer ID. This field is used in Instill Cloud.
        readOnly: true
      first_name:
        type: string
        title: User first name
      last_name:
        type: string
        title: User last name
      org_name:
        type: string
        title: User company or institution name
      role:
        type: string
        title: |-
          User role. Allowed roles:
           - "manager"
           - "ai-researcher"
           - "ai-engineer"
           - "data-engineer",
           - "data-scientist",
           - "analytics-engineer"
           - "hobbyist"
      newsletter_subscription:
        type: boolean
        title: User newsletter subscription
      cookie_token:
        type: string
        title: User console cookie token
      profile_avatar:
        type: string
        title: Profile Avatar base64
      profile_data:
        type: object
        title: Profile Data
    title: User represents the content of a user
    required:
      - id
      - email
      - newsletter_subscription
  mgmtv1betaView:
    type: string
    enum:
      - VIEW_BASIC
      - VIEW_FULL
    description: |-
      View represents a view of any resource. The resource view is implemented by
      adding a parameter to the method request which allows the client to specify
      which view of the resource it wants to receive in the response.

       - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
       - VIEW_BASIC: View: BASIC
       - VIEW_FULL: View: FULL
  modelcontrollerv1alphaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1betaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  modelcontrollerv1alphaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1betaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  modelmodelv1alphaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1betaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  modelmodelv1alphaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1betaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  modelv1alphaView:
    type: string
    enum:
      - VIEW_BASIC
      - VIEW_FULL
    description: |-
      View represents a view of any resource. The resource view is implemented by
      adding a parameter to the method request which allows the client to specify
      which view of the resource it wants to receive in the response.

       - VIEW_UNSPECIFIED: View: UNSPECIFIED, equivalent to BASIC.
       - VIEW_BASIC: View: BASIC, server response only include basic information of the resource
       - VIEW_FULL: View: FULL, full representation of the resource
  pipelinev1betaState:
    type: string
    enum:
      - STATE_INACTIVE
      - STATE_ACTIVE
      - STATE_ERROR
    description: |-
      - STATE_UNSPECIFIED: State: UNSPECIFIED
       - STATE_INACTIVE: State INACTIVE indicates the pipeline is inactive
       - STATE_ACTIVE: State ACTIVE indicates the pipeline is active
       - STATE_ERROR: State ERROR indicates the pipeline has error
    title: State enumerates the state of a pipeline
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
        description: |-
          A URL/resource name that uniquely identifies the type of the serialized
          protocol buffer message. This string must contain at least
          one "/" character. The last segment of the URL's path must represent
          the fully qualified name of the type (as in
          `path/google.protobuf.Duration`). The name should be in a canonical form
          (e.g., leading "." is not accepted).

          In practice, teams usually precompile into the binary all types that they
          expect it to use in the context of Any. However, for URLs which use the
          scheme `http`, `https`, or no scheme, one can optionally set up a type
          server that maps type URLs to message definitions as follows:

          * If no scheme is provided, `https` is assumed.
          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
            value in binary format, or produce an error.
          * Applications are allowed to cache lookup results based on the
            URL, or have them precompiled into a binary to avoid any
            lookup. Therefore, binary compatibility needs to be preserved
            on changes to types. (Use versioned type names to manage
            breaking changes.)

          Note: this functionality is not currently available in the official
          protobuf release, and it is not used for type URLs beginning with
          type.googleapis.com.

          Schemes other than `http`, `https` (or the empty scheme) might be
          used with implementation specific semantics.
    additionalProperties: {}
    description: |-
      `Any` contains an arbitrary serialized protocol buffer message along with a
      URL that describes the type of the serialized message.

      Protobuf library provides support to pack/unpack Any values in the form
      of utility functions or additional generated methods of the Any type.

      Example 1: Pack and unpack a message in C++.

          Foo foo = ...;
          Any any;
          any.PackFrom(foo);
          ...
          if (any.UnpackTo(&foo)) {
            ...
          }

      Example 2: Pack and unpack a message in Java.

          Foo foo = ...;
          Any any = Any.pack(foo);
          ...
          if (any.is(Foo.class)) {
            foo = any.unpack(Foo.class);
          }
          // or ...
          if (any.isSameTypeAs(Foo.getDefaultInstance())) {
            foo = any.unpack(Foo.getDefaultInstance());
          }

      Example 3: Pack and unpack a message in Python.

          foo = Foo(...)
          any = Any()
          any.Pack(foo)
          ...
          if any.Is(Foo.DESCRIPTOR):
            any.Unpack(foo)
            ...

      Example 4: Pack and unpack a message in Go

           foo := &pb.Foo{...}
           any, err := anypb.New(foo)
           if err != nil {
             ...
           }
           ...
           foo := &pb.Foo{}
           if err := any.UnmarshalTo(foo); err != nil {
             ...
           }

      The pack methods provided by protobuf library will by default use
      'type.googleapis.com/full.type.name' as the type URL and the unpack
      methods only use the fully qualified type name after the last '/'
      in the type URL, for example "foo.bar.com/x/y.z" will yield type
      name "y.z".

      JSON

      The JSON representation of an `Any` value uses the regular
      representation of the deserialized, embedded message, with an
      additional field `@type` which contains the type URL. Example:

          package google.profile;
          message Person {
            string first_name = 1;
            string last_name = 2;
          }

          {
            "@type": "type.googleapis.com/google.profile.Person",
            "firstName": <string>,
            "lastName": <string>
          }

      If the embedded message type is well-known and has a custom JSON
      representation, that representation will be embedded adding a field
      `value` which holds the custom JSON in addition to the `@type`
      field. Example (for message [google.protobuf.Duration][]):

          {
            "@type": "type.googleapis.com/google.protobuf.Duration",
            "value": "1.212s"
          }
  protobufNullValue:
    type: string
    description: |-
      `NullValue` is a singleton enumeration to represent the null value for the
      `Value` type union.

       The JSON representation for `NullValue` is JSON `null`.

       - NULL_VALUE: Null value.
  v1alphaBoundingBox:
    type: object
    properties:
      top:
        type: number
        format: float
        title: Bounding box top y-axis value
        readOnly: true
      left:
        type: number
        format: float
        title: Bounding box left x-axis value
        readOnly: true
      width:
        type: number
        format: float
        title: Bounding box width value
        readOnly: true
      height:
        type: number
        format: float
        title: Bounding box height value
        readOnly: true
    title: BoundingBox represents the bounding box data structure
  v1alphaCheckModelAdminResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1alphaModelState'
        title: Retrieved model state
    title: |-
      CheckModelAdminResponse represents a response to fetch a model's
      current state and longrunning progress
  v1alphaClassificationInput:
    type: object
    properties:
      image_url:
        type: string
        title: Image type URL
      image_base64:
        type: string
        title: Image type base64
    title: ClassificationInput represents the input of classification task
  v1alphaClassificationInputStream:
    type: object
    properties:
      file_lengths:
        type: array
        items:
          type: integer
          format: int64
        title: The list of file length for each uploaded binary file
      content:
        type: string
        format: byte
        title: Content of images in bytes
    title: |-
      ClassificationInputStream represents the input of classification task when
      using stream method
    required:
      - file_lengths
      - content
  v1alphaClassificationOutput:
    type: object
    properties:
      category:
        type: string
        title: Classification category
        readOnly: true
      score:
        type: number
        format: float
        title: Classification score
        readOnly: true
    title: ClassificationOutput represents the output of classification task
  v1alphaContent:
    type: object
    properties:
      type:
        type: string
        title: Type of Content
      content:
        type: string
        title: Content of Text Message
      prompt_image:
        $ref: '#/definitions/v1alphaPromptImage'
        title: Content of Image
    title: Content used for chat history in text generation model
  v1alphaCreateUserModelBinaryFileUploadResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: Create model operation message
        readOnly: true
    title: CreateUserModelBinaryFileUploadResponse represents a response for a model
  v1alphaCreateUserModelResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: Create model operation message
        readOnly: true
    title: CreateUserModelResponse represents a response for a model
  v1alphaDeleteUserModelResponse:
    type: object
    title: DeleteUserModelResponse represents an empty response
  v1alphaDeployModelAdminResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: Deploy operation message
    title: DeployModelAdminResponse represents a response for a deployed model
  v1alphaDeployUserModelResponse:
    type: object
    properties:
      model_id:
        type: string
        title: |-
          Deployed model's id
          Format: users/{user}/models/{model}
    title: DeployUserModelResponse represents a response for a deployed model
  v1alphaDetectionInput:
    type: object
    properties:
      image_url:
        type: string
        title: Image type URL
      image_base64:
        type: string
        title: Image type base64
    title: DetectionInput represents the input of detection task
  v1alphaDetectionInputStream:
    type: object
    properties:
      file_lengths:
        type: array
        items:
          type: integer
          format: int64
        title: The list of file length for each uploaded binary file
      content:
        type: string
        format: byte
        title: Content of images in bytes
    title: |-
      DetectionInputStream represents the input of detection task when using stream
      method
    required:
      - file_lengths
      - content
  v1alphaDetectionObject:
    type: object
    properties:
      category:
        type: string
        title: Detection object category
        readOnly: true
      score:
        type: number
        format: float
        title: Detection object score
        readOnly: true
      bounding_box:
        $ref: '#/definitions/v1alphaBoundingBox'
        title: Detection bounding box
        readOnly: true
    title: DetectionObject represents a predicted object
  v1alphaDetectionOutput:
    type: object
    properties:
      objects:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaDetectionObject'
        title: A list of detection objects
        readOnly: true
    title: DetectionOutput represents the output of detection task
  v1alphaGetModelDefinitionResponse:
    type: object
    properties:
      model_definition:
        $ref: '#/definitions/v1alphaModelDefinition'
        title: A model definition instance
    title: GetModelDefinitionResponse represents a response for a model definition
  v1alphaGetModelOperationResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: The retrieved model operation
    title: GetModelOperationResponse represents a response for a model operation
  v1alphaGetUserModelCardResponse:
    type: object
    properties:
      readme:
        $ref: '#/definitions/v1alphaModelCard'
        title: Retrieved model card
    title: GetUserModelCardResponse represents a response to fetch a model's README card
  v1alphaGetUserModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: The retrieved model
    title: GetUserModelResponse represents a response for a model
  v1alphaImageToImageInput:
    type: object
    properties:
      prompt_image_url:
        type: string
        title: Image type URL
      prompt_image_base64:
        type: string
        title: Image type base64
      prompt:
        type: string
        title: The prompt text
      steps:
        type: integer
        format: int32
        title: The steps, default is 5
      cfg_scale:
        type: number
        format: float
        title: The guidance scale, default is 7.5
      seed:
        type: integer
        format: int32
        title: The seed, default is 0
      samples:
        type: integer
        format: int32
        title: The number of generated samples, default is 1
      extra_params:
        type: object
        title: The extra parameters
    title: ImageToImageInput represents the input of image to image task
    required:
      - prompt
  v1alphaImageToImageOutput:
    type: object
    properties:
      images:
        type: array
        items:
          type: string
        title: List of generated images
        readOnly: true
    title: ImageToImageOutput represents the output of image to image task
  v1alphaInstanceSegmentationInput:
    type: object
    properties:
      image_url:
        type: string
        title: Image type URL
      image_base64:
        type: string
        title: Image type base64
    title: InstanceSegmentationInput represents the input of instance segmentation task
  v1alphaInstanceSegmentationInputStream:
    type: object
    properties:
      file_lengths:
        type: array
        items:
          type: integer
          format: int64
        title: The list of file length for each uploaded binary file
      content:
        type: string
        format: byte
        title: Content of images in bytes
    title: |-
      InstanceSegmentationInputStream represents the input of instance segmentation
      task when using stream method
    required:
      - file_lengths
      - content
  v1alphaInstanceSegmentationObject:
    type: object
    properties:
      rle:
        type: string
        title: Instance RLE segmentation mask
        readOnly: true
      category:
        type: string
        title: Instance category
        readOnly: true
      score:
        type: number
        format: float
        title: Instance score
        readOnly: true
      bounding_box:
        $ref: '#/definitions/v1alphaBoundingBox'
        title: Instance bounding box
        readOnly: true
    title: InstanceSegmentationObject corresponding to a instance segmentation object
  v1alphaInstanceSegmentationOutput:
    type: object
    properties:
      objects:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaInstanceSegmentationObject'
        title: A list of instance segmentation objects
        readOnly: true
    title: |-
      InstanceSegmentationOutput represents the output of instance segmentation
      task
  v1alphaKeypoint:
    type: object
    properties:
      x:
        type: number
        format: float
        title: x coordinate
        readOnly: true
      "y":
        type: number
        format: float
        title: y coordinate
        readOnly: true
      v:
        type: number
        format: float
        title: visibility
        readOnly: true
    title: Keypoint structure which include coordinate and keypoint visibility
  v1alphaKeypointInput:
    type: object
    properties:
      image_url:
        type: string
        title: Image type URL
      image_base64:
        type: string
        title: Image type base64
    title: KeypointInput represents the input of keypoint detection task
  v1alphaKeypointInputStream:
    type: object
    properties:
      file_lengths:
        type: array
        items:
          type: integer
          format: int64
        title: The list of file length for each uploaded binary file
      content:
        type: string
        format: byte
        title: Content of images in bytes
    title: |-
      KeypointInputStream represents the input of keypoint detection task when
      using stream method
    required:
      - file_lengths
      - content
  v1alphaKeypointObject:
    type: object
    properties:
      keypoints:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaKeypoint'
        title: Keypoints
        readOnly: true
      score:
        type: number
        format: float
        title: Keypoint score
        readOnly: true
      bounding_box:
        $ref: '#/definitions/v1alphaBoundingBox'
        title: Bounding box object
        readOnly: true
    title: KeypointObject corresponding to a person object
  v1alphaKeypointOutput:
    type: object
    properties:
      objects:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaKeypointObject'
        title: A list of keypoint objects
        readOnly: true
    title: KeypointOutput represents the output of keypoint detection task
  v1alphaListModelDefinitionsResponse:
    type: object
    properties:
      model_definitions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaModelDefinition'
        title: a list of ModelDefinition instances
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of model definitions
    title: |-
      ListModelDefinitionsResponse represents a response to list all supported
      model definitions
  v1alphaListModelsAdminResponse:
    type: object
    properties:
      models:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaModel'
        title: a list of Models
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of models
    title: ListModelsAdminResponse represents a response for a list of models
  v1alphaListModelsResponse:
    type: object
    properties:
      models:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaModel'
        title: a list of Models
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of models
    title: ListModelsResponse represents a response for a list of models
  v1alphaListUserModelsResponse:
    type: object
    properties:
      models:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaModel'
        title: a list of Models
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of models
    title: ListUserModelsResponse represents a response for a list of models
  v1alphaLookUpModelAdminResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: A model resource
    title: LookUpModelResponse represents a response for a model
  v1alphaLookUpModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: A model resource
    title: LookUpModelResponse represents a response for a model
  v1alphaModel:
    type: object
    properties:
      name:
        type: string
        title: |-
          Resource name. It must have the format of "users/{user}/models/{model}".
          For example: "users/instill-ai/models/yolov4"
        readOnly: true
      uid:
        type: string
        title: Model ID in UUIDv4
        readOnly: true
      id:
        type: string
        description: |-
          Resource ID (the last segment of the resource name) used to construct the
          resource name. This conforms to RFC-1034, which restricts to letters,
          numbers, and hyphen, with the first character a letter, the last a letter
          or a number, and a 63 character maximum.
      description:
        type: string
        title: Model description
      model_definition:
        type: string
        title: Model definition resource name
      configuration:
        type: object
        title: |-
          Model configuration represents the configuration JSON that has been
          validated using the `model_spec` JSON schema of a ModelDefinition
      task:
        $ref: '#/definitions/v1alphaTask'
        title: Model task
        readOnly: true
      state:
        $ref: '#/definitions/v1alphaModelState'
        title: Model state
        readOnly: true
      visibility:
        $ref: '#/definitions/v1alphaModelVisibility'
        title: Model visibility including public or private
        readOnly: true
      create_time:
        type: string
        format: date-time
        title: Model create time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: Model update time
        readOnly: true
      delete_time:
        type: string
        format: date-time
        title: Model delete time
        readOnly: true
      owner_name:
        type: string
        title: Owner Name
        readOnly: true
      owner:
        type: object
        title: Owner details
        readOnly: true
    title: Model represents a model
  v1alphaModelCard:
    type: object
    properties:
      name:
        type: string
        title: |-
          Resource name. It must have the format of
          "users/{user}/models/{model}/readme"
        readOnly: true
      size:
        type: integer
        format: int32
        title: Size of the file
        readOnly: true
      type:
        type: string
        description: Type of the resource. Fixed to "file".
        readOnly: true
      content:
        type: string
        format: byte
        title: Content of the README file in bytes and base64 format
        readOnly: true
      encoding:
        type: string
        description: Encoding type of the content. Fixed to "base64".
        readOnly: true
    description: |-
      ModelCard represents the README card for a model. There
      exists one and exactly one README card per model.
  v1alphaModelDefinition:
    type: object
    properties:
      name:
        type: string
        title: |-
          ModelDefinition resource name. It must have the format of
          "model-definitions/{model-definition}"
        readOnly: true
      uid:
        type: string
        title: ModelDefinition ID in UUIDv4
        readOnly: true
      id:
        type: string
        description: |-
          ModelDefinition resource ID (the last segment of the resource name) used to
          construct the resource name.
        readOnly: true
      title:
        type: string
        title: ModelDefinition display official title
        readOnly: true
      documentation_url:
        type: string
        title: ModelDefinition documentation url
        readOnly: true
      icon:
        type: string
        title: ModelDefinition icon
        readOnly: true
      release_stage:
        $ref: '#/definitions/v1alphaReleaseStage'
        title: ModelDefinition release stage
        readOnly: true
      model_spec:
        type: object
        description: |-
          ModelDefinition model specification represents the JSON schema used to
          validate the JSON configurations of a model created from a specific model
          source. Must be a valid JSON that includes what fields are needed to
          create/display a model.
        readOnly: true
      create_time:
        type: string
        format: date-time
        title: ModelDefinition create time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: ModelDefinition update time
        readOnly: true
    title: |-
      /////////////////////////////////////////////////////////////////
      ModelDefinition represents the definition of a model
  v1alphaModelState:
    type: string
    enum:
      - STATE_OFFLINE
      - STATE_ONLINE
      - STATE_ERROR
    description: |-
      - STATE_UNSPECIFIED: State: UNSPECIFIED
       - STATE_OFFLINE: State: OFFLINE
       - STATE_ONLINE: State: ONLINE
       - STATE_ERROR: State: ERROR
    title: State enumerates a model state
  v1alphaModelVisibility:
    type: string
    enum:
      - VISIBILITY_PRIVATE
      - VISIBILITY_PUBLIC
    description: |-
      - VISIBILITY_UNSPECIFIED: Visibility: UNSPECIFIED, equivalent to PRIVATE.
       - VISIBILITY_PRIVATE: Visibility: PRIVATE
       - VISIBILITY_PUBLIC: Visibility: PUBLIC
    title: Model visibility including public or private
  v1alphaOcrInput:
    type: object
    properties:
      image_url:
        type: string
        title: Image type URL
      image_base64:
        type: string
        title: Image type base64
    title: OcrInput represents the input of ocr task
  v1alphaOcrInputStream:
    type: object
    properties:
      file_lengths:
        type: array
        items:
          type: integer
          format: int64
        title: The list of file length for each uploaded binary file
      content:
        type: string
        format: byte
        title: Content of images in bytes
    title: OcrInputStream represents the input of ocr task when using stream method
    required:
      - file_lengths
      - content
  v1alphaOcrObject:
    type: object
    properties:
      text:
        type: string
        title: OCR text
        readOnly: true
      score:
        type: number
        format: float
        title: OCR text score
        readOnly: true
      bounding_box:
        $ref: '#/definitions/v1alphaBoundingBox'
        title: OCR bounding box
        readOnly: true
    title: OcrObject represents a predicted ocr object
  v1alphaOcrOutput:
    type: object
    properties:
      objects:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaOcrObject'
        title: A list of OCR objects
        readOnly: true
    title: OcrOutput represents the output of ocr task
  v1alphaPromptImage:
    type: object
    properties:
      prompt_image_url:
        type: string
        title: Image URL
      prompt_image_base64:
        type: string
        title: Base64 encoded Image
    title: Prompt Image for text generation model
  v1alphaPublishUserModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: Published model
    title: PublishUserModelResponse represents a response for the published model
  v1alphaReleaseStage:
    type: string
    enum:
      - RELEASE_STAGE_ALPHA
      - RELEASE_STAGE_BETA
      - RELEASE_STAGE_GENERALLY_AVAILABLE
      - RELEASE_STAGE_CUSTOM
    description: |-
      - RELEASE_STAGE_UNSPECIFIED: ReleaseStage: UNSPECIFIED
       - RELEASE_STAGE_ALPHA: ReleaseStage: ALPHA
       - RELEASE_STAGE_BETA: ReleaseStage: BETA
       - RELEASE_STAGE_GENERALLY_AVAILABLE: ReleaseStage: GENERALLY_AVAILABLE
       - RELEASE_STAGE_CUSTOM: ReleaseStage: CUSTOM
    title: ReleaseStage enumerates the release stages
  v1alphaRenameUserModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: Renamed model
    title: RenameUserModelResponse represents a response for a model
  v1alphaSemanticSegmentationInput:
    type: object
    properties:
      image_url:
        type: string
        title: Image type URL
      image_base64:
        type: string
        title: Image type base64
    title: SemanticSegmentationInput represents the input of semantic segmentation task
  v1alphaSemanticSegmentationInputStream:
    type: object
    properties:
      file_lengths:
        type: array
        items:
          type: integer
          format: int64
        title: The list of file length for each uploaded binary file
      content:
        type: string
        format: byte
        title: Content of images in bytes
    title: |-
      SemanticSegmentationInputStream represents the input of semantic segmentation
      task when using stream method
    required:
      - file_lengths
      - content
  v1alphaSemanticSegmentationOutput:
    type: object
    properties:
      stuffs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaSemanticSegmentationStuff'
        title: A list of semantic segmentation stuffs
        readOnly: true
    title: |-
      SemanticSegmentationOutput represents the output of semantic segmentation
      task
  v1alphaSemanticSegmentationStuff:
    type: object
    properties:
      rle:
        type: string
        title: RLE segmentation mask
        readOnly: true
      category:
        type: string
        title: Stuff category
        readOnly: true
    title: SemanticSegmentationStuff corresponding to a semantic segmentation stuff
  v1alphaTask:
    type: string
    enum:
      - TASK_CLASSIFICATION
      - TASK_DETECTION
      - TASK_KEYPOINT
      - TASK_OCR
      - TASK_INSTANCE_SEGMENTATION
      - TASK_SEMANTIC_SEGMENTATION
      - TASK_TEXT_TO_IMAGE
      - TASK_TEXT_GENERATION
      - TASK_TEXT_GENERATION_CHAT
      - TASK_VISUAL_QUESTION_ANSWERING
      - TASK_IMAGE_TO_IMAGE
      - TASK_TEXT_EMBEDDINGS
      - TASK_SPEECH_RECOGNITION
    description: |-
      - TASK_UNSPECIFIED: Task: UNSPECIFIED
       - TASK_CLASSIFICATION: Task: CLASSIFICATION
       - TASK_DETECTION: Task: DETECTION
       - TASK_KEYPOINT: Task: KEYPOINT
       - TASK_OCR: Task: OCR
       - TASK_INSTANCE_SEGMENTATION: Task: INSTANCE SEGMENTATION
       - TASK_SEMANTIC_SEGMENTATION: Task: SEMANTIC SEGMENTATION
       - TASK_TEXT_TO_IMAGE: Task: TEXT TO IMAGE
       - TASK_TEXT_GENERATION: Task: TEXT GENERATION
       - TASK_TEXT_GENERATION_CHAT: Task: TEXT GENERATION CHAT
       - TASK_VISUAL_QUESTION_ANSWERING: Task: VISUAL QUESTION ANSWERING
       - TASK_IMAGE_TO_IMAGE: Task: IMAGE TO IMAGE
       - TASK_TEXT_EMBEDDINGS: Task: TEXT EMBEDDINGS
       - TASK_SPEECH_RECOGNITION: Task: SPEECH RECOGNITION
    title: Task enumerates the AI task type
  v1alphaTaskInput:
    type: object
    properties:
      classification:
        $ref: '#/definitions/v1alphaClassificationInput'
        title: The classification input
      detection:
        $ref: '#/definitions/v1alphaDetectionInput'
        title: The detection input
      keypoint:
        $ref: '#/definitions/v1alphaKeypointInput'
        title: The keypoint input
      ocr:
        $ref: '#/definitions/v1alphaOcrInput'
        title: The ocr input
      instance_segmentation:
        $ref: '#/definitions/v1alphaInstanceSegmentationInput'
        title: The instance segmentation input
      semantic_segmentation:
        $ref: '#/definitions/v1alphaSemanticSegmentationInput'
        title: The semantic segmentation input
      text_to_image:
        $ref: '#/definitions/v1alphaTextToImageInput'
        title: The text to image input
      image_to_image:
        $ref: '#/definitions/v1alphaImageToImageInput'
        title: The image to image input
      text_generation:
        $ref: '#/definitions/v1alphaTextGenerationInput'
        title: The text generation input
      text_generation_chat:
        $ref: '#/definitions/v1alphaTextGenerationChatInput'
        title: The text generation chat input
      visual_question_answering:
        $ref: '#/definitions/v1alphaVisualQuestionAnsweringInput'
        title: The visual question answering input
      unspecified:
        $ref: '#/definitions/v1alphaUnspecifiedInput'
        title: The unspecified task input
    title: Input represents the input to trigger a model
  v1alphaTaskInputStream:
    type: object
    properties:
      classification:
        $ref: '#/definitions/v1alphaClassificationInputStream'
        title: The classification input
      detection:
        $ref: '#/definitions/v1alphaDetectionInputStream'
        title: The detection input
      keypoint:
        $ref: '#/definitions/v1alphaKeypointInputStream'
        title: The keypoint input
      ocr:
        $ref: '#/definitions/v1alphaOcrInputStream'
        title: The ocr input
      instance_segmentation:
        $ref: '#/definitions/v1alphaInstanceSegmentationInputStream'
        title: The instance segmentation input
      semantic_segmentation:
        $ref: '#/definitions/v1alphaSemanticSegmentationInputStream'
        title: The semantic segmentation input
      text_to_image:
        $ref: '#/definitions/v1alphaTextToImageInput'
        title: The text to image input
      image_to_image:
        $ref: '#/definitions/v1alphaImageToImageInput'
        title: The image to image input
      text_generation:
        $ref: '#/definitions/v1alphaTextGenerationInput'
        title: The text generation input
      text_generation_chat:
        $ref: '#/definitions/v1alphaTextGenerationChatInput'
        title: The text generation chat input
      visual_question_answering:
        $ref: '#/definitions/v1alphaVisualQuestionAnsweringInput'
        title: The visual question answering input
      unspecified:
        $ref: '#/definitions/v1alphaUnspecifiedInput'
        title: The unspecified task input
    title: TaskInputStream represents the input to trigger a model with stream method
  v1alphaTaskOutput:
    type: object
    properties:
      classification:
        $ref: '#/definitions/v1alphaClassificationOutput'
        title: The classification output
        readOnly: true
      detection:
        $ref: '#/definitions/v1alphaDetectionOutput'
        title: The detection output
        readOnly: true
      keypoint:
        $ref: '#/definitions/v1alphaKeypointOutput'
        title: The keypoint output
        readOnly: true
      ocr:
        $ref: '#/definitions/v1alphaOcrOutput'
        title: The ocr output
        readOnly: true
      instance_segmentation:
        $ref: '#/definitions/v1alphaInstanceSegmentationOutput'
        title: The instance segmentation output
        readOnly: true
      semantic_segmentation:
        $ref: '#/definitions/v1alphaSemanticSegmentationOutput'
        title: The semantic segmentation output
        readOnly: true
      text_to_image:
        $ref: '#/definitions/v1alphaTextToImageOutput'
        title: The text to image output
        readOnly: true
      image_to_image:
        $ref: '#/definitions/v1alphaImageToImageOutput'
        title: The image to image output
        readOnly: true
      text_generation:
        $ref: '#/definitions/v1alphaTextGenerationOutput'
        title: The text generation output
        readOnly: true
      text_generation_chat:
        $ref: '#/definitions/v1alphaTextGenerationChatOutput'
        title: The text generation output
        readOnly: true
      visual_question_answering:
        $ref: '#/definitions/v1alphaVisualQuestionAnsweringOutput'
        title: The text generation output
        readOnly: true
      unspecified:
        $ref: '#/definitions/v1alphaUnspecifiedOutput'
        title: The unspecified task output
        readOnly: true
    title: TaskOutput represents the output of a CV Task result from a model
  v1alphaTestUserModelBinaryFileUploadResponse:
    type: object
    properties:
      task:
        $ref: '#/definitions/v1alphaTask'
        title: The task type
      task_outputs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaTaskOutput'
        title: The task output from a model
    title: |-
      TestUserModelBinaryFileUploadResponse represents a response for the
      output for testing a model
    required:
      - task
      - task_outputs
  v1alphaTestUserModelResponse:
    type: object
    properties:
      task:
        $ref: '#/definitions/v1alphaTask'
        title: The task type
      task_outputs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaTaskOutput'
        title: The task output from a model
    title: |-
      TestUserModelResponse represents a response for the output for
      testing a model
    required:
      - task
      - task_outputs
  v1alphaTextGenerationChatInput:
    type: object
    properties:
      prompt:
        type: string
        title: The prompt text
      prompt_images:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPromptImage'
        title: The prompt images
      chat_history:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaContent'
        title: The chat history
      system_message:
        type: string
        title: The system message
      max_new_tokens:
        type: integer
        format: int32
        title: The maximum number of tokens for model to generate
      temperature:
        type: number
        format: float
        title: The temperature for sampling
      top_k:
        type: integer
        format: int32
        title: Top k for sampling
      seed:
        type: integer
        format: int32
        title: The seed
      extra_params:
        type: object
        title: The extra parameters
    title: TextGenerationChatInput represents the input of text generation chat task
    required:
      - prompt
  v1alphaTextGenerationChatOutput:
    type: object
    properties:
      text:
        type: string
        title: The text generated by the model
        readOnly: true
    title: TextGenerationChatOutput represents the output of text generation chat task
  v1alphaTextGenerationInput:
    type: object
    properties:
      prompt:
        type: string
        title: The prompt text
      prompt_images:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPromptImage'
        title: The prompt images
      chat_history:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaContent'
        title: The chat history
      system_message:
        type: string
        title: The system message
      max_new_tokens:
        type: integer
        format: int32
        title: The maximum number of tokens for model to generate
      temperature:
        type: number
        format: float
        title: The temperature for sampling
      top_k:
        type: integer
        format: int32
        title: Top k for sampling
      seed:
        type: integer
        format: int32
        title: The seed
      extra_params:
        type: object
        title: The extra parameters
    title: TextGenerationInput represents the input of text generation task
    required:
      - prompt
  v1alphaTextGenerationOutput:
    type: object
    properties:
      text:
        type: string
        title: The text generated by the model
        readOnly: true
    title: TextGenerationOutput represents the output of text generation task
  v1alphaTextToImageInput:
    type: object
    properties:
      prompt:
        type: string
        title: The prompt text
      prompt_image_url:
        type: string
        title: Image type URL
      prompt_image_base64:
        type: string
        title: Image type base64
      steps:
        type: integer
        format: int32
        title: The steps, default is 5
      cfg_scale:
        type: number
        format: float
        title: The guidance scale, default is 7.5
      seed:
        type: integer
        format: int32
        title: The seed, default is 0
      samples:
        type: integer
        format: int32
        title: The number of generated samples, default is 1
      extra_params:
        type: object
        title: The extra parameters
    title: TextToImageInput represents the input of text to image task
    required:
      - prompt
  v1alphaTextToImageOutput:
    type: object
    properties:
      images:
        type: array
        items:
          type: string
        title: List of generated images
        readOnly: true
    title: TextToImageOutput represents the output of text to image task
  v1alphaTriggerUserModelBinaryFileUploadResponse:
    type: object
    properties:
      task:
        $ref: '#/definitions/v1alphaTask'
        title: The task type
      task_outputs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaTaskOutput'
        title: The task output from a model
    title: |-
      TriggerUserModelBinaryFileUploadResponse represents a response for the
      output for testing a model
    required:
      - task
      - task_outputs
  v1alphaTriggerUserModelResponse:
    type: object
    properties:
      task:
        $ref: '#/definitions/v1alphaTask'
        title: The task type
      task_outputs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaTaskOutput'
        title: The task output from a model
    title: |-
      TriggerUserModelResponse represents a response for the output for
      triggering a model
  v1alphaUndeployModelAdminResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: Undeploy operation message
    title: UndeployModelAdminResponse represents a response for a undeployed model
  v1alphaUndeployUserModelResponse:
    type: object
    properties:
      model_id:
        type: string
        title: |-
          Undeployed model's id
          Format: users/{user}/models/{model}
    title: UndeployUserModelResponse represents a response for a undeployed model
  v1alphaUnpublishUserModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: Unpublished model
    title: UnpublishUserModelResponse represents a response for the unpublished model
  v1alphaUnspecifiedInput:
    type: object
    properties:
      raw_inputs:
        type: array
        items:
          type: object
        title: A list of unspecified task inputs
    title: UnspecifiedInput represents the input of unspecified task
  v1alphaUnspecifiedOutput:
    type: object
    properties:
      raw_outputs:
        type: array
        items:
          type: object
        title: A list of unspecified task outputs
        readOnly: true
    title: UnspecifiedOutput represents the output of unspecified task
  v1alphaUpdateUserModelResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/v1alphaModel'
        title: The updated model
    title: UpdateUserModelResponse represents a response for a model
  v1alphaVisualQuestionAnsweringInput:
    type: object
    properties:
      prompt:
        type: string
        title: The prompt text
      prompt_images:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaPromptImage'
        title: The prompt images
      chat_history:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaContent'
        title: The chat history
      system_message:
        type: string
        title: The system message
      max_new_tokens:
        type: integer
        format: int32
        title: The maximum number of tokens for model to generate
      temperature:
        type: number
        format: float
        title: The temperature for sampling
      top_k:
        type: integer
        format: int32
        title: Top k for sampling
      seed:
        type: integer
        format: int32
        title: The seed
      extra_params:
        type: object
        title: The extra parameters
    title: VisualQuestionAnsweringInput represents the input of visaul question answering task
    required:
      - prompt
  v1alphaVisualQuestionAnsweringOutput:
    type: object
    properties:
      text:
        type: string
        title: The text generated by the model
        readOnly: true
    title: VisualQuestionAnsweringOutput represents the output of visaul question answering task
  v1alphaWatchUserModelResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1alphaModelState'
        title: Retrieved model state
      progress:
        type: integer
        format: int32
        title: Retrieved model logrunning progress
    title: |-
      WatchUserModelResponse represents a public response to
      fetch a model current state and longrunning progress
  v1betaApiToken:
    type: object
    properties:
      name:
        type: string
        title: API token resource name. It must have the format of "tokens/*"
        readOnly: true
      uid:
        type: string
        title: API token UUID
        readOnly: true
      id:
        type: string
        description: |-
          API token resource ID (the last segment of the resource name) used to
          construct the resource name. This conforms to RFC-1034, which restricts to
          letters, numbers, and hyphen, with the first character a letter, the last a
          letter or a number, and a 63 character maximum.
          Use this field to define where it's being used.
      create_time:
        type: string
        format: date-time
        title: API token creation time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: API token update time
        readOnly: true
      access_token:
        type: string
        description: |-
          An opaque access token representing the API token string.
          To validate the token, the recipient of the token needs to call the server
          that issued the token.
        readOnly: true
      state:
        $ref: '#/definitions/v1betaApiTokenState'
        title: API token state
        readOnly: true
      token_type:
        type: string
        title: API token type, value is fixed to "Bearer"
        readOnly: true
      ttl:
        type: integer
        format: int32
        description: Input only. The TTL in seconds for this resource.
      expire_time:
        type: string
        format: date-time
        title: API token expire time
    title: ApiToken represents the content of a API token
  v1betaApiTokenState:
    type: string
    enum:
      - STATE_INACTIVE
      - STATE_ACTIVE
      - STATE_EXPIRED
    description: |-
      - STATE_UNSPECIFIED: State: UNSPECIFIED
       - STATE_INACTIVE: State: INACTIVE
       - STATE_ACTIVE: State: ACTIVE
       - STATE_EXPIRED: State: EXPIRED
    title: State enumerates the state of an API token
  v1betaAuthChangePasswordRequest:
    type: object
    properties:
      old_password:
        type: string
        title: Old password
      new_password:
        type: string
        title: New password
    title: Request for changing password
  v1betaAuthChangePasswordResponse:
    type: object
    title: Response for changing password
  v1betaAuthLoginResponse:
    type: object
    properties:
      access_token:
        type: string
        title: access token
    title: Response for user logout
  v1betaAuthLogoutResponse:
    type: object
    title: Response for user logout
  v1betaAuthTokenIssuerRequest:
    type: object
    properties:
      username:
        type: string
        title: Username
      password:
        type: string
        title: Password
    title: Request for user login
    required:
      - username
      - password
  v1betaAuthTokenIssuerResponse:
    type: object
    properties:
      access_token:
        $ref: '#/definitions/AuthTokenIssuerResponseUnsignedAccessToken'
        title: access_token
    title: Response for user logout
  v1betaAuthValidateAccessTokenResponse:
    type: object
    title: Response for access_token validation
  v1betaCheckConnectorResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1betaConnectorState'
        description: Connector state.
    description: CheckConnectorResponse contains the connector's current state.
  v1betaCheckNamespaceRequest:
    type: object
    properties:
      id:
        type: string
        title: Namespace ID to be checked
    title: |-
      CheckNamespaceRequest represents a request to verify if
      a namespace has been occupied
    required:
      - id
  v1betaCheckNamespaceResponse:
    type: object
    properties:
      type:
        $ref: '#/definitions/CheckNamespaceResponseNamespace'
        title: Namespace type
    title: |-
      CheckNamespaceResponse represents a response about whether
      the queried namespace has been occupied and return its type
  v1betaComponent:
    type: object
    properties:
      id:
        type: string
        title: Component id that is given by the users
      resource_name:
        type: string
        title: A pipeline component resource name
      resource:
        $ref: '#/definitions/v1betaConnector'
        title: A pipeline component resource detail
        readOnly: true
      configuration:
        type: object
        title: Configuration for the pipeline component
      type:
        $ref: '#/definitions/v1betaComponentType'
        title: Resource Type
        readOnly: true
      definition_name:
        type: string
        title: A pipeline component definition name
      operator_definition:
        $ref: '#/definitions/v1betaOperatorDefinition'
        title: operator definition detail
        readOnly: true
      connector_definition:
        $ref: '#/definitions/v1betaConnectorDefinition'
        title: connector definition detail
        readOnly: true
    title: Represents a pipeline component
    required:
      - id
      - definition_name
  v1betaComponentType:
    type: string
    enum:
      - COMPONENT_TYPE_CONNECTOR_AI
      - COMPONENT_TYPE_CONNECTOR_DATA
      - COMPONENT_TYPE_CONNECTOR_BLOCKCHAIN
      - COMPONENT_TYPE_OPERATOR
    description: |-
      - COMPONENT_TYPE_UNSPECIFIED: TYPE_UNSPECIFIED
       - COMPONENT_TYPE_CONNECTOR_AI: CONNECTOR_AI
       - COMPONENT_TYPE_CONNECTOR_DATA: CONNECTOR_DATA
       - COMPONENT_TYPE_CONNECTOR_BLOCKCHAIN: CONNECTOR_BLOCKCHAIN
       - COMPONENT_TYPE_OPERATOR: CONNECTOR_OPERATOR
    title: ComponentType
  v1betaConnectOrganizationConnectorResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        title: A connector
    title: |-
      ConnectOrganizationConnectorResponse represents a connected
      connector
  v1betaConnectUserConnectorResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        title: A connector
    title: |-
      ConnectUserConnectorResponse represents a connected
      connector
  v1betaConnector:
    type: object
    properties:
      name:
        type: string
        description: |-
          The name of the connector, defined by its ID.
          - Format: `connectors/{id}`.
        readOnly: true
      uid:
        type: string
        description: Connector UUID.
        readOnly: true
      id:
        type: string
        description: |-
          Connector resource ID (used in the name as the last segment). This conforms
          to RFC-1034, which restricts to letters, numbers, and hyphen, with the
          first character a letter, the last a letter or a number, and a 63
          character maximum.
      connector_definition_name:
        type: string
        description: ConnectorDefinition that describes the connector configuration.
      type:
        $ref: '#/definitions/v1betaConnectorType'
        description: Connector type.
        readOnly: true
      description:
        type: string
        description: Connector description.
      configuration:
        type: object
        description: Connector configuration in JSON format.
      state:
        $ref: '#/definitions/v1betaConnectorState'
        description: Connector state.
        readOnly: true
      tombstone:
        type: boolean
        description: |-
          Connector tombstone. If true, this configuration is permanently off.
          Otherwise, the configuration is active.
        readOnly: true
      create_time:
        type: string
        format: date-time
        description: Connector creation time.
        readOnly: true
      update_time:
        type: string
        format: date-time
        description: Connector update time.
        readOnly: true
      visibility:
        $ref: '#/definitions/v1betaConnectorVisibility'
        description: Connector visibility.
        readOnly: true
      connector_definition:
        $ref: '#/definitions/v1betaConnectorDefinition'
        description: Embed content of the ConnectorDefinition.
        readOnly: true
      delete_time:
        type: string
        format: date-time
        description: Connector deletion time.
        readOnly: true
      owner_name:
        type: string
        description: Owner name.
        readOnly: true
      owner:
        type: object
        description: Owner details.
        readOnly: true
    description: |-
      A Connector is a type of pipeline component that queries, processes or sends
      the ingested unstructured data to a service or app. Users need to configure
      their connectors (e.g. by providing an API token to a remote service).

      For more information, see
      [Component](https://www.instill.tech/docs/latest/core/concepts/pipeline#pipeline-component)
      in the official documentation.
    required:
      - configuration
  v1betaConnectorDefinition:
    type: object
    properties:
      name:
        type: string
        description: |-
          The name of the connector definition.
          - Format: `connector-definitions/*`.
        readOnly: true
      uid:
        type: string
        description: Connector definition UUID.
        readOnly: true
      id:
        type: string
        description: |-
          Connector definition resource ID (used in the name as the last segment). This
          conforms to RFC-1034, which restricts to letters, numbers, and hyphen,
          with the first character a letter, the last a letter or a number, and a 63
          character maximum.
      title:
        type: string
        description: Connector definition title.
        readOnly: true
      documentation_url:
        type: string
        description: Connector definition documentation URL.
        readOnly: true
      icon:
        type: string
        description: Connector definition icon.
        readOnly: true
      spec:
        $ref: '#/definitions/v1betaConnectorSpec'
        description: Connector definition specification.
        readOnly: true
      type:
        $ref: '#/definitions/v1betaConnectorType'
        description: Connector definition type.
        readOnly: true
      tombstone:
        type: boolean
        description: |-
          Connector definition tombstone. If true, this configuration is permanently
          off. Otherwise, the configuration is active.
        readOnly: true
      public:
        type: boolean
        description: |-
          The public flag determines whether this connector definition is available
          to all workspaces.
        readOnly: true
      custom:
        type: boolean
        description: |-
          Connector definition custom flag, i.e., whether this is a custom
          connector definition.
        readOnly: true
      icon_url:
        type: string
        description: Connector definition icon URL.
        readOnly: true
      vendor:
        type: string
        description: Connector definition vendor name.
        readOnly: true
      vendor_attributes:
        type: object
        description: Vendor-specific attributes.
        readOnly: true
    description: |-
      A Connector is a type of pipeline component that queries, processes or sends
      the ingested unstructured data to a service or app. Users need to configure
      their connectors (e.g. by providing an API token to a remote service). A
      ConnectorDefinition describes a certain type of Connector.

      For more information, see
      [Component](https://www.instill.tech/docs/latest/core/concepts/pipeline#pipeline-component)
      in the official documentation.
  v1betaConnectorDefinitionView:
    type: string
    enum:
      - VIEW_BASIC
      - VIEW_FULL
    description: |-
      View defines how a connector definition is presented.

       - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
       - VIEW_BASIC: Default view, only includes basic information.
       - VIEW_FULL: Full representation.
  v1betaConnectorExecuteChartRecord:
    type: object
    properties:
      connector_id:
        type: string
        title: ID for the executed connector
      connector_uid:
        type: string
        title: UID for the executed connector
      status:
        $ref: '#/definitions/mgmtv1betaStatus'
        title: Status of connector execution
        readOnly: true
      time_buckets:
        type: array
        items:
          type: string
          format: date-time
        title: Time buckets
        readOnly: true
      execute_counts:
        type: array
        items:
          type: integer
          format: int32
        title: Aggregated execute count in each time bucket
        readOnly: true
      compute_time_duration:
        type: array
        items:
          type: number
          format: float
        title: Total compute time duration in each time bucket
        readOnly: true
    title: |-
      ConnectorExecuteChartRecord represents a aggregated chart record for
      connector execute
  v1betaConnectorExecuteRecord:
    type: object
    properties:
      execute_time:
        type: string
        format: date-time
        title: Timestamp for the connector execution time
      connector_execute_id:
        type: string
        title: UID for connector execution
      connector_id:
        type: string
        title: ID for the executed connector
      connector_uid:
        type: string
        title: UID for the executed connector
      connector_definition_uid:
        type: string
        title: UID for the executed connector definition
      pipeline_id:
        type: string
        title: ID for the pipeline this connector belong to
      pipeline_uid:
        type: string
        title: UID for the pipeline this connector belong to
      pipeline_trigger_id:
        type: string
        title: UID for the trigger id of the pipeline this connector belong to
      compute_time_duration:
        type: number
        format: float
        title: Total compute time duration for this execution
        readOnly: true
      status:
        $ref: '#/definitions/mgmtv1betaStatus'
        title: Final status for the connector execution
        readOnly: true
    title: ConnectorExecuteRecord represents a record for connector execution
  v1betaConnectorExecuteTableRecord:
    type: object
    properties:
      connector_id:
        type: string
        title: ID for the executed connector
      connector_uid:
        type: string
        title: UID for the executed connector
      execute_count_completed:
        type: integer
        format: int32
        title: Execute count with STATUS_COMPLETED
        readOnly: true
      execute_count_errored:
        type: integer
        format: int32
        title: Execute count with STATUS_ERRORED
        readOnly: true
    title: |-
      ConnectorExecuteTableRecord represents a aggregated table record for
      connector execute
  v1betaConnectorSpec:
    type: object
    properties:
      resource_specification:
        type: object
        title: Spec resource specification
      component_specification:
        type: object
        title: Spec component specification
      openapi_specifications:
        type: object
        title: Spec openapi specification
    title: |-
      //////////////////////////////////
      Spec represents a spec data model
    required:
      - resource_specification
      - component_specification
      - openapi_specifications
  v1betaConnectorState:
    type: string
    enum:
      - STATE_DISCONNECTED
      - STATE_CONNECTED
      - STATE_ERROR
    description: |-
      State describes the state of the connector.

       - STATE_UNSPECIFIED: Unspecified.
       - STATE_DISCONNECTED: Disconnected.
       - STATE_CONNECTED: Connected.
       - STATE_ERROR: The connector suffered an error.
  v1betaConnectorType:
    type: string
    enum:
      - CONNECTOR_TYPE_SOURCE
      - CONNECTOR_TYPE_DESTINATION
      - CONNECTOR_TYPE_AI
      - CONNECTOR_TYPE_BLOCKCHAIN
      - CONNECTOR_TYPE_DATA
      - CONNECTOR_TYPE_OPERATOR
    description: |-
      ConnectorType holds the different connector types based on their tasks.

       - CONNECTOR_TYPE_UNSPECIFIED: Unspecified.
       - CONNECTOR_TYPE_SOURCE: Source connector.
       - CONNECTOR_TYPE_DESTINATION: Destination connector.
       - CONNECTOR_TYPE_AI: AI connector.
       - CONNECTOR_TYPE_BLOCKCHAIN: Blockchain connector.
       - CONNECTOR_TYPE_DATA: Data connector.
       - CONNECTOR_TYPE_OPERATOR: Operator connector.
  v1betaConnectorUsageData:
    type: object
    properties:
      usages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaConnectorUsageDataUserUsageData'
        title: Usage data of all users in the connector service
    title: Connector service usage data
  v1betaConnectorUsageDataUserUsageData:
    type: object
    properties:
      owner_uid:
        type: string
        title: Owner UUID
      connector_execute_data:
        type: array
        items:
          type: object
          $ref: '#/definitions/UserUsageDataConnectorExecuteData'
        title: Execution data for each user
      owner_type:
        $ref: '#/definitions/v1betaOwnerType'
        title: Owner type
    title: Per user usage data in the connector service
    required:
      - owner_uid
      - connector_execute_data
      - owner_type
  v1betaConnectorView:
    type: string
    enum:
      - VIEW_BASIC
      - VIEW_FULL
      - VIEW_CONFIGURATION
    description: |-
      View defines how a connector is presented.

       - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
       - VIEW_BASIC: Default view, only includes basic information.
       - VIEW_FULL: Full representation.
       - VIEW_CONFIGURATION: Contains the connector configuration.
  v1betaConnectorVisibility:
    type: string
    enum:
      - VISIBILITY_PRIVATE
      - VISIBILITY_PUBLIC
    description: |-
      Visibility defines who can access the connector.

       - VISIBILITY_UNSPECIFIED: Unspecified, equivalent to PRIVATE.
       - VISIBILITY_PRIVATE: Only the user can see the connector.
       - VISIBILITY_PUBLIC: Other users can see the connector.
  v1betaCreateOrganizationConnectorResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        title: connector
    title: |-
      CreateOrganizationConnectorResponse represents a response for a
      connector
  v1betaCreateOrganizationPipelineReleaseResponse:
    type: object
    properties:
      release:
        $ref: '#/definitions/v1betaPipelineRelease'
        title: The created pipeline_release resource
    title: CreateOrganizationPipelineReleaseResponse represents a response for a pipeline_release resource
  v1betaCreateOrganizationPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1betaPipeline'
        title: The created pipeline resource
    title: CreateOrganizationPipelineResponse represents a response for a pipeline resource
  v1betaCreateOrganizationResponse:
    type: object
    properties:
      organization:
        $ref: '#/definitions/v1betaOrganization'
        title: A organization resource
    title: CreateOrganizationResponse represents a response for a organization response
  v1betaCreateSessionResponse:
    type: object
    properties:
      session:
        $ref: '#/definitions/v1betaSession'
        title: A session resource
    title: CreateSessionResponse represents a response for a session response
  v1betaCreateTokenResponse:
    type: object
    properties:
      token:
        $ref: '#/definitions/v1betaApiToken'
        title: The created API token resource
    title: CreateTokenResponse represents a response for a API token resource
  v1betaCreateUserConnectorResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        title: connector
    title: |-
      CreateUserConnectorResponse represents a response for a
      connector
  v1betaCreateUserPipelineReleaseResponse:
    type: object
    properties:
      release:
        $ref: '#/definitions/v1betaPipelineRelease'
        title: The created pipeline_release resource
    title: CreateUserPipelineReleaseResponse represents a response for a pipeline_release resource
  v1betaCreateUserPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1betaPipeline'
        title: The created pipeline resource
    title: CreateUserPipelineResponse represents a response for a pipeline resource
  v1betaDeleteOrganizationConnectorResponse:
    type: object
    title: DeleteOrganizationConnectorResponse represents an empty response
  v1betaDeleteOrganizationMembershipResponse:
    type: object
    title: DeleteOrganizationMembershipResponse represents an empty response
  v1betaDeleteOrganizationPipelineReleaseResponse:
    type: object
    title: DeleteOrganizationPipelineReleaseResponse represents an empty response
  v1betaDeleteOrganizationPipelineResponse:
    type: object
    title: DeleteOrganizationPipelineResponse represents an empty response
  v1betaDeleteOrganizationResponse:
    type: object
    title: DeleteOrganizationResponse represents an empty response
  v1betaDeleteTokenResponse:
    type: object
    title: DeleteTokenResponse represents an empty response
  v1betaDeleteUserConnectorResponse:
    type: object
    title: DeleteUserConnectorResponse represents an empty response
  v1betaDeleteUserMembershipResponse:
    type: object
    title: DeleteUserMembershipResponse represents an empty response
  v1betaDeleteUserPipelineReleaseResponse:
    type: object
    title: DeleteUserPipelineReleaseResponse represents an empty response
  v1betaDeleteUserPipelineResponse:
    type: object
    title: DeleteUserPipelineResponse represents an empty response
  v1betaDisconnectOrganizationConnectorResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        title: A connector
    title: |-
      DisconnectOrganizationConnectorResponse represents a disconnected
      connector
  v1betaDisconnectUserConnectorResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        title: A connector
    title: |-
      DisconnectUserConnectorResponse represents a disconnected
      connector
  v1betaExecuteOrganizationConnectorResponse:
    type: object
    properties:
      outputs:
        type: array
        items:
          type: object
        title: Outputs
    title: |-
      ExecuteOrganizationConnectorResponse represents a response for execution
      output
  v1betaExecuteUserConnectorResponse:
    type: object
    properties:
      outputs:
        type: array
        items:
          type: object
        title: Outputs
    title: |-
      ExecuteUserConnectorResponse represents a response for execution
      output
  v1betaGetBulkCumulativeModelOnlineRecordsResponse:
    type: object
    properties:
      bulk_cumulative_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaGetCumulativeModelOnlineRecordsResponse'
        title: A list of cumulative model online record lists
    title: |-
      GetBulkCumulativeModelOnlineRecordsResponse represents a response to
      GetBulkCumulativeModelOnlineRecordsRequest
    required:
      - bulk_cumulative_records
  v1betaGetBulkCumulativePipelineTriggerRecordsResponse:
    type: object
    properties:
      bulk_cumulative_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaGetCumulativePipelineTriggerRecordsResponse'
        title: A list of cumulative pipeline trigger record lists
    title: |-
      GetBulkCumulativePipelineTriggerRecordsResponse represents a response to
      GetBulkCumulativePipelineTriggerRecordsRequest
    required:
      - bulk_cumulative_records
  v1betaGetBulkModelOnlinePriceResponse:
    type: object
    properties:
      bulk_prices:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaGetModelOnlinePriceResponse'
        title: A list of model online price lists
    title: |-
      GetBulkModelOnlinePriceResponse represents a response to
      GetBulkModelOnlinePriceRequest
    required:
      - bulk_prices
  v1betaGetBulkModelOnlineRecordsResponse:
    type: object
    properties:
      bulk_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaGetModelOnlineRecordsResponse'
        title: A list of model online record lists
    title: |-
      GetBulkModelOnlineRecordsResponse represents a response to
      GetBulkModelOnlineRecordsRequest
    required:
      - bulk_records
  v1betaGetBulkModelOnlineSummaryResponse:
    type: object
    properties:
      bulk_summaries:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaGetModelOnlineSummaryResponse'
        title: A list of model online usage summaries
    title: |-
      GetBulkModelOnlineSummaryResponse represents a response to
      GetBulkModelOnlineSummaryRequest
    required:
      - bulk_summaries
  v1betaGetBulkPipelineTriggerPriceResponse:
    type: object
    properties:
      bulk_prices:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaGetPipelineTriggerPriceResponse'
        title: A list of pipeline trigger price lists
    title: |-
      GetBulkPipelineTriggerPriceResponse represents a response to
      GetBulkPipelineTriggerPriceRequest
    required:
      - bulk_prices
  v1betaGetBulkPipelineTriggerRecordsResponse:
    type: object
    properties:
      bulk_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaGetPipelineTriggerRecordsResponse'
        title: A list of pipeline trigger record lists
    title: |-
      GetBulkPipelineTriggerRecordsResponse represents a response to
      GetBulkPipelineTriggerRecordsRequest
    required:
      - bulk_records
  v1betaGetBulkPipelineTriggerSummariesResponse:
    type: object
    properties:
      bulk_summaries:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaGetPipelineTriggerSummaryResponse'
        title: A list of pipeline trigger usage summaries
    title: |-
      GetBulkPipelineTriggerSummariesResponse represents a response to
      GetBulkPipelineTriggerSummariesRequest
    required:
      - bulk_summaries
  v1betaGetConnectorDefinitionResponse:
    type: object
    properties:
      connector_definition:
        $ref: '#/definitions/v1betaConnectorDefinition'
        title: A ConnectorDefinition resource
    title: |-
      GetConnectorDefinitionResponse represents a
      ConnectorDefinition response
  v1betaGetCumulativeModelOnlineRecordsRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      model:
        $ref: '#/definitions/v1betaModelData'
        title: Model information
      time_interval:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time interval
    title: |-
      GetCumulativeModelOnlineRecordsRequest represents a query for cumulative
      model online records
    required:
      - user
      - model
      - time_interval
  v1betaGetCumulativeModelOnlineRecordsResponse:
    type: object
    properties:
      cumulative_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaModelUsageRecord'
        title: A list of model online records in cumulative format
    title: |-
      GetCumulativeModelOnlineRecordsResponse represents a response to
      GetCumulativeModelOnlineRecordsRequest
    required:
      - cumulative_records
  v1betaGetCumulativePipelineTriggerRecordsRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      pipeline:
        $ref: '#/definitions/v1betaPipelineData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time interval
    title: |-
      GetCumulativePipelineTriggerRecordsRequest represents a query for cumulative
      pipeline trigger records
    required:
      - user
      - pipeline
  v1betaGetCumulativePipelineTriggerRecordsResponse:
    type: object
    properties:
      cumulative_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipelineUsageRecord'
        title: Pipeline trigger records where values are in cumulative formats
    title: |-
      GetCumulativePipelineTriggerRecordsResponse represents a response to
      GetCumulativePipelineTriggerRecordsRequest
    required:
      - cumulative_records
  v1betaGetModelOnlinePriceRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      model:
        $ref: '#/definitions/v1betaModelData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time interval
    title: |-
      GetPipelineTriggerPriceRequest represents a query for price data of the
      billing periods covered by the time interval
    required:
      - user
      - model
      - time_interval
  v1betaGetModelOnlinePriceResponse:
    type: object
    properties:
      price:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPriceData'
        title: |-
          A list of model online prices given the billing periods covered by the time
          interval
    title: |-
      GetModelOnlinePriceResponse represents a response to
      GetModelOnlinePriceRequest
    required:
      - price
  v1betaGetModelOnlineRecordsRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      model:
        $ref: '#/definitions/v1betaModelData'
        title: Model information
      time_interval:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time interval
    title: GetModelOnlineRecordsRequest represent a query for model online records
    required:
      - user
      - model
      - time_interval
  v1betaGetModelOnlineRecordsResponse:
    type: object
    properties:
      records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaModelUsageRecord'
        title: A list of model trigger records
    title: |-
      GetModelOnlineRecordsResponse represents a response to
      GetModelOnlineRecordsRequest
    required:
      - records
  v1betaGetModelOnlineSummaryRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      model:
        $ref: '#/definitions/v1betaModelData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time interval
    title: GetModelOnlineSummaryRequest represents a query for model online summary
    required:
      - user
      - model
      - time_interval
  v1betaGetModelOnlineSummaryResponse:
    type: object
    properties:
      summary:
        $ref: '#/definitions/v1betaUsageSummary'
        title: The total model online usage in the time interval
    title: |-
      GetModelOnlineSummaryResponse represents a response to
      GetModelOnlineSummaryRequest
    required:
      - summary
  v1betaGetModelsResponse:
    type: object
    properties:
      models:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaModelData'
        title: A list of model informations
    title: GetPipelinesResponse represents a respond to GetModelsRequest
    required:
      - models
  v1betaGetOperationResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: The retrieved longrunning operation
        readOnly: true
    title: |-
      GetOperationResponse represents a response for a longrunning
      operation
  v1betaGetOperatorDefinitionResponse:
    type: object
    properties:
      operator_definition:
        $ref: '#/definitions/v1betaOperatorDefinition'
        title: A Operator resource
    title: |-
      GetOperatorDefinitionResponse represents a
      Operator response
  v1betaGetOrganizationAdminResponse:
    type: object
    properties:
      organization:
        $ref: '#/definitions/v1betaOrganization'
        title: A organization resource
    title: GetOrganizationAdminResponse represents a response for a organization resource
  v1betaGetOrganizationConnectorResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        title: connector
    title: |-
      GetOrganizationConnectorResponse represents a response for a
      connector
  v1betaGetOrganizationMembershipResponse:
    type: object
    properties:
      membership:
        $ref: '#/definitions/v1betaOrganizationMembership'
        title: A membership resource
    title: GetOrganizationMembershipResponse represents a response for a membership resource
  v1betaGetOrganizationPipelineReleaseResponse:
    type: object
    properties:
      release:
        $ref: '#/definitions/v1betaPipelineRelease'
        title: A pipeline_release resource
    title: GetOrganizationPipelineReleaseResponse represents a response for a pipeline_release resource
  v1betaGetOrganizationPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1betaPipeline'
        title: A pipeline resource
    title: GetOrganizationPipelineResponse represents a response for a pipeline resource
  v1betaGetOrganizationResponse:
    type: object
    properties:
      organization:
        $ref: '#/definitions/v1betaOrganization'
        title: A organization resource
    title: GetOrganizationResponse represents a response for a organization resource
  v1betaGetOrganizationSubscriptionAdminResponse:
    type: object
    properties:
      subscription:
        $ref: '#/definitions/v1betaSubscription'
        title: Subscription
    title: GetOrganizationSubscriptionAdminResponse
  v1betaGetOrganizationSubscriptionResponse:
    type: object
    properties:
      subscription:
        $ref: '#/definitions/v1betaSubscription'
        title: Subscription
    title: GetOrganizationSubscriptionResponse
  v1betaGetPipelineTriggerPriceRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      pipeline:
        $ref: '#/definitions/v1betaPipelineData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time interval
    title: |-
      GetPipelineTriggerPriceRequest represents a query for pipeline trigger prices
      given the billing periods covered by the time interval
    required:
      - user
      - pipeline
      - time_interval
  v1betaGetPipelineTriggerPriceResponse:
    type: object
    properties:
      price:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPriceData'
        title: |-
          A list of pipeline trigger prices given the billing periods covered by the
          time interval
    title: |-
      GetPipelineTriggerPriceResponse represents a response to
      GetPipelineTriggerPriceRequest
    required:
      - price
  v1betaGetPipelineTriggerRecordsRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      pipeline:
        $ref: '#/definitions/v1betaPipelineData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time interval
    title: |-
      GetPipelineTriggerRecordsRequest represents a query for pipeline trigger
      records
    required:
      - user
      - pipeline
  v1betaGetPipelineTriggerRecordsResponse:
    type: object
    properties:
      records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipelineUsageRecord'
        title: A list of pipeline trigger records
    title: |-
      GetPipelineTriggerRecordsResponse represents a response to
      GetPipelineTriggerRecordsRequest
    required:
      - records
  v1betaGetPipelineTriggerSummaryRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      pipeline:
        $ref: '#/definitions/v1betaPipelineData'
        title: Pipeline information
      time_interval:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time interval
    title: |-
      GetPipelineTriggerSummaryRequest represents a query for pipeline trigger
      summary
    required:
      - user
      - pipeline
  v1betaGetPipelineTriggerSummaryResponse:
    type: object
    properties:
      summaries:
        $ref: '#/definitions/v1betaUsageSummary'
        title: The total pipeline trigger usage in the time interval
    title: |-
      GetPipelineTriggerSummaryResponse represents a response to
      GetPipelineTriggerSummaryRequest
    required:
      - summaries
  v1betaGetPipelinesResponse:
    type: object
    properties:
      pipelines:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipelineData'
        title: A list of pipeline informations
    title: GetPipelinesResponse represents a respond to GetPipelineRequest
    required:
      - pipelines
  v1betaGetTokenResponse:
    type: object
    properties:
      token:
        $ref: '#/definitions/v1betaApiToken'
        title: An API token resource
    title: GetTokenResponse represents a response for an API token resource
  v1betaGetUserAdminResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/mgmtv1betaUser'
        title: A user resource
    title: GetUserAdminResponse represents a response for a user resource
  v1betaGetUserConnectorResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        title: connector
    title: |-
      GetUserConnectorResponse represents a response for a
      connector
  v1betaGetUserMembershipResponse:
    type: object
    properties:
      membership:
        $ref: '#/definitions/v1betaUserMembership'
        title: A membership resource
    title: GetUserMembershipResponse represents a response for a membership resource
  v1betaGetUserPipelineReleaseResponse:
    type: object
    properties:
      release:
        $ref: '#/definitions/v1betaPipelineRelease'
        title: A pipeline_release resource
    title: GetUserPipelineReleaseResponse represents a response for a pipeline_release resource
  v1betaGetUserPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1betaPipeline'
        title: A pipeline resource
    title: GetUserPipelineResponse represents a response for a pipeline resource
  v1betaGetUserResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/mgmtv1betaUser'
        title: A user resource
    title: GetUserResponse represents a response for a user resource
  v1betaGetUserSubscriptionAdminResponse:
    type: object
    properties:
      subscription:
        $ref: '#/definitions/v1betaSubscription'
        title: Subscription
    title: GetUserSubscriptionAdminResponse
  v1betaGetUserSubscriptionResponse:
    type: object
    properties:
      subscription:
        $ref: '#/definitions/v1betaSubscription'
        title: Subscription
    title: GetUserSubscriptionResponse
  v1betaHealthCheckRequest:
    type: object
    properties:
      service:
        type: string
        title: Service name to check for its readiness status
    title: HealthCheckRequest represents a request to health check a service
  v1betaHealthCheckResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/HealthCheckResponseServingStatus'
        title: Status is the instance of the enum type ServingStatus
    title: HealthCheckResponse represents a response for a service heath status
  v1betaListConnectorDefinitionsResponse:
    type: object
    properties:
      connector_definitions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaConnectorDefinition'
        title: A list of ConnectorDefinition resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of ConnectorDefinition resources
    title: |-
      ListConnectorDefinitionsResponse represents a response for a list
      of ConnectorDefinitions
  v1betaListConnectorExecuteChartRecordsResponse:
    type: object
    properties:
      connector_execute_chart_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaConnectorExecuteChartRecord'
        title: A list of connector execute records
    title: |-
      ListConnectorExecuteChartRecordsResponse represents a response for a list
      of connector execute chart record
  v1betaListConnectorExecuteRecordsResponse:
    type: object
    properties:
      connector_execute_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaConnectorExecuteRecord'
        title: A list of connector execute records
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of connector execute records
    title: |-
      ListConnectorExecuteRecordsResponse represents a response for a list
      of connector execute record
  v1betaListConnectorExecuteTableRecordsResponse:
    type: object
    properties:
      connector_execute_table_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaConnectorExecuteTableRecord'
        title: A list of connector execute records
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of connector execute records
    title: |-
      ListConnectorExecuteTableRecordsResponse represents a response for a list
      of connector execute table record
  v1betaListConnectorsAdminResponse:
    type: object
    properties:
      connectors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaConnector'
        description: A list of connectors.
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        description: Total number of connectors.
    description: |-
      ListConnectorsAdminResponse contains a list of connectors requested by an
      admin.
  v1betaListConnectorsResponse:
    type: object
    properties:
      connectors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaConnector'
        title: A list of connectors
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of connectors
    title: |-
      ListConnectorsResponse represents a response for a list of
      connectors
  v1betaListOperatorDefinitionsResponse:
    type: object
    properties:
      operator_definitions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaOperatorDefinition'
        title: A list of Operator resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of Operator resources
    title: |-
      ListOperatorDefinitionsResponse represents a response for a list
      of OperatorDefinitions
  v1betaListOrganizationConnectorsResponse:
    type: object
    properties:
      connectors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaConnector'
        title: A list of connectors
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of connectors
    title: |-
      ListOrganizationConnectorsResponse represents a response for a list of
      connectors
  v1betaListOrganizationMembershipsResponse:
    type: object
    properties:
      memberships:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaOrganizationMembership'
        title: A list of memberships
    title: ListOrganizationMembershipsResponse represents a response for a list of memberships
  v1betaListOrganizationPipelineReleasesResponse:
    type: object
    properties:
      releases:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipelineRelease'
        title: A list of pipeline_release resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of pipeline_release resources
    title: ListOrganizationPipelineReleasesResponse represents a response for a list of pipeline_releases
  v1betaListOrganizationPipelinesResponse:
    type: object
    properties:
      pipelines:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipeline'
        title: A list of pipeline resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of pipeline resources
    title: ListOrganizationPipelinesResponse represents a response for a list of pipelines
  v1betaListOrganizationsAdminResponse:
    type: object
    properties:
      organizations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaOrganization'
        title: A list of organizations
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of organizations
    title: ListOrganizationsAdminResponse represents a response for a list of organizations
  v1betaListOrganizationsResponse:
    type: object
    properties:
      organizations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaOrganization'
        title: A list of organizations
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of organizations
    title: ListOrganizationsResponse represents a response for a list of organizations
  v1betaListPipelineReleasesAdminResponse:
    type: object
    properties:
      releases:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipelineRelease'
        description: A list of pipeline releases.
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        description: Total number of pipeline releases.
    description: |-
      ListPipelineReleasesAdminResponse contains a list of pipeline releases
      requested by an admin user.
      For the moment, the pipeline recipes will be UID-based (permalink) instead
      of name-based. This is a temporary solution.
  v1betaListPipelineTriggerChartRecordsResponse:
    type: object
    properties:
      pipeline_trigger_chart_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipelineTriggerChartRecord'
        title: A list of pipeline trigger records
    title: |-
      ListPipelineTriggerChartRecordsResponse represents a response for a list
      of pipeline trigger chart record
  v1betaListPipelineTriggerRecordsResponse:
    type: object
    properties:
      pipeline_trigger_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipelineTriggerRecord'
        title: A list of pipeline trigger records
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of pipeline trigger records
    title: |-
      ListPipelineTriggerRecordsResponse represents a response for a list
      of pipeline trigger record
  v1betaListPipelineTriggerTableRecordsResponse:
    type: object
    properties:
      pipeline_trigger_table_records:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipelineTriggerTableRecord'
        title: A list of pipeline trigger table records
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of pipeline trigger records
    title: |-
      ListPipelineTriggerTableRecordsResponse represents a response for a list
      of pipeline trigger table record
  v1betaListPipelinesAdminResponse:
    type: object
    properties:
      pipelines:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipeline'
        description: A list of pipeline resources.
      next_page_token:
        type: string
        description: Next page token.
      total_size:
        type: integer
        format: int32
        description: Total number of pipelines.
    description: |-
      ListPipelinesAdminResponse contains a list of pipelines requested by an
      admin user.
      For the moment, the pipeline recipes will be UID-based (permalink) instead
      of name-based. This is a temporary solution.
  v1betaListPipelinesResponse:
    type: object
    properties:
      pipelines:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipeline'
        title: A list of pipeline resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of pipeline resources
    title: ListPipelinesResponse represents a response for a list of pipelines
  v1betaListTokensResponse:
    type: object
    properties:
      tokens:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaApiToken'
        title: A list of API tokens resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of API tokens resources
    title: ListTokensResponse represents a response for a list of API tokens
  v1betaListUserConnectorsResponse:
    type: object
    properties:
      connectors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaConnector'
        title: A list of connectors
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of connectors
    title: |-
      ListUserConnectorsResponse represents a response for a list of
      connectors
  v1betaListUserMembershipsResponse:
    type: object
    properties:
      memberships:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaUserMembership'
        title: A list of memberships
    title: ListUserMembershipsResponse represents a response for a list of memberships
  v1betaListUserPipelineReleasesResponse:
    type: object
    properties:
      releases:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipelineRelease'
        title: A list of pipeline_release resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of pipeline_release resources
    title: ListUserPipelineReleasesResponse represents a response for a list of pipeline_releases
  v1betaListUserPipelinesResponse:
    type: object
    properties:
      pipelines:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipeline'
        title: A list of pipeline resources
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of pipeline resources
    title: ListUserPipelinesResponse represents a response for a list of pipelines
  v1betaListUsersAdminResponse:
    type: object
    properties:
      users:
        type: array
        items:
          type: object
          $ref: '#/definitions/mgmtv1betaUser'
        title: A list of users
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of users
    title: ListUsersAdminResponse represents a response for a list of users
  v1betaListUsersResponse:
    type: object
    properties:
      users:
        type: array
        items:
          type: object
          $ref: '#/definitions/mgmtv1betaUser'
        title: A list of users
      next_page_token:
        type: string
        title: Next page token
      total_size:
        type: integer
        format: int32
        title: Total count of users
    title: ListUsersResponse represents a response for a list of users
  v1betaLookUpConnectorAdminResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        title: connector
    title: |-
      LookUpConnectorAdminResponse represents a response for a
      connector
  v1betaLookUpConnectorDefinitionAdminResponse:
    type: object
    properties:
      connector_definition:
        $ref: '#/definitions/v1betaConnectorDefinition'
        description: The requested connector.
    description: |-
      LookUpConnectorDefinitionAdminResponse represents a response for a
      connector definition.
  v1betaLookUpConnectorResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        description: The requested connector.
    description: LookUpConnectorResponse represents a response for a connector.
  v1betaLookUpOperatorDefinitionAdminResponse:
    type: object
    properties:
      operator_definition:
        $ref: '#/definitions/v1betaOperatorDefinition'
        description: The requested operator definition.
    description: |-
      LookUpOperatorDefinitionAdminResponse represents a response for an operator
      definition.
  v1betaLookUpOrganizationAdminResponse:
    type: object
    properties:
      organization:
        $ref: '#/definitions/v1betaOrganization'
        title: A organization resource
    title: LookUpOrganizationAdminResponse represents a response for a organization resource by admin
  v1betaLookUpPipelineAdminResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1betaPipeline'
        description: The requested pipeline.
    description: LookUpPipelineAdminResponse represents a response for a pipeline resource.
  v1betaLookUpPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1betaPipeline'
        title: A pipeline resource
    title: LookUpPipelineResponse represents a response for a pipeline resource
  v1betaLookUpUserAdminResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/mgmtv1betaUser'
        title: A user resource
    title: LookUpUserAdminResponse represents a response for a user resource by admin
  v1betaMembershipState:
    type: string
    enum:
      - MEMBERSHIP_STATE_ACTIVE
      - MEMBERSHIP_STATE_PENDING
    description: |-
      - MEMBERSHIP_STATE_UNSPECIFIED: UNSPECIFIED
       - MEMBERSHIP_STATE_ACTIVE: Active
       - MEMBERSHIP_STATE_PENDING: Pending
    title: MembershipState
  v1betaMgmtUsageData:
    type: object
    properties:
      usages:
        type: array
        items:
          type: object
          $ref: '#/definitions/mgmtv1betaUser'
        title: Repeated user usage data
    title: Management service usage data
  v1betaMode:
    type: string
    enum:
      - MODE_SYNC
      - MODE_ASYNC
    description: |-
      - MODE_UNSPECIFIED: Mode: UNSPECIFIED
       - MODE_SYNC: Mode: SYNC
       - MODE_ASYNC: Mode: ASYNC
    title: Mode enumerates the pipeline modes
  v1betaModelData:
    type: object
    properties:
      uid:
        type: string
        title: Model unique id that is auto generated
      id:
        type: string
        title: Model id that is given by the users
      instance_id:
        type: string
        title: The id of the model instance that is deployed
      task:
        type: string
        title: The AI task supported by this model
    title: Pipeline records definition
    required:
      - uid
      - id
      - instance_id
      - task
  v1betaModelUsageData:
    type: object
    properties:
      usages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaModelUsageDataUserUsageData'
        title: Usage data of all users in the model service
    title: Model service usage data
  v1betaModelUsageDataUserUsageData:
    type: object
    properties:
      owner_uid:
        type: string
        title: Owner UUID
      model_trigger_data:
        type: array
        items:
          type: object
          $ref: '#/definitions/UserUsageDataModelTriggerData'
        title: Trigger data for each user
      owner_type:
        $ref: '#/definitions/v1betaOwnerType'
        title: Owner type
    title: Per user usage data in the model service
    required:
      - owner_uid
      - model_trigger_data
      - owner_type
  v1betaModelUsageRecord:
    type: object
    properties:
      deploy_time:
        type: string
        format: date-time
        title: Time when the model is ONLINE
      record_time:
        type: string
        format: date-time
        title: Time when model online usage is recorded
      value:
        type: integer
        format: int32
        title: |-
          The model online usage record that is logged in cumulative manner. This
          value records the cumulative usage since model is online in the current
          billing period
    title: Model online usage record definition
    required:
      - deploy_time
      - record_time
      - value
  v1betaNullMessage:
    type: object
    title: Nul Message for gRPC REQ/RES
  v1betaOperatorDefinition:
    type: object
    properties:
      name:
        type: string
        title: |-
          The name of the operator definition.
          - Format: `operator-definitions/*`
        readOnly: true
      uid:
        type: string
        description: Operator definition UUID.
        readOnly: true
      id:
        type: string
        description: |-
          Operator definition resource ID (used in the name as the last segment).
          This conforms to RFC-1034, which restricts to letters, numbers, and
          hyphen, with the first character a letter, the last a letter or a number,
          and a 63 character maximum.
      title:
        type: string
        description: Operator definition title.
        readOnly: true
      documentation_url:
        type: string
        description: Operator definition documentation URL.
        readOnly: true
      icon:
        type: string
        description: Operator definition icon.
        readOnly: true
      spec:
        $ref: '#/definitions/v1betaOperatorSpec'
        description: Operator definition specification.
        readOnly: true
      tombstone:
        type: boolean
        description: |-
          Operator definition tombstone. If true, this configuration is permanently
          off. Otherwise, the configuration is active.
        readOnly: true
      public:
        type: boolean
        description: |-
          The public flag determines whether this operator definition is available
          to all workspaces.
        readOnly: true
      custom:
        type: boolean
        description: The custom flag determines whether this is a custom operator definition.
        readOnly: true
      icon_url:
        type: string
        description: Operator definition icon URL.
        readOnly: true
    description: |-
      An Operator is a type of pipeline component that performs data injection and
      manipulation. OperatorDefinition describes a certain type of operator.

      For more information, see
      [Component](https://www.instill.tech/docs/latest/core/concepts/pipeline#pipeline-component)
      in the official documentation.
  v1betaOperatorDefinitionView:
    type: string
    enum:
      - VIEW_BASIC
      - VIEW_FULL
    description: |-
      View defines how an operator definition is presented.

       - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
       - VIEW_BASIC: Default view, only includes basic information.
       - VIEW_FULL: Full representation.
  v1betaOperatorSpec:
    type: object
    properties:
      component_specification:
        type: object
        title: Spec operator specification
      openapi_specifications:
        type: object
        title: Spec openapi specification
    title: View enumerates the definition views
    required:
      - component_specification
      - openapi_specifications
  v1betaOrganization:
    type: object
    properties:
      name:
        type: string
        description: |-
          Resource name. It must have the format of "organizations/*".
          For example: "organizations/local-organization".
        readOnly: true
      uid:
        type: string
        description: Organization ID in UUIDv4.
        readOnly: true
      id:
        type: string
        description: |-
          Resource ID (the last segment of the resource name), also the organization
          name. This conforms to RFC-1034, which restricts to letters, numbers,
          and hyphen, with the first character a letter, the last a letter or a
          number, and a 63 character maximum.
          Note that the ID can be updated.
      create_time:
        type: string
        format: date-time
        title: 'Owner type: fixed to `OWNER_TYPE_USER`'
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: Organization update time
        readOnly: true
      org_name:
        type: string
        title: Organization company or institution name
      customer_id:
        type: string
        description: Stripe customer ID. This field is used in Instill Cloud.
        readOnly: true
      profile_avatar:
        type: string
        title: Profile Avatar base64
      profile_data:
        type: object
        title: Profile Data
      owner:
        $ref: '#/definitions/mgmtv1betaUser'
        title: Owner
        readOnly: true
    title: Organization represents the content of a organization
    required:
      - id
  v1betaOrganizationMembership:
    type: object
    properties:
      name:
        type: string
        title: Resource name. It must have the format of "organizations/*/memberships/*"
        readOnly: true
      role:
        type: string
        title: Role
      state:
        $ref: '#/definitions/v1betaMembershipState'
        title: State
        readOnly: true
      user:
        $ref: '#/definitions/mgmtv1betaUser'
        title: User
        readOnly: true
      organization:
        $ref: '#/definitions/v1betaOrganization'
        title: Organization
        readOnly: true
    title: Membership represents the content of a membership
    required:
      - role
  v1betaOwnerType:
    type: string
    enum:
      - OWNER_TYPE_USER
      - OWNER_TYPE_ORGANIZATION
    description: |-
      - OWNER_TYPE_UNSPECIFIED: OwnerType: UNSPECIFIED
       - OWNER_TYPE_USER: OwnerType: USER
       - OWNER_TYPE_ORGANIZATION: OwnerType: ORGANIZATION
    title: OwnerType enumerates the owner type of any resource
  v1betaPatchAuthenticatedUserResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/mgmtv1betaUser'
        title: A user resource
    title: |-
      PatchAuthenticatedUserResponse represents a response for
      the authenticated user resource
  v1betaPermission:
    type: object
    properties:
      can_edit:
        type: boolean
        title: can_edit
      can_trigger:
        type: boolean
        title: can_trigger
    title: Permission
  v1betaPipeline:
    type: object
    properties:
      name:
        type: string
        description: |-
          The name of the pipeline, defined by its owner and ID.
          - Format: `users/{user}/pipelines/{id}`.
        readOnly: true
      uid:
        type: string
        description: Pipeline UUID.
        readOnly: true
      id:
        type: string
        description: |-
          Pipeline resource ID (used in the name as the last segment). This conforms
          to RFC-1034, which restricts to letters, numbers, and hyphen, with the
          first character a letter, the last a letter or a number, and a 63
          character maximum.
      description:
        type: string
        description: Pipeline description.
      recipe:
        $ref: '#/definitions/v1betaRecipe'
        description: Recipe describes the components of a Pipeline and how they are connected.
      create_time:
        type: string
        format: date-time
        description: Pipeline creation time.
        readOnly: true
      update_time:
        type: string
        format: date-time
        description: Pipeline update time.
        readOnly: true
      openapi_schema:
        type: object
        description: OpenAPI schema.
        readOnly: true
      delete_time:
        type: string
        format: date-time
        description: Pipeline delete time.
        readOnly: true
      sharing:
        $ref: '#/definitions/v1betaSharing'
        description: Pipeline sharing.
      metadata:
        type: object
        description: 'Metadata: store Console-related data such as pipeline builder layout.'
      owner_name:
        type: string
        description: Owner Name.
        readOnly: true
      owner:
        type: object
        description: Owner details.
        readOnly: true
      releases:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipelineRelease'
        description: Releases.
        readOnly: true
      readme:
        type: string
        description: README.
      permission:
        $ref: '#/definitions/v1betaPermission'
        description: Permission.
        readOnly: true
    description: |-
      A Pipeline is an end-to-end workflow that automates a sequence of components
      to process data.

      For more information, see
      [Pipeline](https://www.instill.tech/docs/latest/core/concepts/pipeline) in
      the official documentation.
  v1betaPipelineData:
    type: object
    properties:
      uid:
        type: string
        title: Pipeline unique id that is auto generated
      id:
        type: string
        title: Pipeline id assigned by users
      task:
        type: string
        title: Pipeline task indicate the AI task this pipeline supports
    title: Pipeline records definition
    required:
      - uid
      - id
      - task
  v1betaPipelineRelease:
    type: object
    properties:
      name:
        type: string
        title: |-
          The name of the release, defined by its owner and ID.
          - Format: `users/{user}/pipelines/{pipeline_id}/releases/{release_id}
        readOnly: true
      uid:
        type: string
        description: Release UUID.
        readOnly: true
      id:
        type: string
        description: |-
          Release resource ID (used in the name as the last segment). It must be a
          sematic version vX.Y.Z.
      description:
        type: string
        description: Release description.
      recipe:
        $ref: '#/definitions/v1betaRecipe'
        description: Recipe of the versioned pipeline.
        readOnly: true
      create_time:
        type: string
        format: date-time
        description: Pipeline creation time.
        readOnly: true
      update_time:
        type: string
        format: date-time
        description: Pipeline update time.
        readOnly: true
      openapi_schema:
        type: object
        description: OpenAPI schema.
        readOnly: true
      delete_time:
        type: string
        format: date-time
        description: Pipeline deletion time.
        readOnly: true
      alias:
        type: string
        description: Alias.
        readOnly: true
      metadata:
        type: object
        description: |-
          Key-value object with console-related data such as the pipeline builder
          layout.
      readme:
        type: string
        description: README.
    description: |-
      Pipeline releases contain the version control information of a pipeline.
      This allows users to track changes in the pipeline over time.
  v1betaPipelineTriggerChartRecord:
    type: object
    properties:
      pipeline_id:
        type: string
        title: ID for the triggered pipeline
      pipeline_uid:
        type: string
        title: UID for the triggered pipeline
      trigger_mode:
        $ref: '#/definitions/v1betaMode'
        title: Trigger mode
      status:
        $ref: '#/definitions/mgmtv1betaStatus'
        title: Status of pipeline trigger
        readOnly: true
      time_buckets:
        type: array
        items:
          type: string
          format: date-time
        title: Time buckets
        readOnly: true
      trigger_counts:
        type: array
        items:
          type: integer
          format: int32
        title: Aggregated trigger count in each time bucket
        readOnly: true
      compute_time_duration:
        type: array
        items:
          type: number
          format: float
        title: Total compute time duration in each time bucket
        readOnly: true
      pipeline_release_id:
        type: string
        title: Version for the triggered pipeline if it is a release pipeline, else emtpy
        readOnly: true
      pipeline_release_uid:
        type: string
        title: UID for the triggered pipeline if it is a release pipeline, else emtpy
        readOnly: true
    title: |-
      PipelineTriggerChartRecord represents a aggregated chart record for pipeline
      trigger
  v1betaPipelineTriggerRecord:
    type: object
    properties:
      trigger_time:
        type: string
        format: date-time
        title: Timestamp for the pipeline trigger time
      pipeline_trigger_id:
        type: string
        title: UID for each pipeline trigger
      pipeline_id:
        type: string
        title: ID for the triggered pipeline
      pipeline_uid:
        type: string
        title: UID for the triggered pipeline
      trigger_mode:
        $ref: '#/definitions/v1betaMode'
        title: Trigger mode
      compute_time_duration:
        type: number
        format: float
        title: Total compute time duration for this pipeline trigger
        readOnly: true
      status:
        $ref: '#/definitions/mgmtv1betaStatus'
        title: Final status for pipeline trigger
        readOnly: true
      pipeline_release_id:
        type: string
        title: Version for the triggered pipeline if it is a release pipeline, else emtpy
        readOnly: true
      pipeline_release_uid:
        type: string
        title: UID for the triggered pipeline if it is a release pipeline, else emtpy
        readOnly: true
    title: PipelineTriggerRecord represents a record for pipeline trigger
  v1betaPipelineTriggerTableRecord:
    type: object
    properties:
      pipeline_id:
        type: string
        title: ID for the triggered pipeline
      pipeline_uid:
        type: string
        title: UID for the triggered pipeline
      trigger_count_completed:
        type: integer
        format: int32
        title: Trigger count with STATUS_COMPLETED
        readOnly: true
      trigger_count_errored:
        type: integer
        format: int32
        title: Trigger count with STATUS_ERRORED
        readOnly: true
      pipeline_release_id:
        type: string
        title: Version for the triggered pipeline if it is a release pipeline, else emtpy
        readOnly: true
      pipeline_release_uid:
        type: string
        title: UID for the triggered pipeline if it is a release pipeline, else emtpy
        readOnly: true
    title: |-
      PipelineTriggerTableRecord represents a aggregated table record for pipeline
      trigger
  v1betaPipelineUsageData:
    type: object
    properties:
      usages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaPipelineUsageDataUserUsageData'
        title: Usage data of all users in the pipeline service
    title: Pipeline service usage data
  v1betaPipelineUsageDataUserUsageData:
    type: object
    properties:
      owner_uid:
        type: string
        title: Owner UUID
      pipeline_trigger_data:
        type: array
        items:
          type: object
          $ref: '#/definitions/UserUsageDataPipelineTriggerData'
        title: Trigger data for each user
      owner_type:
        $ref: '#/definitions/v1betaOwnerType'
        title: Owner type
    title: Per user usage data in the pipeline service
    required:
      - owner_uid
      - pipeline_trigger_data
      - owner_type
  v1betaPipelineUsageRecord:
    type: object
    properties:
      request_id:
        type: string
        description: A unique request id given by vdp when trigger the pipeline.
      operation_id:
        type: string
        title: A unique operation id given by vdp
      status:
        type: string
        title: The HTTP status received when user trigger the pipeline
      trigger_time:
        type: string
        format: date-time
        title: Time when the pipeline is triggered
      record_time:
        type: string
        format: date-time
        title: Time when the pipeline trigger usage is recorded
      value:
        type: integer
        format: int32
        title: |-
          The pipeline trigger usage record. The unit of the usage should be
          consistent with Stripe
    title: Pipeline trigger usage record definition
    required:
      - request_id
      - operation_id
      - status
      - trigger_time
      - record_time
      - value
  v1betaPipelineView:
    type: string
    enum:
      - VIEW_BASIC
      - VIEW_FULL
      - VIEW_RECIPE
    description: |-
      View defines how a Pipeline is presented.

       - VIEW_UNSPECIFIED: Unspecified, equivalent to BASIC.
       - VIEW_BASIC: Default view, only includes basic information.
       - VIEW_FULL: Full representation.
       - VIEW_RECIPE: Contains the recipe of the resource.
  v1betaPriceData:
    type: object
    properties:
      time:
        $ref: '#/definitions/v1betaTimeInterval'
        title: Time when the price record is generated
      currency:
        type: string
        title: The currency of the price
        readOnly: true
      amount:
        type: number
        format: float
        title: The price of the query usage in the current billing period
        readOnly: true
    title: Pricing information
    required:
      - time
  v1betaRecipe:
    type: object
    properties:
      version:
        type: string
        title: Recipe schema version
      components:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1betaComponent'
        title: List of pipeline components
    title: Pipeline represents a pipeline recipe
  v1betaRenameOrganizationConnectorResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        title: A connector
    title: |-
      RenameOrganizationConnectorResponse represents a renamed Connector
      resource
  v1betaRenameOrganizationPipelineReleaseResponse:
    type: object
    properties:
      release:
        $ref: '#/definitions/v1betaPipelineRelease'
        title: A pipeline resource
    title: RenameOrganizationPipelineReleaseResponse represents a renamed pipeline release resource
  v1betaRenameOrganizationPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1betaPipeline'
        title: A pipeline resource
    title: RenameOrganizationPipelineResponse represents a renamed pipeline resource
  v1betaRenameUserConnectorResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        title: A connector
    title: |-
      RenameUserConnectorResponse represents a renamed Connector
      resource
  v1betaRenameUserPipelineReleaseResponse:
    type: object
    properties:
      release:
        $ref: '#/definitions/v1betaPipelineRelease'
        title: A pipeline resource
    title: RenameUserPipelineReleaseResponse represents a renamed pipeline release resource
  v1betaRenameUserPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1betaPipeline'
        title: A pipeline resource
    title: RenameUserPipelineResponse represents a renamed pipeline resource
  v1betaReportModelOnlineRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      model:
        $ref: '#/definitions/v1betaModelData'
        title: Model information
      cum_usage_record:
        $ref: '#/definitions/v1betaModelUsageRecord'
        title: Model online record
    title: |-
      ReportModelOnlineRequest represents a request for reporting a model-online
      record
    required:
      - user
      - model
      - cum_usage_record
  v1betaReportModelOnlineResponse:
    type: object
    properties:
      "null":
        $ref: '#/definitions/v1betaNullMessage'
        title: Null message for empty response
    title: |-
      ReportModelOnlineResponse represents a respond to a model-online-record
      report request
  v1betaReportModelOnlinesResponse:
    type: object
    properties:
      "null":
        $ref: '#/definitions/v1betaNullMessage'
        title: Null message for empty response
    title: |-
      ReportModelOnlinesResponse represents a respond to a model-online-records
      reporting bulk request
  v1betaReportPipelineTriggerRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1betaUserData'
        title: User information
      pipeline:
        $ref: '#/definitions/v1betaPipelineData'
        title: Pipeline information
      usage_record:
        $ref: '#/definitions/v1betaPipelineUsageRecord'
        title: Pipeline trigger record
    title: |-
      ReportPipelineTriggerRequest represents a request for reporting a
      pipeline-trigger record
    required:
      - user
      - pipeline
      - usage_record
  v1betaReportPipelineTriggerResponse:
    type: object
    properties:
      "null":
        $ref: '#/definitions/v1betaNullMessage'
        title: Null message for empty response
    title: |-
      ReportPipelineTriggerResponse represents a respond to a
      pipeline-trigger-record report request
  v1betaReportPipelineTriggersResponse:
    type: object
    properties:
      "null":
        $ref: '#/definitions/v1betaNullMessage'
        title: Null message for empty response
    title: |-
      ReportPipelineTriggersResponse represents a respond to a
      pipeline-trigger-records reporting bulk request
  v1betaRestoreOrganizationPipelineReleaseResponse:
    type: object
    properties:
      release:
        $ref: '#/definitions/v1betaPipelineRelease'
        title: A pipeline resource
    title: RestoreOrganizationPipelineReleaseResponse
  v1betaRestoreUserPipelineReleaseResponse:
    type: object
    properties:
      release:
        $ref: '#/definitions/v1betaPipelineRelease'
        title: A pipeline resource
    title: RestoreUserPipelineReleaseResponse
  v1betaRole:
    type: string
    enum:
      - ROLE_VIEWER
      - ROLE_EXECUTOR
    description: |-
      - ROLE_UNSPECIFIED: ROLE: UNSPECIFIED
       - ROLE_VIEWER: Role: Viewer
       - ROLE_EXECUTOR: Role: Executor
    title: Role
  v1betaSendSessionReportResponse:
    type: object
    title: SendReportResponse represents an empty response
  v1betaSession:
    type: object
    properties:
      name:
        type: string
        title: Resource name in the format of 'sessions/uid'
        readOnly: true
      uid:
        type: string
        title: Resource UUID
        readOnly: true
      service:
        $ref: '#/definitions/SessionService'
        title: name of the service to collect data from
      edition:
        type: string
        title: 'Session edition, allowed values include: ''local-ce'' and ''local-ce:dev'''
      version:
        type: string
        title: Version of the service
      arch:
        type: string
        title: Architecture of the system
      os:
        type: string
        title: Operating system
      uptime:
        type: string
        format: int64
        title: Session service uptime
      report_time:
        type: string
        format: date-time
        title: Report time
      token:
        type: string
        description: |-
          Token to send report. The token is generated by the server and sent to
          the client. Client needs to use the token to send report to the server.
        readOnly: true
      create_time:
        type: string
        format: date-time
        title: Session creation time
        readOnly: true
      update_time:
        type: string
        format: date-time
        title: Session update time
        readOnly: true
      owner_uid:
        type: string
        title: Owner UUID of the instance, can also be considered as instance UUID
    title: |-
      Session represents a unique session whenever a new instance of VDP service
      gets started. The usage server returns a token that should be used as part of
      the challenge when sending a report with data collected from this session
    required:
      - service
      - edition
      - version
      - arch
      - os
      - uptime
      - report_time
      - owner_uid
  v1betaSessionReport:
    type: object
    properties:
      session_uid:
        type: string
        title: Session uid
      token:
        type: string
        title: Session token
      pow:
        type: string
        title: Proof-of-work See https://en.wikipedia.org/wiki/Proof_of_work
      session:
        $ref: '#/definitions/v1betaSession'
        title: Session
      mgmt_usage_data:
        $ref: '#/definitions/v1betaMgmtUsageData'
        title: Management service usage data
      connector_usage_data:
        $ref: '#/definitions/v1betaConnectorUsageData'
        title: Connector service usage data
      model_usage_data:
        $ref: '#/definitions/v1betaModelUsageData'
        title: Model service usage data
      pipeline_usage_data:
        $ref: '#/definitions/v1betaPipelineUsageData'
        title: Pipeline service usage data
    title: |-
      SessionReport represents a report to be sent to the server that includes the
      usage data of a session
    required:
      - session_uid
      - token
      - pow
      - session
  v1betaSharing:
    type: object
    properties:
      users:
        type: object
        additionalProperties:
          $ref: '#/definitions/v1betaSharingUser'
        title: users
      share_code:
        $ref: '#/definitions/SharingShareCode'
        title: shared code
    title: Sharing
  v1betaSharingUser:
    type: object
    properties:
      enabled:
        type: boolean
        title: enabled
      role:
        $ref: '#/definitions/v1betaRole'
        title: role
    title: User
  v1betaSubscription:
    type: object
    properties:
      plan:
        type: string
        title: plan
    title: Subscription
  v1betaTestOrganizationConnectorResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1betaConnectorState'
        title: Retrieved connector state
    title: |-
      TestOrganizationConnectorResponse represents a response containing a
      connector's current state
  v1betaTestUserConnectorResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1betaConnectorState'
        title: Retrieved connector state
    title: |-
      TestUserConnectorResponse represents a response containing a
      connector's current state
  v1betaTimeInterval:
    type: object
    properties:
      start_time:
        type: string
        format: date-time
        title: Start time of the interval
      end_time:
        type: string
        format: date-time
        title: End time of the interval
    title: Time interval
    required:
      - start_time
      - end_time
  v1betaTrace:
    type: object
    properties:
      statuses:
        type: array
        items:
          $ref: '#/definitions/v1betaTraceStatus'
        title: status
      inputs:
        type: array
        items:
          type: object
        title: Inputs of the component
      outputs:
        type: array
        items:
          type: object
        title: Outputs of the component
      error:
        type: object
        title: Error of the component
      compute_time_in_seconds:
        type: number
        format: float
        title: Compute Time
    title: Trace for the intermediate component
  v1betaTraceStatus:
    type: string
    enum:
      - STATUS_COMPLETED
      - STATUS_SKIPPED
      - STATUS_ERROR
    description: |-
      - STATUS_UNSPECIFIED: UNSPECIFIED
       - STATUS_COMPLETED: COMPLETED
       - STATUS_SKIPPED: SKIPPED
       - STATUS_ERROR: ERROR
    title: Status
  v1betaTriggerAsyncOrganizationPipelineReleaseResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: Trigger async pipeline operation message
        readOnly: true
    title: |-
      TriggerAsyncOrganizationPipelineReleaseResponse represents a response for the longrunning
      operation of a pipeline
  v1betaTriggerAsyncOrganizationPipelineResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: Trigger async pipeline operation message
        readOnly: true
    title: |-
      TriggerAsyncOrganizationPipelineResponse represents a response for the longrunning
      operation of a pipeline
  v1betaTriggerAsyncUserPipelineReleaseResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: Trigger async pipeline operation message
        readOnly: true
    title: |-
      TriggerAsyncUserPipelineReleaseResponse represents a response for the longrunning
      operation of a pipeline
  v1betaTriggerAsyncUserPipelineResponse:
    type: object
    properties:
      operation:
        $ref: '#/definitions/googlelongrunningOperation'
        title: Trigger async pipeline operation message
        readOnly: true
    title: |-
      TriggerAsyncUserPipelineResponse represents a response for the longrunning
      operation of a pipeline
  v1betaTriggerMetadata:
    type: object
    properties:
      traces:
        type: object
        additionalProperties:
          $ref: '#/definitions/v1betaTrace'
        title: 'The traces of the pipeline inference, {component_id: Trace}'
    title: The metadata
  v1betaTriggerOrganizationPipelineReleaseResponse:
    type: object
    properties:
      outputs:
        type: array
        items:
          type: object
        title: The multiple model inference outputs
      metadata:
        $ref: '#/definitions/v1betaTriggerMetadata'
        title: 'The traces of the pipeline inference, {component_id: Trace}'
    title: |-
      TriggerOrganizationPipelineReleaseResponse represents a response for the output
      of a pipeline, i.e., the multiple model inference outputs
  v1betaTriggerOrganizationPipelineResponse:
    type: object
    properties:
      outputs:
        type: array
        items:
          type: object
        title: The multiple model inference outputs
      metadata:
        $ref: '#/definitions/v1betaTriggerMetadata'
        title: 'The traces of the pipeline inference, {component_id: Trace}'
    title: |-
      TriggerOrganizationPipelineResponse represents a response for the output
      of a pipeline, i.e., the multiple model inference outputs
  v1betaTriggerUserPipelineReleaseResponse:
    type: object
    properties:
      outputs:
        type: array
        items:
          type: object
        title: The multiple model inference outputs
      metadata:
        $ref: '#/definitions/v1betaTriggerMetadata'
        title: 'The traces of the pipeline inference, {component_id: Trace}'
    title: |-
      TriggerUserPipelineReleaseResponse represents a response for the output
      of a pipeline, i.e., the multiple model inference outputs
  v1betaTriggerUserPipelineResponse:
    type: object
    properties:
      outputs:
        type: array
        items:
          type: object
        title: The multiple model inference outputs
      metadata:
        $ref: '#/definitions/v1betaTriggerMetadata'
        title: 'The traces of the pipeline inference, {component_id: Trace}'
    title: |-
      TriggerUserPipelineResponse represents a response for the output
      of a pipeline, i.e., the multiple model inference outputs
  v1betaUpdateOrganizationConnectorResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        title: connector
    title: |-
      UpdateOrganizationConnectorResponse represents a response for a
      connector
  v1betaUpdateOrganizationMembershipResponse:
    type: object
    properties:
      membership:
        $ref: '#/definitions/v1betaOrganizationMembership'
        title: An updated membership resource
    title: UpdateOrganizationMembershipResponse represents a response for a membership resource
  v1betaUpdateOrganizationPipelineReleaseResponse:
    type: object
    properties:
      release:
        $ref: '#/definitions/v1betaPipelineRelease'
        title: An updated pipeline resource
    title: UpdateOrganizationPipelineReleaseResponse represents a response for a pipeline resource
  v1betaUpdateOrganizationPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1betaPipeline'
        title: An updated pipeline resource
    title: UpdateOrganizationPipelineResponse represents a response for a pipeline resource
  v1betaUpdateOrganizationResponse:
    type: object
    properties:
      organization:
        $ref: '#/definitions/v1betaOrganization'
        title: A organization resource
    title: UpdateOrganizationResponse represents a response for a organization resource
  v1betaUpdateUserConnectorResponse:
    type: object
    properties:
      connector:
        $ref: '#/definitions/v1betaConnector'
        title: connector
    title: |-
      UpdateUserConnectorResponse represents a response for a
      connector
  v1betaUpdateUserMembershipResponse:
    type: object
    properties:
      membership:
        $ref: '#/definitions/v1betaUserMembership'
        title: An updated membership resource
    title: UpdateUserMembershipResponse represents a response for a membership resource
  v1betaUpdateUserPipelineReleaseResponse:
    type: object
    properties:
      release:
        $ref: '#/definitions/v1betaPipelineRelease'
        title: An updated pipeline resource
    title: UpdateUserPipelineReleaseResponse represents a response for a pipeline resource
  v1betaUpdateUserPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1betaPipeline'
        title: An updated pipeline resource
    title: UpdateUserPipelineResponse represents a response for a pipeline resource
  v1betaUsageSummary:
    type: object
    properties:
      time:
        type: string
        format: date-time
        title: Time when the summary is generated
      value:
        type: integer
        format: int32
        title: The total usage since the beginning of the current billing period
    title: Usage summary definition
    required:
      - time
      - value
  v1betaUserData:
    type: object
    properties:
      uid:
        type: string
        title: User unique id
      name:
        type: string
        title: User name, which is not necessary for service queries
    title: User records definition
    required:
      - uid
  v1betaUserMembership:
    type: object
    properties:
      name:
        type: string
        description: Resource name. It must have the format of "users/*/memberships/*".
        readOnly: true
      role:
        type: string
        title: Role
        readOnly: true
      state:
        $ref: '#/definitions/v1betaMembershipState'
        title: State
      user:
        $ref: '#/definitions/mgmtv1betaUser'
        title: User
        readOnly: true
      organization:
        $ref: '#/definitions/v1betaOrganization'
        title: Organization
        readOnly: true
    title: Membership represents the content of a membership
    required:
      - state
  v1betaValidateOrganizationPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1betaPipeline'
        title: A pipeline resource
    title: ValidateOrganizationPipelineResponse represents an response of validated pipeline
  v1betaValidateTokenResponse:
    type: object
    properties:
      user_uid:
        type: string
        title: user_uid
        readOnly: true
    title: Response for validating the token
  v1betaValidateUserPipelineResponse:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/v1betaPipeline'
        title: A pipeline resource
    title: ValidateUserPipelineResponse represents an response of validated pipeline
  v1betaWatchOrganizationConnectorResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1betaConnectorState'
        title: Retrieved connector state
    title: |-
      WatchOrganizationConnectorResponse represents a response to fetch a
      connector's current state
  v1betaWatchOrganizationPipelineReleaseResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/pipelinev1betaState'
        title: Retrieved pipeline state
    title: |-
      WatchOrganizationPipelineReleaseResponse represents a response to fetch a pipeline's
      current state
  v1betaWatchUserConnectorResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/v1betaConnectorState'
        title: Retrieved connector state
    title: |-
      WatchUserConnectorResponse represents a response to fetch a
      connector's current state
  v1betaWatchUserPipelineReleaseResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/pipelinev1betaState'
        title: Retrieved pipeline state
    title: |-
      WatchUserPipelineReleaseResponse represents a response to fetch a pipeline's
      current state
  vdpcontrollerv1betaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1betaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  vdpcontrollerv1betaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1betaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
  vdppipelinev1betaLivenessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1betaHealthCheckResponse'
        title: HealthCheckResponse message
    title: LivenessResponse represents a response for a service liveness status
  vdppipelinev1betaReadinessResponse:
    type: object
    properties:
      health_check_response:
        $ref: '#/definitions/v1betaHealthCheckResponse'
        title: HealthCheckResponse message
    title: ReadinessResponse represents a response for a service readiness status
securityDefinitions:
  Bearer:
    type: apiKey
    description: Enter the token with the `Bearer ` prefix, e.g. `Bearer abcde12345`
    name: Authorization
    in: header
security:
  - Bearer: []
externalDocs:
  description: More about Instill AI
  url: https://www.instill.tech/docs
