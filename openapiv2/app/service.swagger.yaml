swagger: "2.0"
info:
  title: "\U0001F4F1 App "
  description: App endpoints to manage app resources
  version: v0.40.1-beta
  contact:
    name: Instill AI
    url: https://github.com/instill-ai
    email: hello@instill.tech
  license:
    name: Elastic License 2.0 (ELv2)
    url: https://github.com/instill-ai/protobufs/blob/main/LICENSE
tags:
  - name: App
    description: App endpoints
host: api.instill.tech
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1alpha/namespaces/{namespaceId}/apps:
    get:
      summary: Get all apps info
      operationId: AppPublicService_ListApps
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListAppsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: namespaceId
          description: User ID for which to list the apps
          in: path
          required: true
          type: string
      tags:
        - App
    post:
      summary: Create a App
      operationId: AppPublicService_CreateApp
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCreateAppResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: namespaceId
          description: The app's owner(namespaces).
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AppPublicServiceCreateAppBody'
      tags:
        - App
  /v1alpha/namespaces/{namespaceId}/apps/{appId}:
    delete:
      summary: Delete a app
      operationId: AppPublicService_DeleteApp
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeleteAppResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: namespaceId
          description: The owner's id. i.e. namespace.
          in: path
          required: true
          type: string
        - name: appId
          description: The app id.
          in: path
          required: true
          type: string
      tags:
        - App
    put:
      summary: Update a app info
      operationId: AppPublicService_UpdateApp
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUpdateAppResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: namespaceId
          description: namespace id
          in: path
          required: true
          type: string
        - name: appId
          description: app id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AppPublicServiceUpdateAppBody'
      tags:
        - App
  /v1alpha/namespaces/{namespaceId}/apps/{appId}/conversations:
    get:
      summary: List conversations
      operationId: AppPublicService_ListConversations
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListConversationsResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: namespaceId
          description: namespace id
          in: path
          required: true
          type: string
        - name: appId
          description: app id
          in: path
          required: true
          type: string
        - name: pageSize
          description: page size
          in: query
          required: false
          type: integer
          format: int32
        - name: pageToken
          description: page token
          in: query
          required: false
          type: string
        - name: conversationUid
          description: |-
            conversation_uid this is optional, if provided, only the conversation with the given conversation_uid will be returned
            first check conversation_uid, then check conversation_id, then check if_all
          in: query
          required: false
          type: string
        - name: conversationId
          description: conversation_id this is optional, if provided, only the conversation with the given conversation_id will be returned
          in: query
          required: false
          type: string
        - name: ifAll
          description: If true, all conversations will be returned. This has higher priority over conversation_id, page_size, and page_token.
          in: query
          required: false
          type: boolean
      tags:
        - App
    post:
      summary: Create a Conversation
      operationId: AppPublicService_CreateConversation
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCreateConversationResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: namespaceId
          description: namespace id
          in: path
          required: true
          type: string
        - name: appId
          description: app id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AppPublicServiceCreateConversationBody'
      tags:
        - App
  /v1alpha/namespaces/{namespaceId}/apps/{appId}/conversations/{conversationId}:
    delete:
      summary: Delete a conversation
      operationId: AppPublicService_DeleteConversation
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeleteConversationResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: namespaceId
          description: namespace id
          in: path
          required: true
          type: string
        - name: appId
          description: app id
          in: path
          required: true
          type: string
        - name: conversationId
          description: conversation id
          in: path
          required: true
          type: string
      tags:
        - App
    put:
      summary: Update a conversation
      operationId: AppPublicService_UpdateConversation
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUpdateConversationResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: namespaceId
          description: namespace id
          in: path
          required: true
          type: string
        - name: appId
          description: app id
          in: path
          required: true
          type: string
        - name: conversationId
          description: conversation id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AppPublicServiceUpdateConversationBody'
      tags:
        - App
  /v1alpha/namespaces/{namespaceId}/apps/{appId}/conversations/{conversationId}/messages:
    get:
      summary: List messages
      operationId: AppPublicService_ListMessages
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaListMessagesResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: namespaceId
          description: namespace id
          in: path
          required: true
          type: string
        - name: appId
          description: app id
          in: path
          required: true
          type: string
        - name: conversationId
          description: conversation id
          in: path
          required: true
          type: string
        - name: latestK
          description: latest k messages
          in: query
          required: false
          type: integer
          format: int32
        - name: pageSize
          description: page size
          in: query
          required: false
          type: integer
          format: int32
        - name: pageToken
          description: page token
          in: query
          required: false
          type: string
        - name: includeSystemMessages
          description: include system messages
          in: query
          required: false
          type: boolean
        - name: ifAll
          description: If true, all messages will be returned. This has higher priority over latest_k, page_size, and page_token.
          in: query
          required: false
          type: boolean
        - name: messageUid
          description: message_uid this is optional, if provided, only the message with the given message_uid will be returned
          in: query
          required: false
          type: string
      tags:
        - App
    post:
      summary: Create a message
      operationId: AppPublicService_CreateMessage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaCreateMessageResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: namespaceId
          description: namespace id
          in: path
          required: true
          type: string
        - name: appId
          description: app id
          in: path
          required: true
          type: string
        - name: conversationId
          description: conversation id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AppPublicServiceCreateMessageBody'
      tags:
        - App
  /v1alpha/namespaces/{namespaceId}/apps/{appId}/conversations/{conversationId}/messages/{messageUid}:
    delete:
      summary: Delete a message
      operationId: AppPublicService_DeleteMessage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaDeleteMessageResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: namespaceId
          description: namespace id
          in: path
          required: true
          type: string
        - name: appId
          description: app id
          in: path
          required: true
          type: string
        - name: conversationId
          description: conversation id
          in: path
          required: true
          type: string
        - name: messageUid
          description: message uid
          in: path
          required: true
          type: string
      tags:
        - App
    put:
      summary: Update a message
      operationId: AppPublicService_UpdateMessage
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUpdateMessageResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: namespaceId
          description: namespace id
          in: path
          required: true
          type: string
        - name: appId
          description: app id
          in: path
          required: true
          type: string
        - name: conversationId
          description: conversation id
          in: path
          required: true
          type: string
        - name: messageUid
          description: message uid
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AppPublicServiceUpdateMessageBody'
      tags:
        - App
  /v1alpha/namespaces/{namespaceId}/apps/{appId}/ai_assistant_playground:
    put:
      summary: Update ai assistant app playground
      operationId: AppPublicService_UpdateAiAssistantAppPlayground
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1alphaUpdateAiAssistantAppPlaygroundResponse'
        "401":
          description: Returned when the client credentials are not valid.
          schema: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: namespaceId
          description: The namespace id.
          in: path
          required: true
          type: string
        - name: appId
          description: The app id.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AppPublicServiceUpdateAiAssistantAppPlaygroundBody'
      tags:
        - App
definitions:
  AppPublicServiceCreateAppBody:
    type: object
    properties:
      id:
        type: string
        description: |-
          The app id.
          the app id should be lowercase without any space or special character besides the hyphen,
          it can not start with number or hyphen, and should be less than 32 characters.
      description:
        type: string
        description: The app description.
      tags:
        type: array
        items:
          type: string
        description: The app tags.
    description: CreateAppRequest represents a request to create a app.
    required:
      - id
  AppPublicServiceCreateConversationBody:
    type: object
    properties:
      conversationId:
        type: string
        title: conversation id. only allow kebab case
    title: CreateConversationRequest is used to create a new conversation
    required:
      - conversationId
  AppPublicServiceCreateMessageBody:
    type: object
    properties:
      content:
        type: string
        title: message content
      role:
        type: string
        title: message role
      type:
        title: message type
        allOf:
          - $ref: '#/definitions/MessageMessageType'
    title: CreateMessageRequest is used to create a new message
    required:
      - content
      - role
      - type
  AppPublicServiceUpdateAiAssistantAppPlaygroundBody:
    type: object
    properties:
      lastAiAppCatalogUid:
        type: string
        description: The last ai app uses catalog uid.
      lastAiAppTopK:
        type: integer
        format: int32
        description: The last ai app uses top k.
      lastAiAppConversationUid:
        type: string
        description: The last ai app uses conversation uid.
    description: |-
      UpdateAiAssistantAppPlaygroundRequest represents a request to update a ai assistant app playground.
      after the update, the app's metadata will be updated with the last ai assistant app
      uses catalog uid, top k, and conversation uid.
      parameters:
      - namespace_id: the namespace id.
      - app_id: the app id.
      - last_ai_app_catalog_uid: the last ai app catalog uid.
      - last_ai_app_top_k: the last ai app top k.
      - last_ai_app_conversation_uid: the last ai app conversation uid.
  AppPublicServiceUpdateAppBody:
    type: object
    properties:
      newAppId:
        type: string
        description: The app id needs to follow the kebab case format.
      newDescription:
        type: string
        description: The app description.
      newTags:
        type: array
        items:
          type: string
        description: The app tags.
      lastAiAssistantAppCatalogUid:
        type: string
        title: last ai assistant app catalog uid
      lastAiAssistantAppTopK:
        type: integer
        format: int32
        title: last ai assistant app top k
    description: UpdateAppRequest represents a request to update a app.
  AppPublicServiceUpdateConversationBody:
    type: object
    properties:
      newConversationId:
        type: string
        title: new conversation id
    title: UpdateConversationRequest is used to update a conversation
    required:
      - newConversationId
  AppPublicServiceUpdateMessageBody:
    type: object
    properties:
      content:
        type: string
        title: new message content
    title: UpdateMessageRequest is used to update a message
    required:
      - content
  MessageMessageType:
    type: string
    enum:
      - MESSAGE_TYPE_TEXT
    description: '- MESSAGE_TYPE_TEXT: text'
    title: message type
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1alphaAiAssistantAppMetadata:
    type: object
    properties:
      catalogUid:
        type: string
        description: The ai assistant app catalog uid.
      topK:
        type: integer
        format: int32
        description: The ai assistant app top k.
      conversationUid:
        type: string
        description: The ai assistant app conversation uid.
    description: AiAssistantAppMetadata represents the metadata for the ai assistant app.
    required:
      - catalogUid
      - topK
      - conversationUid
  v1alphaApp:
    type: object
    properties:
      appId:
        type: string
        description: The app id.
      description:
        type: string
        description: The app description.
      createTime:
        type: string
        format: date-time
        description: The creation time of the app.
        readOnly: true
      updateTime:
        type: string
        format: date-time
        description: The last update time of the app.
        readOnly: true
      ownerUid:
        type: string
        description: The owner/namespace of the app.
        readOnly: true
      tags:
        type: array
        items:
          type: string
        description: The app tags.
      aiAssistantApp:
        description: The ai assistant app metadata.
        readOnly: true
        allOf:
          - $ref: '#/definitions/v1alphaAiAssistantAppMetadata'
      appType:
        description: The app type.
        readOnly: true
        allOf:
          - $ref: '#/definitions/v1alphaAppType'
      appUid:
        type: string
        title: app uid
        readOnly: true
      creatorUid:
        type: string
        title: creator uid
        readOnly: true
    description: App represents a app.
    required:
      - appId
  v1alphaAppType:
    type: string
    enum:
      - APP_TYPE_AI_ASSISTANT
    description: |-
      AppType represents the type of the app.

       - APP_TYPE_AI_ASSISTANT: AppType is a AI assistant app.
  v1alphaConversation:
    type: object
    properties:
      uid:
        type: string
        title: unique identifier of the conversation created by the system
        readOnly: true
      namespaceId:
        type: string
        title: namespace id
      appId:
        type: string
        title: app id
      id:
        type: string
        title: conversation id/name
      createTime:
        type: string
        format: date-time
        title: creation time of the conversation
        readOnly: true
      updateTime:
        type: string
        format: date-time
        title: update time of the conversation
        readOnly: true
    title: Conversation represents a chat conversation
    required:
      - namespaceId
      - appId
      - id
  v1alphaCreateAppResponse:
    type: object
    properties:
      app:
        description: The created app.
        readOnly: true
        allOf:
          - $ref: '#/definitions/v1alphaApp'
    description: CreateAppResponse represents a response for creating a app.
  v1alphaCreateConversationResponse:
    type: object
    properties:
      conversation:
        title: conversation
        readOnly: true
        allOf:
          - $ref: '#/definitions/v1alphaConversation'
    title: CreateConversationResponse returns the created conversation
  v1alphaCreateMessageResponse:
    type: object
    properties:
      message:
        title: message
        allOf:
          - $ref: '#/definitions/v1alphaMessage'
    title: CreateMessageResponse returns the created message
  v1alphaDeleteAppResponse:
    type: object
    description: DeleteAppResponse represents a response for deleting a app.
  v1alphaDeleteConversationResponse:
    type: object
    title: DeleteConversationResponse is empty as no content needs to be returned
  v1alphaDeleteMessageResponse:
    type: object
    title: DeleteMessageResponse is empty as no content needs to be returned
  v1alphaListAppsResponse:
    type: object
    properties:
      apps:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaApp'
        description: The apps container.
        readOnly: true
    description: GetAppsResponse represents a response for getting all apps from users.
  v1alphaListConversationsResponse:
    type: object
    properties:
      conversations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaConversation'
        title: conversations
        readOnly: true
      nextPageToken:
        type: string
        title: next page token
        readOnly: true
      totalSize:
        type: integer
        format: int32
        title: total size
        readOnly: true
    title: ListConversationsResponse returns a list of conversations
  v1alphaListMessagesResponse:
    type: object
    properties:
      messages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaMessage'
        title: messages
        readOnly: true
      nextPageToken:
        type: string
        title: next page token
        readOnly: true
      totalSize:
        type: integer
        format: int32
        title: total size
        readOnly: true
      senderProfiles:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1alphaMessageSenderProfile'
        title: message sender profiles
        readOnly: true
    title: ListMessagesResponse returns a list of messages
  v1alphaMessage:
    type: object
    properties:
      uid:
        type: string
        title: message uid
        readOnly: true
      appUid:
        type: string
        title: app uid
        readOnly: true
      conversationUid:
        type: string
        title: conversation uid
        readOnly: true
      content:
        type: string
        title: message content
      role:
        type: string
        title: message role e.g., "user" or "assistant"
      type:
        title: message type
        allOf:
          - $ref: '#/definitions/MessageMessageType'
      createTime:
        type: string
        format: date-time
        title: creation time of the message
        readOnly: true
      updateTime:
        type: string
        format: date-time
        title: update time of the message
        readOnly: true
      msgSenderUid:
        type: string
        title: message sender uid
        readOnly: true
    title: Message represents a single message in a conversation
    required:
      - content
      - role
      - type
  v1alphaMessageSenderProfile:
    type: object
    properties:
      msgSenderUid:
        type: string
        title: sender uid
        readOnly: true
      msgSenderId:
        type: string
        title: sender id
        readOnly: true
      displayName:
        type: string
        description: Display name.
        readOnly: true
      avatar:
        type: string
        description: Avatar url. this url might be expired or not exist.
        readOnly: true
    description: |-
      MessageSenderProfile describes the public data of a message sender.
      refer to core.mgmt.v1beta.UserProfile for more details.
  v1alphaUpdateAiAssistantAppPlaygroundResponse:
    type: object
    description: UpdateAiAssistantAppPlaygroundResponse represents a response for updating a ai assistant app playground.
  v1alphaUpdateAppResponse:
    type: object
    properties:
      app:
        description: The updated app.
        readOnly: true
        allOf:
          - $ref: '#/definitions/v1alphaApp'
    description: UpdateAppResponse represents a response for updating a app.
  v1alphaUpdateConversationResponse:
    type: object
    properties:
      conversation:
        title: conversation
        readOnly: true
        allOf:
          - $ref: '#/definitions/v1alphaConversation'
    title: UpdateConversationResponse returns the updated conversation
  v1alphaUpdateMessageResponse:
    type: object
    properties:
      message:
        title: message
        readOnly: true
        allOf:
          - $ref: '#/definitions/v1alphaMessage'
    title: UpdateMessageResponse returns the updated message
securityDefinitions:
  Bearer:
    type: apiKey
    description: Enter the token with the `Bearer ` prefix, e.g. `Bearer abcde12345`
    name: Authorization
    in: header
    x-default: Bearer instill_sk_***
security:
  - Bearer: []
externalDocs:
  description: More about Instill AI
  url: https://www.instill.tech/docs
